04 décembre 2020:
	0 infinite zoom (==depth) canvas html5
		0 Milton
		  https://github.com/serge-rgb/milton
**	1 https://github.com/TomHumphries/InfiniteCanvasWhiteboard  -->  https://infiniboards.com/
			1 check out the code
				1 index.html
					only 300 lines of code, all canvas related

	0 infiniteShu
			0 import img

				<p>Image to use:</p>
				<img id="scream" width="220" height="277" src="img_the_scream.jpg" alt="The Scream">

				<script>
				window.onload = function() {
				  var c = document.getElementById("myCanvas");
				  var ctx = c.getContext("2d");
				  var img = document.getElementById("scream");
				  ctx.drawImage(img, 10, 10);
				}
				</script>

				1 get img
					=> express
					1 >npm init
					1 npm install express
					1 app.get('/', function(req, res) {
  						res.sendFile(__dirname + '/index.html', {}, function(err) {

				1 draw img
				1 draw scream at zoom
					1 document.addEventListener('keypress', handleKeyPress);
					0 drawing.Line
					0 drawing.Img

				 1 img extent
					1 trueRect / screenRect
						1 getWindowRect
								cursorX = event.pageX;
		            cursorY = event.pageY;
		            const scaledX = toTrueX(cursorX);
		            const scaledY = toTrueY(cursorY);

*[
								// coordinates of our cursor
				        let cursorX;
				        let cursorY;

				        // distance from origin
				        let offsetX = 0;
				        let offsetY = 0;

				        // zoom amount
				        let scale = 1;
*]

							1 getCanvasBoudingRect()
*							1 toTrueRect(rect)    /   toScreenRect(trueRect)
							void ctx.drawImage(image, dx, dy, dWidth, dHeight);
				=> Zimage
				1 import any image
					1 I for import

					0? angular
						ctrl.processInput = function(event){
								const fileList = event.target.files;
								//console.log("fileList:", fileList);

								const file = fileList[0];
								ctrl.onNewInput({file: file});
						};

					1 input
						<input type="file" id="file-selector" accept=".jpg, .jpeg, .png">
						<script>
						  const fileSelector = document.getElementById('file-selector');
						  fileSelector.addEventListener('change', (event) => {
						    const fileList = event.target.files;
						    console.log(fileList);
						  });
						</script>

						function openFileOption() {
							document.getElementById("file-selector").click();
						}

					1 Uncaught TypeError: Cannot read property 'img' of undefined
				    	at redrawCanvas ((index):162)
				    	at HTMLCanvasElement.onMouseWheel ((index):632)

			1 save / load
			infinishute_lol : 424 ko
				==>>files will be big (but it does not matter for the moment)
			0 povRect
				0 save
				0 moveToPovRect
				0 moveToPovWithPointAndZoomLevel

			0 defaultPOV

			0 cypher infinishute

			0 paste img

				document.onpaste = function(event)
				{
				    var items = event.clipboardData.items;
				    console.log(JSON.stringify(items)); // will give you the mime types
				    var blob = items[0].getAsFile();
				    var reader = new FileReader();
				    reader.onload = function(event)
				    {
				        console.log(event.target.result)
				    }; // data url
				    reader.readAsDataURL(blob);
				}


			0 embed all javascript in html page
			0 share on github
			0 don't draw if too small
			0 delete zimage


			0 create zoom loops

*	0 there is so much space, that one can hide messages in the vast infinity

05 décembre 2020:

	0 paste
		1 copy image
		1 it works also with screen capture
		0 copy file does not work

	0 échelle
		0 double flèche
		0 fabric.js
	0 dépose
		0 mesure
		0 fine tuning
		0 layer
		0 canvas objects
	0 parcours
		0 arbre
		0 notation 0-20 : nb_questions = n(n-1)/2 = 190
	0 auto open file
	OR
	0 embed content
	0 enable/disable buttons (import image, etc.)

	0 scroll : precise / coarse, scroll intensity
		0 scroll + key

	onkeypress : invokes JavaScript code when a key is pressed
	onkeydown  : invokes JavaScript code when a key is held down (but not yet released)
	onkeyup    : invokes JavaScript code when a key is has been released after being pressed.


	document.addEventListener('click', function (e) {
		if (e.ctrlKey) {
			console.log('With ctrl, do something...');
			return;
		}
	});

	https://stackoverflow.com/questions/13873579/disable-zoom-in-browser-using-jquery-javascript

	$(document).keydown(function(event) {
	if (event.ctrlKey==true && (event.which == '61' || event.which == '107' || event.which == '173' || event.which == '109'  || event.which == '187'  || event.which == '189'  ) ) {
					event.preventDefault();
			 }
			// 107 Num Key  +
			// 109 Num Key  -
			// 173 Min Key  hyphen/underscor Hey
			// 61 Plus key  +/= key
	});

	$(window).bind('mousewheel DOMMouseScroll', function (event) {
				 if (event.ctrlKey == true) {
				 event.preventDefault();
				 }
	});



	const scaleAmount = -deltaY * scroll_step;
	scale = scale * (1 + scaleAmount);



	0 fabric
		0 rm redrawCanvas()

		0 Uncaught TypeError: canvas.addEventListener is not a function
					<anonymous> http://localhost:3000/:971

		0 Uncaught TypeError: canvas.getBoundingClientRect is not a function
		0 canvas.renderAll()

		0 the loop:
			on drag: setPov
			updatePositions

		0 if object.zPosition is close to current zoomLevel : object can be selected


		0 manage container ("auto group")

					0 if (rightMouseDown) {
									// move the screen
									offsetX += (cursorX - prevCursorX) / scale;
									offsetY += (cursorY - prevCursorY) / scale;
									redrawCanvas();
						}



					const point_screen = {
						x:0,
						y:0,
					};

					updateScreenPosition(point) {
						point_screen.x = point.x;
						point_screen.y = point.y;

						updateFabricObjectsPosition();
					}

	aCoords.tl.x
	aCoords VS oCoords
	https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords
	Some actions require calling object.setCoords() in order to make the control positions recalculate.

	fObj.trueRect
		0 ? wrapper
	1 onMouseMove
		1 updateDOffset()
		0 move multiplier (slow / fast)
	0 onMouseWheel
		0 updateScale()
			0 centeredZoom
		0 updateScaleAndDOffset() :
			0 zoom where the cursor is

	0 onTouchMove

	0 make if fluid
	0 fabric image
	0 fabric text
		0 updateFontSize(scale)

	0 console.log slows screen refresh a lot

	0 around fabric
		0 move / resize / rotate
		0 copy / paste / cut
		0 delete object

	0 serialization


06 Décembre 2020:

*	0 Zoom-in
		0 rectangular selection
		0 x10 rectangle

	0 Arrow:
		0 "horizontal arrow" : 10 fois plus loin
		0 "vertical arrow"   : 10 fois plus grand
		0 "oblique arrow"    : itinéraire (ou mesure)

	0 "les deux amoureux" (each is on a planet)
	0 itinéraire:
	 		0 select pointA, pointB
			0 draw arrow
				0 orientation automatique de la flèche représentant l'ordre de grandeur courant en fonction de la flèche "itinéraire"
			0 find order of magnitude and "get there" (show the arrow with the "right size" wrt screen)

fObj.left = (fObj.trueRect.left + offset.dx) * scale

	0 Digit0|Numpad0 : move to initial pov
		=> let offset         = Object.assign({}, coords_initial.offset);
*		0 toaster "moved to initial pov"

	0 register pov
	0 Digit1|Numpad1 : move to pov #1, etc.

*	0 A + number : move to pov with animation
		penultimate
*		1 const [lastItem] = arr.slice(-1);

image.scaleToWidth(service.canvas.getWidth());

	0 PAUL's vision:
    deux calculs
      L'abscisse est la réponse à la question 1
      L'ordonnée est la réponse à la question 2
      Abscisse et ordonnée par rapport au _repère courant_

      avec un repérage "A1":
      on peut utiliser les préfixes comme indicateur de colonne

    tableau d'un peintre: fractale

_
AND THEN HE REALIZED IT ALREADY EXISTED : geogebra
	0 geogebra pros:
		anyone can access it
		geometry features
		scripts can be used on objects
		croquis
		scroller
		layers
		axes
		grid
		snap to grid
		nice zip format (.ggb) (only serializes image once when used multiple times)
	0 infinishu pros:
		0 I can do crazy things
			0 loops
		0 I can customize the way I want
		 	0	can create my GUI
			0 can add any lib
		0 I can cypher the file
		0 I can obfuscate the code

0 from question A to question B:
	0 create line from A to B and follow it in the direction of the arrow till you meet the next exercise
	0 warp

0 from question A,B and C to question D:
	0 triangulate


08 décembre 2020:

* Fabric canvas has zoom property
		http://fabricjs.com/fabric-intro-part-5#pan_zoom

canvas.on('mouse:wheel', function(opt) {
  var delta = opt.e.deltaY;
  var zoom = canvas.getZoom();
  zoom *= 0.999 ** delta;
  if (zoom > 20) zoom = 20;
  if (zoom < 0.01) zoom = 0.01;
  canvas.setZoom(zoom);
  opt.e.preventDefault();
  opt.e.stopPropagation();
})

		0 ? is it compatible with infinite canvas 'requirement' ?


	0 track object move

canvas.on('object:moving', function(e) {
  var obj = e.target;

});

* 0 Fabric has animation features


** https://stackoverflow.com/questions/23418055/fabricjs-double-click-on-objects

0 event listeners
	1 fObj.on("moving") fObj.on("modified")

	0X fabric.util.addListener(canvas, 'object:modified', function (event, self) {
			|-> Uncaught TypeError: t.addEventListener is not a function
    			at Object.fabric.util.addListener (fabric.min.js:1)


09 décembre 2020:
	0 fabricjs editor:

		https://github.com/danielktaylor/fabric-js-editor
		simplicity:
		https://codepen.io/mhayr/pen/XWWawwR
		save:
		http://fabricjs.com/kitchensink


		https://www.npmjs.com/package/@axceta/angular-editor-fabric-js

	0 fabric.IText (interactive text)
		0 ignore keyboard shortcuts events while editing text

	1X text.fontSize
			|-> text is not sharp when zoomed in
			=> fObj.scaleX, fObj.scaleY

		https://stackoverflow.com/questions/33692728/fabric-js-increase-font-size-instead-of-just-scaling-when-resize-with-mouse/33693456
		https://www.geeksforgeeks.org/how-to-lock-uniform-scaling-of-a-text-canvas-using-fabric-js/

		fabricjs' uniform scaling lock (== keep proportions)
			There's a number of other transformation-related properties available in Fabric since version 1.0.
			One of them is "uniScaleTransform" on canvas instance.
			It's false by default, and can be used to enable non-uniform scaling of object;
			in other words, it allows to change object's proportions when dragging by the corners.

			=> trueFontSize (== starting_font_size * starting_scale)


			scale 1.0616832
			(index):296 fontSize 42.467328
			(index):296 fontSize 24.576
			(index):296 fontSize 1.914140241657432
			(index):296 fontSize 0.1533454044949374
			(index):296 fontSize 0.01194354694079574
			(index):296 fontSize 0.0011162902259522283
			(index):296 fontSize 0.00007245334346734032
			(index):296 fontSize 0.000003918848684055575
			(index):296 fontSize 7.125594164226069e-8
			(index):296 fontSize 5.089337617391772e-10
			(index):296 fontSize 1.3275055369709617e-11
			(index):296 fontSize 1.5033048482491563e-7
			(index):296 fontSize 1.2043260207222777e-8
			2(index):296 fontSize 4.649401161632606e-9
			(index):296 fontSize 1.409914756957336e-10
			(index):296 fontSize 4.7217759939682745e-11

			|-> problèmes d'arrondi
				=> 1 scale and fontSize should work together to keep it perfect (==not shifting)
*						=> if fontSize > 10000 : use scaleX scaleY
							|-> text is blurry when getting closer
								=> (0 text as SVG


	0 double click when zoomed : edit IText with closest zoomLevel

		event:added
		event:removed
		event:selected
		event:deselected
		event:modified
		event:modified
		event:moved
		event:scaled
		event:rotated
		event:skewed
		event:rotating
		event:scaling
		event:moving
		event:skewing
		event:mousedown
		event:mouseup
		event:mouseover
		event:mouseout
		event:mousewheel
		event:mousedblclick
		event:dragover
		event:dragenter
		event:dragleave
		event:drop

	1 fabric.Rect
		1 move
		1 scale
			/**
	     * Scales an object (equally by x and y)
	     * @param {Number} value Scale factor
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */
	    scale: function(value) {
	      this._set('scaleX', value);
	      this._set('scaleY', value);
	      return this.setCoords();
	    },

*[
		//not used:
		// width:  target.trueRect.width  * scale,
		// height: target.trueRect.height * scale,

		//used instead:
		width:  target.trueRect.width,
		height: target.trueRect.height,

		scaleX : original.scaleX,
		scaleY : original.scaleY,
*]


J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp>cmd /k node index.js
server is listening on 3000
_http_server.js:246
    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);
    ^

RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined
    at ServerResponse.writeHead (_http_server.js:246:11)
    at ServerResponse._implicitHeader (_http_server.js:237:8)
    at ServerResponse.end (_http_outgoing.js:779:10)
    at J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\index.js:21:34
    at J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:434:22
    at onaborted (J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:1027:5)
    at Immediate._onImmediate (J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:1067:9)
    at processImmediate (internal/timers.js:456:21) {
  code: 'ERR_HTTP_INVALID_STATUS_CODE'
}


11 décembre 2020:
	0 pov : save/load state : shift-number to save/ number to load(==move to pov)
*	0 use classes in script
**	0 class XIntegration {}
		0 have it working

			InfiniteCanvas
			State

			Geometry
			POV

			Animation

			ZImageIntegration
			FabricIntegration

			FileIntegration

			KeyboardIntegration
			MouseIntegration
			TouchIntegration

0 content:
	https://coursdemathematiquesaucollege.wordpress.com/category/cartes-mentales/

**0 import pdf

0 workflow :
		0 import mind map pdf
		0	enrich the map by adding
				0 neurohandle images : a goat, a lion,
					0 associate biome to zoomLevel
				0	content inside those neurohandles : exercices, problems, figures...

* 0 hardcore : zoom trap : when zooming out, user does not get to previous scene, but sees zoomed out current scene

13 décembre 2020:
	C'est à la fois motivant et démotivant d'avoir un zozo qui fait autre chose dans la même pièce

	1 class InputProperties:
			scrollProperties
			etc.

	0 keyboardIntegration.registerCallbackForKey("KeyI", () => fileIntegration.importImage());

	0 infiniteCanvas.fabricIntegration = this;
	0 this.infiniteCanvas.requestRedraw();


*	0 Model : InfiniteCanvas VS ViewController: FabricCanvas
		1 create model object
			1 user input
		1 show it in view
		0 fObj.on("moved") ==> update model
			0 icObj.id

14 Décembre 2020:
**Z-PUZZLE: bring object back to its corresponding slot (object can be extended, shrinked)
		0 click and scroll to change size
			0 long click| long press to lock obj selection

	1 fObj.on("moved") ==> 	model.update(icObj)		==>? redrawCanvas ?
			fObj.icObj.onUpdate(refreshCanvas = false)

15 Décembre 2020:
	0 resize
		1 fObj.on('scaling')
		1 z-resize: select then scroll
			0 ? keep topLeft VS keep center ?
*			1 updateFabricObjectsPosition|Size(redrawOccasion)
				from original redrawOccasion event
				to final redraw
				1 icObj.update

**	0 what is "fObj.original" after a zScroll ?
	 (0 cancel resize

 (0 rotate
		0 icObj.orientation

**Z-Puzzle avec des carrés : inscrire un nombre dans le carré, avec une double flèche pour indiquer la longueur du côté, _à l'intérieur_

0 Z-Puzzle Logo : write Z-Puzzle with squares of different sizes

	0 ZPuzzle
		0 class ZPuzzle
			0 keep zPuzzle at the back
		0 class ZPuzzleSlot
**		0 slot.tolerance
			0 slot.snap

			0 slot.border

			0 slot.content
C'est dommage, si j'avais fait ça en angularJS, j'aurais pu tout récupérer de cn

		0 WOW effects :
			0 puzzle pieces are on a blue background : blue background is only a small (blue) part of a big piece of the puzzle
			0 puzzle pieces are on a table : the table is a part of a big piece of the puzzle

		contentContainer:
			0 create group with fabric.Text inside and see how it resizes


before going further :
	0 a simple infinite canvas editor
		1 add rect
		0 add image
			1 get image
			1 resize
			0 correct spawn size
		0 add text
			0 resize
			0 manage blur when small (fontSize?)
			0 correct spawn size
			0 text changed (IText)

			0 fabric pattern :
			text.set('fill', new fabric.Pattern({
				source: img,
				repeat: document.getElementById('repeat').value
			}));
				0 regarder ce que ça donne quand on zoome beaucoup (fontSize > 10 000)


		0 move   objects
		0 rotate objects

		0 draw
			0 draw when key alt down
*			http://fabricjs.com/freedrawing : creates object for us when drawing is done
			fabric.freedrawing

		0 fabric.interaction
			0 create groups

		0 save/load
		0 zoom-in to cursor


scaleToWidth: function(value, absolute) {
      // adjust to bounding rect factor so that rotated shapes would fit as well
      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();
      return this.scale(value / this.width / boundingRectFactor);
    },


** 1 icObj.scale VS icObj.homeScale
			fabricScale = icObj.scale * icObj.homeScale
*			homeScale : the scale at which the object is sharp
*			homeScale is a position (~it is pos.z)
			whereas scale is an inner property

			homeSize = size * homeScale

*			1 zScroll simply updates object's homeScale

			1 icObj.homeScale.X
			1 icObj.scale.X
			(0 icObj.perceptionScale.X

			0solved fObj.darkScale
				fObj.darkScale : if (darkScale != -1) {doStuff; darkScale = -1;}

			0solved offsetChanged: do not update fObjs' sizes

			0solved zoomed-in square gets bigger and bigger when adding more squares
				icObj.perceptionScale

16 Décembre 2020:
	(0 Essayer la "darkScale"
	(0 réflechir théorique si la darkScale ne fonctionne pas
**	=> ! LA VALEUR POUR LA HOME SCALE N'ETAIT PAS BONNE, puisqu'il y a une fObj.scale != 1

	0 puzzle creation :
		0 image split
		0 create puzzle piece using cutting path

	0 commencer par un petit Z-puzzle à 4 pièces :
			initialisation : toutes les pièces sont carrés, de la même taille, de couleur différentes avec un numéro différent (1,2,3 ou 4)
			le slot pour le numéro 1 est très grand, on voit dans la vue initiale un petit morceau de bordure de 1
			le slot pour le numéro 2 est de taille initiale
			le slot pour le numéro 3 est petit mais on peut y arriver avec un resize classique
			le slot pour le numéro quatre est très petit


before going further :
	0 a simple infinite canvas editor
		1 add rect
			1 correct display at any zoom-level
			1 resize
				1	z-scroll
*[
	homeScale_new = {
		X: scale.X / (scale_fObj.X / icObj.scale.X),
		Y: scale.Y / (scale_fObj.Y / icObj.scale.Y),
	};
*]
				1 standard resize (handles)
					1 proportionnal
						=> update homeScale
					1 X-resize | Y-resize
						=> update scale
					1 manage position change

		0 add other shapes

		0 add image
			1 correct display at any zoom-level
			1 get image
			1 resize
				1	z-scroll
				1 standard resize (handles)
					1 proportionnal
						=> update homeScale
					1 X-resize | Y-resize
						=> update scale
					1 manage position change
			1 correct spawn size

			0 fabric image filters :
				0 blend color
				0 blend image

		0 add text
			1 correct display at any zoom-level
			1 resize
				1	z-scroll
				1 standard resize (handles)
					1 proportionnal
						=> update homeScale
					1 X-resize | Y-resize
						=> update scale
					1 manage position change

			0 ? manage blur when small (fontSize?)
			1 integer fontSize
			1 correct spawn size
				 1 correct spawn fontSize
			1 text changed (IText)
				1 update icObj.text

			0 fabric pattern :
			text.set('fill', new fabric.Pattern({
				source: img,
				repeat: document.getElementById('repeat').value
			}));
				0 regarder ce que ça donne quand on zoome beaucoup (fontSize > 10 000)


		1 move   objects
		1 rotate objects
			1 standard rotate
			0 r-scroll: rotate wrt screen center

		1 rotate canvas
			1 alt-right mouse
			1 alt-scroll

*[
Signed angle between two vectors:

angle = acos(dotProduct(Va.normalize(), Vb.normalize()));
cross = crossProduct(Va, Vb);
if (dotProduct(Vn, cross) < 0) { // Or > 0
  angle = -angle;
}

function dotProduct(v1,v2) {
	return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;
}

function crossProduct(v1,v2) {
	return {
		x: v1.y * v2.z - v1.z * v2.y,
		y: v1.z * v2.x - v1.x * v2.z,
		z: v1.x * v2.y - v1.y * v2.x,
	};
}

*]

	? offset is now offset wrt orientation

on oriente, on décale, on dézoome,

	1 rotation(angle, _center_)
		entire referential rotates around rotation center

		1 create debug axes

toTrueX:
toTrueY:


	1 updateWithDRotation -0.1648536097536525 {x: 766.5, y: 624.5}
		(index):801 this.offset {dx: 0, dy: 0}
		(index):809 rotationBaseVectors {u: {…}, v: {…}}u: {x: 0.9999958607528129, y: -0.0028772343041311684}v: {x: 0.0028772343041311684, y: 0.9999958607528129}__proto__: Object
		(index):815 offset_new {dx: NaN, dy: NaN}
		=> /!\ offset.dx !!!

	1 updateDorientation:
		KeyP : increase orientation
		KeyM : decrease orientation

	1 draw rotation :
		1 center
**		0 createFabricPoint == createFabricCompositeObject 		(point == circle + label)
		1 circle
		0 infiniteCanvas.toolsIcObj

		KeyC: add circle
		KeyD: add point

* pure_icObjects: they are not subject to offset, orientation or scale

	1	canvas rotation breaks previous stuff
	 	1 move
		1 resize
		1 rotate
			std rotate is based on fObj's center point
			(0 add circle to see what's going on

			triangle.rotate(angle);
				Sets "angle" of an instance with centered rotation
				should rotate the triangle on it's central rotation.
			This acts differently to triangle.set('angle', 90) which seems to rotate based on the top left corner.
**	=> simplicity ftw   (I tried too complicated, when it was just so easy)
		1 load rotated canvas
		1 zoom-in to cursor


	0 altKey does not unlock

		1 initialize fabric properties
			fabric.Object.prototype.transparentCorners = false;
		0 draw
			1 draw when key alt down
*				http://fabricjs.com/freedrawing : creates object for us when drawing is done
				fabric.freedrawing

				enterFreeDrawing() {
					this.fabricCanvas.isDrawingMode = true;
				}

			0 create icObj from drawing
			0 load free drawing icObj


		0 fabric.interaction
			0 multiple selection
			0 create groups


		0 save/load
			0 save
				1 save json
				0 save to zip
					0 img hash
			0 load
				1 load json

		0 deselect (to be able to zoom out)
			https://stackoverflow.com/questions/20462307/fabric-js-how-to-deselect-one-or-multiple-objects-on-canvas
		(0 z-scroll stay centered
		1 default scroll follow cursor

		0 controls
		0 bg color

	0 sharing before dying :
		0 create gif showing program features
		0 create markdown text with program features


17 décembre 2020:
	0 continuer les points ouverts

	idées:
	0 movable/unmovable objects : bg objects vs interaction objects
	0 z-index should (/may) decrease when object gets bigger (imagine an image of the universe which was contained in a house window)
	0 group/ungroup when z-scrolling inner element

	0 inno_further:
		0 double object: {front layer, back layer}
				front layer displayed when scale <= x
				back  layer displayed when scale > x
				example: closed window / open window
				=> 0 calendrier de l'avent

			0 living object: front layer may change if something has been done "inside" object (i.e. when scale > x)


	0 edu:

		0 numbers fractal :   [             9              ]
	                        [0][1][2][3][4][5][6][7][8][9]
													etc.
													il y a le zero-level : avec [0,][1,][2,][3,][4,][5,][6,][7,][8,][9,]

		0 10^n rectangles       _____________________________________________________________________________________________________
														[                                  10^n                                                             ]
														-----------------------------------------------------------------------------------------------------

														__________
	                        	[10^(n-1)]
														----------

		0 double layer numbers :
		 		front
										[             ]
										[      9      ]
										[             ]
				back
										[  1   2   3  ]
										[  4   5   6  ]
										[  7   8   9  ]


18 décembre 2020:
	PART I / PART II
	0 save
		0 save result : success / failure

		counter (id-generator)
		offset
		scale
		icObjects

	0 load
		1 IcObject.fromJson_p()
		1 IcObject.toSerial_p()
			1 icObj.img

		0 don't redraw for every new object

	0 IcScene
		0 fromJson_p()
		0 toSerial_p()


	0 merge 2 infinishutes ?

** double scene allows "LES 7 DIFFERENCES"
		triangles qu'on dirait semblables, mais...


19 décembre 2020:
	PARIS-DAKAR : le bourbier de la rotation
		1 logs ftw
		1 ? objects ftw ?
		un peu de géométrie par la face nord
		Garbage-Shut your mouth
	TEST DE CREATION DE Z-PUZZLE
		c'est dur de faire qqchose de bien

		1 purePoint VS _noOrPoint_ VS truePoint
* /!\ please, use radians with Math.cos() Math.sin() ...



*	Hints with puzzle piece number :
		example :
			La scène : un sapin de Noël
			Un indice est inscrit dans une des boules du sapin:
				"   (1)       tout en haut du sapin   "
				  numéro
						de
						pièce


	0 ? displayReferential : pour plus de simplicité

*	0 remanent points : center point for rotation is displayed then fades when rotation is done

*	0 complex animations :
		0 X-wing : zoom-in + centered rotate
		0 spiral staircase : zoom-in + non-centered rotate

** 0 animated objects : endless spinning wheel, endless translation
*			0 user could force software to adopt moving object's referential

	0 keyY : create puzzle slot icObj

** temporal active objects :
		calendrier de l'avent : mettre un timer dans le programme pour que les fenêtres ne soit ouvrables que lorsque le jour est passé

	0 rocher à pousser:

			1 altKey does not unlock
				=> altKey is a particular key (~system key, like ctrl, tab, ...)
				=> do not use alt

			0 draw
				0 draw when key alt down
		*			http://fabricjs.com/freedrawing : creates object for us when drawing is done
				fabric.freedrawing

			1 text is not saved into icObj
				=> if(icObj.type == text) {}

			0 delete object
				0 promises everywhere
				0 canvas does not behave well after removal
			1 deselect (to be able to zoom out)
*				1 key: Space

*[
	Keyboard shortcuts:
			F: Rect
			T: Text
			G: Circle
			F: Triangle
			D: Point

			Y: Z-Puzzle slot

			R: Rotate (KeyDown (toggle))
			C: Color  (KeyDown (toggle))
*]

			0 keyZ: zoom-in to cursor / zoom-out
			1 setColor: keyDown and scroll (color list)
				1 inputProperties.colorProperties
				1 icObj.fill/icObj.stroke

			1 circle is not saved
				=> icObj.radius = json_icObject.radius;

			(0 'sizeless' point

			1 prevent keyboard shortcuts when typing text

			0 paste
			0 copy

			0 fabric.Line
				fabric.Polygon
				fabric.Polyline

			(0 fabric.Path

			(0 ? keyDown z-scroll
			1X r-scroll
** z-scroll, r-scroll, etc. is only about placing the selected object in _a different ("hovering") layer_, and then dropping it in the original layer
    maybe code would be cleaner if it was done this way
*   => hovering layer is the player's backpack (multiple objects could travel along)

			0 z-scroll goes sideways when zooming in

			0 KeyH : show help

			1 handle "negative scale"
				=> fObj.flipX
					0X icObj.scale = {
							fObj.flipX
					  }
					0X fObj.flipX = sign(icObj.scale.X) * sign(icObj.scale.Y);
					=> 1 I'd better stick to icObj.flipX since negative scale would imply that TL "reference corner" becomes TR, BL or BR

			0 fabric.interaction
				1 group selection

					0 group interactions
						0 move
						0 resize
							0 std
							0 z-scroll
						0 rotate
							0 std

				0 multiple selection
					https://stackoverflow.com/questions/56444211/multiselect-in-fabric-js-without-key-modifier
				0 create groups

			0 controls
			0 bg color

			0 import svg image
			(0 undo/redo

			1 bug {"dx":null,"dy":null} when zooming-out
				|-> division by 0
						(0 bloquer le scroll
						OU
						(0 utiliser une librairie mathématique qui gère des très très petits nombres pour avoir une scale très très petite
*						0 manageScaleUpdateWithScaleAmount -1	(le bug se produit quand on "molette long")
							=> 0 prevent abs(scaleAmount) to be 1



		0 sharing before dying :
			0 create gif showing program features
			0 create markdown text with program features


		0 edu:
				three sectors : course material plane is divided:
					green sector  : easy : for everyone
					orange sector : moderate : for almost everyone
					black  sector : serious : for strong pupils

					students can rotate the wheel to access to stronger content


		0 un z-puzzle simple:
			des carrés de couleur

		0 z-puzzle with reflection : negative scale
		0 z-puzzle with negative scale factor homothety (montrer les axes)

			0 snapping:
				0 move
				0 resize
				0 rotate
				0 what is the right snapping percentage ?

20 décembre 2020:
	!SO L!ITT!LE T!IME!
	UN PEU DE MAP CHEZ MAMAN

**0 présentation:
		0 save current pov: keyDown + number
		0 load current pov:           number

	0 z-puzzle
		0 éditeur
			0 enter editor password
			(0 sign in as editor
			 	0 pieces atomic editions are saved
		0 joueur

	0 edu:
	 	colored squares with dimensions
			0 format : factor    x     power of ten
			[---------]
			[<------->]
			[   3,8   ]
			[    x    ]
			[ 10^(-2) ]
			[_________]

*[
fabric intro :

rect.get('opacity'); // 1
rect.getAngleInRadians();

canvas.selection = false; // disable group selection
rect.set('selectable', false); // make object unselectable

canvas.item(0); // reference fabric.Rect added earlier (first object)
canvas.getObjects(); // get all objects on canvas (rect will be first and only)

canvas.onFpsUpdate = function(){ /* ... */ };

var staticCanvas = new fabric.StaticCanvas('c');


fabric intro part2 :
animations
colors:
new fabric.Color('#f55');
new fabric.Color('#123123');
new fabric.Color('rgba(10, 20, 30, 0.5)');


circle.setGradient('fill', {
  x1: 0,
  y1: 0,
  x2: circle.width,
  y2: 0,
  colorStops: {
    0: "red",
    0.2: "orange",
    0.4: "yellow",
    0.6: "green",
    0.8: "blue",
    1: "purple"
  }
});

Text:
Multiline support 			Native text methods unfortunately simply ignore new lines.
Text alignment 					Left, center, right. Useful when working with multiline text.
Text background 				Background also respects text alignment.
Text decoration 				Underline, overline, strike-through.
Line height 						Useful when working with multiline text.
Char spacing 						Makes text more compact or more spaced
Subranges 							apply colors and properties to subranges of your text object
Multibyte support 			emoticons!

var comicSansText = new fabric.Text("I'm in Comic Sans", {
  fontFamily: 'Comic Sans'
});


Events
Groups
Serialization

** fabricCanvas.toSVG();

Subclassing:

var ColoredPoint = fabric.util.createClass(Point, {
  initialize: function(x, y, color) {
    this.callSuper('initialize', x, y);
    this.color = color || '#000';
  },
  toString: function() {
    return this.callSuper('toString') + ' (color: ' + this.color + ')';
  }
});

var LabeledRect = fabric.util.createClass(fabric.Rect, {

  type: 'labeledRect',
  // initialize can be of type function(options) or function(property, options), like for text.
  // no other signatures allowed.
  initialize: function(options) {
    options || (options = { });

    this.callSuper('initialize', options);
    this.set('label', options.label || '');
  },

  toObject: function() {
    return fabric.util.object.extend(this.callSuper('toObject'), {
      label: this.get('label')
    });
  },

  _render: function(ctx) {
    this.callSuper('_render', ctx);

    ctx.font = '20px Helvetica';
    ctx.fillStyle = '#333';
    ctx.fillText(this.label, -this.width/2, -this.height/2 + 20);
  }
});

http://fabricjs.com/fabric-gotchas

Objects have a transparent stroke of width 1 by default
	=> rect.set('strokeWidth', 0);


*]



recap :

	1 rotate : only KeyR
		1 updateOrientation: NaN
			|-> Math.acos can return NaN
			=>
				if(isNaN(angle_abs)) {
					//ignore
				}


	0 draw
		0 draw when key shift down
*			http://fabricjs.com/freedrawing : creates object for us when drawing is done
		fabric.freedrawing

	0 delete object
		0 promises everywhere
		0 canvas does not behave well after removal

	1 keyZ: zoom-in to cursor / zoom-out
		"KeyW" : get aWay
		"KeyE" : "Enter"/"Explore" : zoom-in
		1 keyDownTimeout
		0 keyDownTimeout VS keyDown: complex mgmt to only zoom once when key is "simply" down-up'd (== ? pressed ?)
**		=> problem "vanishes" when timeout delay is 17 ms (== "small enough")
		1 zoom-in to cursor
			1 scaleAmount == 0.90 does not behave well
				=> use small zoom steps
		1 ? use 17ms timeout delay and smaller scaleAmount ? (so that it appears fluid)

  1 <div id="debug_container" style="position:absolute; left:0; top: 0; font-size: 60px; pointer-events: none;">


	1 enable/disable antialias
	 	ctx.imageSmoothingEnabled = false;
		1 fabricCanvas.imageSmoothingEnabled = false;
		(0 have all objects drawn on integer pixel coords
			1 KeyUpABToggle




	0 copy / paste
		document.onpaste
		document.oncopy
*[
http://fabricjs.com/copypaste

function Copy() {
	// clone what are you copying since you
	// may want copy and paste on different moment.
	// and you do not want the changes happened
	// later to reflect on the copy.
	canvas.getActiveObject().clone(function(cloned) {
		_clipboard = cloned;
	});
}

function Paste() {
	// clone again, so you can do multiple copies.
	_clipboard.clone(function(clonedObj) {
		canvas.discardActiveObject();
		clonedObj.set({
			left: clonedObj.left + 10,
			top: clonedObj.top + 10,
			evented: true,
		});
		if (clonedObj.type === 'activeSelection') {
			// active selection needs a reference to the canvas.
			clonedObj.canvas = canvas;
			clonedObj.forEachObject(function(obj) {
				canvas.add(obj);
			});
			// this should solve the unselectability
			clonedObj.setCoords();
		} else {
			canvas.add(clonedObj);
		}
		_clipboard.top += 10;
		_clipboard.left += 10;
		canvas.setActiveObject(clonedObj);
		canvas.requestRenderAll();
	});
}
*]
	https://w3c.github.io/clipboard-apis/#h-clipboard-write-data

	pasteOuterObject
		1 img
		1 text
			0 url
				if(text is url) {}
		0 svg
	pasteInnerObject
		0 fabricObject

	0 ClipboardIntegration(fileIntegration, fabricIntegration)
		0 update last paste source
		0 if(same as previous) {
				ignore outer
			}
			else {
				inner = new Inner(outer)
			}

*	0 icObj.type = "url"
		0 open new tab on click
			function opennewtab(url){
				var win = window.open(url, '_blank');
			}
		0 move to next exercise

http://fabricjs.com/interaction-with-objects-outside-canvas

*	0 icObj.type = "video"
		http://fabricjs.com/video-element
*	0 icObj.type = "webcam"


https://stackoverflow.com/questions/46243114/fabric-js-link-unlink-2-objects

	0 fabric.Line
		fabric.Polygon
			0 parallélogramme
		fabric.Polyline

	0 KeyH : show help

	0 fabric.interaction
		1 group selection
		0 select only what's entirely contained

			0 group interactions
				0 move
				0 resize
					0 std
					0 z-scroll
				0 rotate
					0 std

		0 multiple selection
			https://stackoverflow.com/questions/56444211/multiselect-in-fabric-js-without-key-modifier
		0 create groups / split groups
			0 "KeyG"

	0 z-index mgmt

	0 controls
		0 edit object properties
			0 unselectable fObj
			0 unmovable   fObj
 			0 unrotatable fObj
      0 unscalable  fObj
          0 fixed scaleX|Y
          0 fixed homeScale


	0 bg color

	0 import svg image



	0 edu:
  	0 "representation 74"
    	0 show addition of two number with this representation
     	0 allow user to type number and draw corresponding representation

21 décembre 2020:
	0 pousser, pousser, pousser

	0 icObj.type = "button"
		change cursor to hand when hovering

22 décembre 2020:
	jazz and campfire : Madrugada - Industrial Silence

	(0 copy/paste
		0 inner vs outer
			use cases:
				1. user pastes outer img when there is a fabricObj in custom clipboard
				2. user copies fabricObj when there is an outer object in navigator clipboard
				3.
**	=>  I NEED rxjs to do it cleanly
		0 url
		0 import svg

	1 delete bug: canvas no longer updates
		1X ? fabricCanvas generates new fObjs which lose their icObj property ?
		<) when all objects have been deleted, scroll is possible again
		<) newly created object reacts to scroll, old stay still
		|-> misuse of splice
* The splice() method changes the original array and returns an array that contains the deleted elements.
			=> work with the inplace-mutated array
	1 delete bug: save/load
		1X ? dict["any"] vs dict.any ?
*		|->? problème de synchronisation d'état, et d'objets "flottants dans l'espace", "c'est le problème quand on utilise des fils (== des références d'objet)"
		|-> les icObjects créés par le load n'ont pas d'updateCallback vers infiniteCanvas
			=> this.tetherIcObject(icObj) {icObj.didUpdateListeners.push ...}

	0 track changes + prompt when unsaved content before leaving
		1 track changes
			(0 var Delta = Quill.import('delta');
			1 this.changed = true;
				onsave {changed = false;}
*		1 prompt before leaving (OH MON DIEU, TOUTE UNE APRES MIDI POUR CETTE *****!)
		0 FileIntegration.save_p (success/failure)

Browsers equipped with pop-up blockers will ignore all Window.open() method calls in onunload event handler functions.
https://stackoverflow.com/questions/5259217/catching-beforeunload-confirmation-canceled

* Quill : https://quilljs.com
var quill = new Quill('#editor-container', {
  modules: {
    toolbar: true
  },
  placeholder: 'Compose an epic...',
  theme: 'snow'
});

*[
https://vancelucas.com/blog/using-window-confirm-as-a-promise/
function confirmDialog(msg) {
  return new Promise(function (resolve, reject) {
    let confirmed = window.confirm(msg);

    return confirmed ? resolve(true) : reject(false);
  });
 }
And now we can use it just like a normal promise:

confirmDialog('Do you really want to delete this?')
  .then(() => doYourDeleteAction(task.id))
  .catch(err => alert('Unable to delete!'))
*]

	0 remove icObject (programmatically (== when order does not originates from view))
		0 promises ftw
		0 ? need signals too ?

	0 groups
		0 group
**		0 fabric.ActiveSelection VS fabric.Group
					var sel = new fabric.ActiveSelection(canvas.getObjects(), {
						canvas: canvas,
					});
					canvas.setActiveObject(sel);

			0 icObj.type = group
		0 be lazy : since group is an object, leave the work to fabric
			0 group
			0 active selection
		0 ungroup
			0 ? compute the right positions/sizes/... ?
		0 "editing group" (==temporary group)
		0 onselected : passthrough


	(0 freeDrawing
		1 custom properties

canvas.freeDrawingBrush = vLinePatternBrush;

if (canvas.freeDrawingBrush) {
      var brush = canvas.freeDrawingBrush;
      brush.color = drawingColorEl.value;
      if (brush.getPatternSrc) {
        brush.source = brush.getPatternSrc.call(brush);
      }
      brush.width = parseInt(drawingLineWidthEl.value, 10) || 1;
      brush.shadow = new fabric.Shadow({
        blur: parseInt(drawingShadowWidth.value, 10) || 0,
        offsetX: 0,
        offsetY: 0,
        affectStroke: true,
        color: drawingShadowColorEl.value,
      });
}

		0 create icObj.type = "freeDrawing"
** this step is only possible if fObj is "talkative"

				fObj.path: Array(67)
					0: (3) ["M", 932.5050397877984, 645.4692753623189]
					1: (5) ["Q", 932.5050397877984, 645.4492753623189, 933.004774535809, 644.9497016197784]
					...
					66: (3) ["L", 1297.3314058355438, 409.65046888320546]

		0 link fObj with icObj
		1 ? what is the corresponding fabric class ?
			0 fabric.SVG

var canvas = new fabric.Canvas('c');

function openSVG(e) {
   var url = URL.createObjectURL(e.target.files[0]);
   fabric.loadSVGFromURL(url, function(objects, options) {
      objects.forEach(function(svg) {
         svg.set({
            top: 90,
            left: 90,
            originX: 'center',
            originY: 'center'
         });
         svg.scaleToWidth(50);
         svg.scaleToHeight(50);
         canvas.add(svg).renderAll();
      });
   });
}

https://codepen.io/gbbeatz/pen/eVEQRV

		0 save/load
		0 try penSize = f(scale)

*[
This example shows how to remove the mousemove when mouseup is fired:
canvas.on('mouse:up', function () {
    canvas.off('mouse:move', eventHandler);
});
*]
* http://perfectionkills.com/exploring-canvas-drawing-techniques/

	0 polyline
		http://jsfiddle.net/77vg88mc/34/
		var roof = new fabric.Polyline(roofPoints, {
			fill: 'rgba(0,0,0,0)',
			stroke:'#58c'
		});

	0 circle shortcut does nothing

	0 text : edit on creation
		0 delete object if text is ''


	0 controls:
		0 object pools:

	0 et ensuite : fais ce qui te motive
		0 fractal representation
			0 create toy representation with 3 levels
				0 show number
				0 show selected towers
			0 create axes
		0 Z-Puzzle slot
		 	0 z-index mgmt

	0 tester sur d'autres navigateurs

23 décembre 2020:
	0 activeSelection
		1 listen to activeSelection events
			http://fabricjs.com/events
			object:moving {"target":{"type":"activeSelection"}
		0 transforms
			1 move
			0 scale
				1 proportionnal scale
				0 axis scale
					1 of non-rotated
*					0 axis scale of active selection containing rotated child fObjs skews child fObjs
**					=> scale would be way nicer if activeSelection was behaving like a group
							0 ? lockSkewingX ?
*							0 ? fObj.flipY

						0 props updated are wrong

							transform:
								originX: "right"
								originY: "top"
			1 rotate

			1 zScroll : redraw all but active selection
				1 updateFabricObjectsSize_zScroll
https://stackoverflow.com/questions/1187518/how-to-get-the-difference-between-two-arrays-in-javascript
				0 updateFabricObjectsPosition_zScroll
					1 scale position wrt activeSelectionTL
						0 warning : this may only work with "pure TL" (== no-flip activeSelection)
					0X activeSelection.homeScale
					1? activeSelection.icObj
*					1 icObj.type == "activeSelection" (this way I could persist user's activeSelection)

				  1 workflow:
						1.update container size: 		 activeSelection.icObj.homeScale
						2.update children  size: 		 children .homeScale
						3.update container position: activeSelection.icObj.position
					 	4.update children position:  children .position

				1 don't redraw fObjs in activeSelection

		1 activeSelection should keep position when offset changes (no mScroll for the moment)
*   	0 configuration options : keep true position(==TL) on zScroll ? yes/no
		0 add/remove from active selection

		0 rotation is not kept after move
			usecase: select objects, rotate, (move,) offset

		1 activeSelection delete


	0 groups
		1 create icObj
*		http://fabricjs.com/docs/fabric.Collection.html
			fObj.getObjects(typeopt)
			fObj.insertAt(object, index, nonSplicing)
*			fObj.complexity()

			0X ? child.groupX, etc. ?
				=> keep "true" coordinates for simplicity when nesting groups

			(static) add(…object) → {Self}
				Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`)

			0 createFabricGroupWithIcObj
				0 fObj size is different than original fObj size
					1 create Rect with same pos and size ('object logging')
					<) zoomX: 0.75
						 zoomY: 0.75

			0 createFabricGroupChildObjectWithIcObj
			0 icObj.computeInnerCoordinatesForIcObject(icObj2);
				0 position
				0 homeScale
				0* scale
				0 orientation



			0? continue to compute true coordinates for easy ungrouping

**(0 mScroll

** 0 toggle homeScale for new objects : infiniteCanvas.scale VS infiniteCanvas.workingHomeScale
		0 infiniteCanvas.working.homeScale
		0 infiniteCanvas.preset.homeScale
		0 Key H
		0 Shift Key H

	(0 skewing:
		http://fabricjs.com/using-transformations


	0 light-sender|eye-catcher
		0 icObj.type == "sparkle":
		0 animated image (rotation and homeScale)
			fromScale = carrier.homeScale
			toScale   = infiniteCanvas.scale
		0 animation deactivates when object has been seen "close enough"
		0 heartbeat

	Z-puzzle:
		0 new ZPuzzle(infiniteCanvas, fabricIntegration)
		0 KeyE: activate
			0 get mouse cursor

		0 editor:
		 	0 create slot and piece duo
				0 create slot
				0 create slot from fObj
						creates group with rect and fObj clone with opacity 0.40

			0 piece snap (to slot)
				0 listen to -ed events
					0 moved
					0 rotated
					0 scaled
				0 snap animation

			0 puzzle completed : rxjs

			0 slot border:
				0 white : empty
				0 green : piece ok
				0 red   : piece nok

	Xylophone:
		0 new Xylophone(infiniteCanvas, fabricIntegration)

0 program is kinda laggy with 50+ objects ...

24 décembre 2020:
	0 xylophone plz
		1 create basic 900 x 1000
		(0 fObj.xObj.isActive
		1 icObj = "toggleRect"

**	1 /!\ logs make it slow
			=> simply don't show console :)
		1 icObj.unmovable etc.
		0 zScroll is still possible

		1 bug de selection: overlapping
			=>
				padding:0
				strokeWidth:0

		1 add 0 square management
		1 only one tower can be active in xyloZone
			1 update fObj when icObj prop changes ("top down update")
**			model --> view kind of horror

		0 unitZone: highlight

		0 xyloTower: homeScale

		0 add texts
			0 below every 900x1000, write "10^<n> zone"
				0 XyloZonePerception
*				1 decimal.js : https://mikemcl.github.io/decimal.js/
					decimalInstance.toFixed()
					decimalInstance.toFraction()
					decimalInstance.toNumber()
			 (0 any base
					https://stackoverflow.com/questions/1337419/how-do-you-convert-numbers-between-different-bases-in-javascript
				0 infiniteCanvas.createIcText(left, top, _homeScale_, text)
				0 zone range
				0 zone active number
					0 infiniteCanvas.requestViewUpdateForIcObj(icText);
						0 reactive icObjects plz
				0 towerDescriptions
						___________________________
						|   1  |   2  | ...

			0 write number inside tower
			0 nombre sélectionné dans cette zone

	0 create Xylogame1

	0 initalOffset: make true (0,0) at center of screen

	0	créer une autre version du xylophone avec le zéro selectionnable et pas de toggle isActive sur les xylophone towers

25 décembre 2020:
	0 bien différencier les nombres <1 et les nombres >1 : le problème de la virgule

	0X test de creation skewed arrow:
		http://www.senocular.com/flash/tutorials/transformmatrix/
		|-> skewing won't create mathemtical trapeze: parallel-only skewing
		https://stackoverflow.com/questions/19159074/perspective-transformation-of-object-filled-with-image-in-fabricjs
**	=> 0 https://threejs.org/   (? use it one day ?, migrate from fabric to three.js ?)
				https://threejsfundamentals.org/

26 décembre 2020:
	0 double object: window open
		(0 icObj.visible
		OR
		1 infiniteCanvas.add/remove icObj
				0 removeIcObject: from model to fabric
		0 image from url

	(0 doubleObject(frontX, doubleObject(frontY, doubleObject(frontZ, ...)))
	0 double object with animation (for example: flipX for shutters or doors)

	0 trouver des images pour peupler le canvas
		https://b-ok.cc/book/807813/fcc1c8?dsource=recommend

		0 science
			98

	0 tester la librairie de graph https://github.com/anvaka/ngraph.fabric
		((0 ngraph libs:
		 			ngraph.path https://github.com/anvaka/ngraph.path


	0 zPuzzle
		1 icObj.clone()
		1 icObj.opacity
		0 snap
>>>		0 icObj_piece.update(icObj_new, "model")
			dataBinding:
*[
knockoutJS: https://en.wikipedia.org/wiki/Knockout_(web_framework)

function ViewModel() {
    this.firstName = ko.observable("");
    this.lastName = ko.observable("");

    this.fullName = ko.computed(
        function() { return this.firstName() + " " + this.lastName(); },
        this);
}
ko.applyBindings(new ViewModel());
*]
			https://javascriptio.com/view/1060293/what-is-correct-way-to-integrate-ember-js-with-canvas-library-like-fabric-js

*			https://www.wintellect.com/data-binding-pure-javascript/
				Better Two-Way Data Binding: allow for a property to be bound to one or more elements.

			0 icObj.isUnderUserControl
			0 manage zScroll
			0 deselect object when snapped

*00:00 ne pas trop tirer sur la corde si c'est possible

27 décembre 2020:
	0 graduations = f(scale)
		0 longueur (comme sur un double décimètre)
		0 largeur ? (l'idéal serait une largeur indépendante de la scale)
		toutes ces complications pour 3 pauvres graduations...
		Mais ce travail doit être réutilisé pour les
		0 doubles flèches de mesures

	PAUL:
		préfère affichage compact
		0 un axe des y chaque zone
		0 z-puzzle: slot avec 1.47 x 10^-3 qui fait écho au papier peint des xyloTowers

	0 binding:
			0X approche ~Gemini:
				there is a core
				and there are bindings
					model binding
					view 	binding
				0 faire un essai avec les Gemini
					0 qui dit Gemini dit Schema
				|-> Gemini updates move up to geminiSource and then are sent to all geminis, including the object from which update originates

			(0 approche "slot" (a completely new object instance can be set and it still pushes changes)

			(0 ~EVENT SOURCING
				https://blog.risingstack.com/event-sourcing-with-examples-node-js-at-scale/
				https://eventstore.js.org/

**		0 Representation/BackingObject: sync with representation, representation can be either view or model (or anything else ?...) (like micro event-sourcing)
				0? use C-style structs ?
						https://stackoverflow.com/questions/502366/structs-in-javascript

*[
function Book(title, href, imageUri, description) {
    this.title = title;
    this.href = href;
    this.imageUri = imageUri;
    this.description = description;
}

new Book(
        "Grokking Algorithms: An illustrated guide" ,
        "http://kbhr.co/grokking",
        "/images/books/grokking-algorithms-illustrated-guide-2.jpg",
        "Grokking Algorithms"
    )
*]
				0 skeleton
				0 BackingObject
				0 Representation
*	Representation/BackingObject: sync with representation, representation can be either view or model (or anything else ?...) (~like micro event-sourcing)
    to create ObjA instance, do BackingObject.fromRepresentation(objA).getRepresentation(); et ensuite mettre des listeners sur la représentation.
    backingObject.updateWithRepresentation(repA): this will update backingObject and then the other representations. forcément il peut y avoir des soucis s'il y a des update concurrents.
    this is kinda funny because the backing object is the core node, but it is pure fantasy

					set:
					get:

					new Proxy ?	=> regarder ce qui a été fait avec les gemini

28 décembre 2020:
	un peu de code mais tout doux car c'est dur aujourd'hui (très mal dormi)

	icObjA.x = 'lol';
	icObjA.pushUpdate()

	backingObj.updateWithRep(rep__update) {
		const affected = reps.filter(rep => rep.id != rep__update.id);
		affected.forEach(rep => rep.update())
	}

	icObjB.didUpdate()   => icObjB.didUpdateListeners trigger
	icObjC.didUpdate()   => icObjC.didUpdateListeners trigger


	1 (index):2032 Uncaught Error: unknown propName(toJSON) for representation: [object Object]
	    at Object.get ((index):2032)
	    at Object.get ((index):2098)
	    at JSON.stringify (<anonymous>)
	    at createRepresentation ((index):1998)

			https://stackoverflow.com/questions/1996717/why-do-javascript-objects-not-have-a-tojson-method
			=>
				var p = new Proxy({}, {
				  get: function(target, name, receiver) {
*				    if (name === 'toJSON') {
*				      return function() { return target; }
*				    } else {
				      return Reflect.get(target, name, receiver);
				    }
				  },
				});

	1 Uncaught TypeError: Cannot convert a Symbol value to a string
		glassFacade get Symbol(Symbol.toPrimitive)

		According to ECMA-262,
		using the addition operator on a value of type Symbol in combination with a string value first calls the internal ToPrimitive, which returns the symbol.
		It then calls the internal ToString which, for Symbols, will throw a TypeError exception.

		So calling the internal ToString is not the same as calling Symbol.prototype.toString.
		=> ?

	0 getUniqueID
		https://gist.github.com/gordonbrander/2230317
*[
function uniqueID(){
	function chr4(){
		return Math.random().toString(16).slice(-4);
	}
	return chr4() + chr4() +
		'-' + chr4() +
		'-' + chr4() +
		'-' + chr4() +
		'-' + chr4() + chr4() + chr4();
}

var ID = () => {
  let arr = new Uint32Array(8);
  window.crypto.getRandomValues(arr);
  let str = '';
  for (let i = 0; i < array.length; i++) {
    str += (i < 2 || i > 5 ? '' : '-') + arr[i].toString(16).slice(-4);
  }
  return str;
}

*]

	0 manageIcObjUpdate

29 décembre 2020:
	"ça se fait pas comme ça, tu comprends. ça tombe pas du ciel."

	0 onOuterUpdate:
		0 fObj.syncWithIcObj(icObj)
*		0 ignore or apply wrt representation owner property locks			("official representation")
			0 property locks
				example: if model's representation wants to update color: ok, update color in view's representation
								 if model's representation wants to update color: nok, ignore update

				this way the slot could mutate a piece in a blink of a eye:
			    0 repaint a piece
			    0 change its background texture pattern
			    0 change its size
			    0 rotate the piece 90° clockwise
			    0 its nature
			    0 its behavior (activate or deactivate eventListener code)

			  0 more complex: change underlying fObj while held: fImage becomes fGroup for example
			0 "but I only wanted to have it snapped"
			 	=> representation.sendUpdate(, reason)
					 representation.requestUpdate(, reason)
					 	onUpdateRequestAccepted()
						onUpdateRequestRejected()


	0 (z)Snap
		(0 object log: change color on snap
			0 nextColor(color)
		0   coller la pièce
		0 décoller la pièce

		(index):2072 Uncaught RangeError: Maximum call stack size exceeded
		    at Object.set ((index):2072)
		    at Object.set ((index):2155)
		    at Proxy.update ((index):1698)
		    at ZPuzzleSlot.snap ((index):8629)

		0 temporary representation for snapping
			0 "official representation"
**		0 deux objets fabric: celui qui représente le "snapped" et celui qui représente le "free"
					une bascule se fait au niveau de l'affichage sur les évènements onSnapped et onUnsnapped
					"sous la souris", on continue d'avoir l'exemplaire "free", qui est invisible quand la pièce est snapped

			0 removeSnappedRepresentation on unSnap
			0 piece.didTryUpdating()
			0 ? c'est quoi l'objet représenté, icObj ou piece ?
			0 hierarchie des objets:
				0? icObj.zObj
					=> fObj.icObj.zObj (quitte à mouiller le haut du corps, autant plonger)
					0 ? shouldn't be serialized ?
				OU
				(0 infiniteCanvas.addObject(anything)  avec anything.icObj != null
					 	et du coup fabricIntegration.addObject(anything)
					 		fObj.onUpdate((fobj) => {

					 		});

			0 fObj est une représentation de icObj,
				icObj est une représentation de zObj ?

			piece.snappedObj =
			piece.freeObj    =
**		? every object starts with a free representation ?
			or
			piece.fabricRepresentation
			piece.snappedfabricRepresentation
			piece.modelRepresentation
			or
			piece.fabricRepresentations["snapped"]
			piece.fabricRepresentations["free"]
			piece.modelRepresentations["model1"]
			or
			piece.representations["view"]["snapped"]
			piece.representations["view"]["free"]
			piece.representations["model"]["model1"]

			et là je parle même pas des objects qui "vivent" dans plusieurs canvas à la fois


			0 rep.dismissOwnership()
			0 gain ownership:
				if(representation.owner == null) {
					backingObject.grantOwnership(rep)
			  }

			0 representation.onOuterUpdate((piece) => {
					if()
			  })

* onRelease() VS onDrop() release.type == "drop"

30 décembre 2020:
	un peu fâché contre mon développement qui va pas vite, mais bon, faut y'aller tranquillement, faut pousser, encore et encore

	1 icObj.isSnapped
	1 icObj.type = "snapSlot"
	0 snap anything
			1 createSnapSlot {

				snapSlot.listener = (icObj) => {

				};
				infiniteCanvas.onIcObjUpdate(snapSlot.listener);
			}
			1 icObj.onOuterUpdate((icObj) => {
					infiniteCanvas.onIcObjUpdate(icObj);
				})
				=> receiver.representation = glassFacade;
			0 fRep.onOuterUpdate((icObj_fRep) => {
				if(icObj_fRep.isSnapped) {
					//create snapped representation
					//create fabricObject: snapped
					store fObj_snapped somewhere
				} else {
					if(fObj_snapped != null) {
						destroy fObj_snapped
					} else {
						//standard redraw
					}
				}
			})
				|-> 0 fObj_snapped must be linked to an icObj in order for infiniteCanvas to work
				=> 0 icObj		icObj_snapped
						  fObj     fObj_snapped
					 0? snappable icObj == icObj.icOb_snapped

* cinquante nuances d'icObj:
			0 icObj_official 	(this is the object that will be saved/serialized)
			0 icObj_free			(this is the object that can move freely on the canvas)
			0 icObj_snapped   (this is the object that is snapped on the canvas)

			official.follow(rep_free)
			official.follow(rep_snapped)

			rep_free.follow(official)
			rep_free.unfollow(official)
							.followAll()
							.followNone()					(== disconnect)

**[
			observation throttle : toutes les 1 secondes
														 toutes les 0.1 secondes
														 toutes les 10 secondes
			on croit connaître l'objet observé mais on voit qu'une partie

*			tout ça c'est des subscriptions => Rx
**]



			0 removeSnapSlot {

				infiniteCanvas.offIcObjUpdate(snapSlot.listener);
			}

		 (0 ??? func.bind(obj)

*[
https://www.codingame.com/playgrounds/9799/learn-solve-call-apply-and-bind-methods-in-javascript

function checkFun(a, b, c){
    console.log(this);
    console.log(a);
    console.log(b);
    console.log(c);
}
checkFun.call(1,2,3,4);
checkFun.apply(1,[2,3,4]);

function sumOfNumbers() {
    var total = 0;
    for(var i = 0; i < arguments.length; i++){
        total += arguments[i];
    }
    return total;
}
var sum = sumOfNumbers(1,2,3);
console.log(sum);

"use strict";
var person = {
    name : "Jack",
    prop : {
        name : "Daniel",
        getName : function() {
            return this.name;
        }
    }
}

var name = person.prop.getName.bind(person);
console.log(name());

var  name = person.prop.getName();
console.log(name);

*]

	0? create class

	0 httpServer crash
			server is listening on 3000                                                                                          _http_server.js:246                                                                                                      throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);                                                          ^                                                                                                                                                                                                                                     RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined                                                at ServerResponse.writeHead (_http_server.js:246:11)                                                                 at ServerResponse._implicitHeader (_http_server.js:237:8)                                                            at ServerResponse.end (_http_outgoing.js:779:10)                                                                     at J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\index.js:21:34                                     at J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:434:22        at onaborted (J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:1027:5)                                                                                                                 at Immediate._onImmediate (J:\content\PROF\ARIANE\4e\séquencePuissances\INFINISHU\nodeapp\node_modules\express\lib\response.js:1067:9)                                                                                                    at processImmediate (internal/timers.js:456:21) {                                                                  code: 'ERR_HTTP_INVALID_STATUS_CODE'                                                                               }                                                                                                                    npm ERR! code ELIFECYCLE                                                                                             npm ERR! errno 1                                                                                                     npm ERR! infinishu@1.0.0 start: `node index.js`                                                                      npm ERR! Exit status 1                                                                                               npm ERR!                                                                                                             npm ERR! Failed at the infinishu@1.0.0 start script.                                                                 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                                                                                                        npm ERR! A complete log of this run can be found in:                                                                 npm ERR!     C:\Users\argile\AppData\Roaming\npm-cache\_logs\2020-12-30T18_20_01_501Z-debug.log


	1 infiniteCanvas.createIcObj() {
			const icObj = new IcObject();
			const rep = createRepresentation(icObj);
			return rep;
		}

	0 unsnap
		0 z-index:
			https://stackoverflow.com/questions/14131206/control-z-index-in-fabric-js
			fabric.Object.prototype.getZIndex = function() {
				return this.canvas.getObjects().indexOf(this);
			}

			fabric.Canvas.prototype.moveToLayer = function(object,position) {
				while(object.getZIndex() > position) {
						this.sendBackwards(object);
				}
			}
		0

31 décembre 2020:
	:) réussi un début de snap
	0 unsnap
		0 follow/unfollow
		0 observables...

			icObj.rep_official =          (official)			pure follower
			icObj.rep_free     =					(control)				follower and pusher
			icObj.rep_snapped  =													pure pusher

		0? representation.represented ?

		0 .addIcObject(icObj) VS .addIcObject(rep_snapped)
		0 removeIcObject(rep_snapped)
				const represented = rep_snapped.represented;
				const icObjs_for_represented =
				const icObj_snapped = icObjs_for_represented["snapped"];
				removeIcObject(icObj_snapped);

01 janvier 2021:
	0 infiniteCanvas.icObjRepresentations
		un jour ou l'autre il faudra faire quelquechose de propre à ce niveau là, surtout quand il faudra sérialiser
	18:57: j'ai un snap qui a l'air de fonctionner mais il faut que je gère mieux les objets (ajoutés/supprimés)
	0 infiniteCanvas.removeRepresentation(represented, representation)

	0 orientation does not snap well	//SHU: 360 - x, ...
	  	bounded angle ...
	0 homeScale/scale snap
		0 comparer les screenCoords


	0 serialization:
		Uncaught (in promise) TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Represented'

	0 fix unsnap bugs (creates multiple rects)
		0 multiple rects are created because snapped representation is the one that is selected and then, because snapped.isSnapped = null, then snapped is snapped, etc.
			=>
				0? snapped.isSnapped = true
				0? mettre la version free à la place de la version snapped quand on déselectionne
				0? tuer la version free

	0 manage snapSlot move (fabric and consequences)

02 janvier 2021:
	0 onRelease:
		snapped: destroy
		free: move to official representation
	0 fObj.onRelease? NON icObj__r_free.onRelease? OUI
	 	le fObj il a rien demandé, il a pas demandé à être chargé comme une mule

	0 onHold / onRelease
		1 icObj.canBeHeld
		0 mouseup / mousedown
			0 ABToggle("", , )

		0 mouseRelease: release but keep active

	0 icSnapSlot spawn counts as two objects ???
		0 ? snapslot creating snapped version of itself ?

	0 onRelease: icObj.zScrollOff

	0 pseudoSnap/trueSnap, shallowSnap/deepSnap, attracted/snapped
		=> preSnapped VS snapped
		unsnapped <---> presnapped <---> snapped


	0	if(rep_free.isHeld) {
			presnap()
		} else {
			snap()
		}

	0 fObj.onHold --> icObj.isHeld --> icObj.onInnerUpdate --> fObj.update -->

	0 icObj_free.silentUpdate()

	0 (index):2874 Uncaught TypeError: Cannot read property 'id' of undefined
    at (index):2874
    at Array.forEach (<anonymous>)
    at Proxy.receiver.syncWith ((index):2873)
    at snap ((index):722)
    at attemptUnsnapping ((index):771)
    at snapSlot_listener ((index):843)
    at (index):866
    at (index):1023
    at Array.forEach (<anonymous>)
    at InfiniteCanvas.icObjDidUpdate ((index):1022)


	0 don't listen to the following rep_official update: rep_official.snapState(SnapState.presnapped) -> rep_official.snapState(SnapState.Snapped)
		because then it triggers attemptUnsnapping

	0 can't unsnap while snapState == Unsnapped
		0 log snapState

		0 ? preSnap unsnapp listener and standard attemptUnsnapping happen at the same time so one of the two throws errors since rep_snapped is already destroyed

			(index):848 Uncaught TypeError: Cannot read property 'id_rep' of undefined
	    at unsnap ((index):848)
	    at attemptUnsnapping ((index):783)
	    at rep_free_afterPresnap__attemptUnsnapping ((index):721)
	    at (index):2822
	    at Array.forEach (<anonymous>)
	    at Object.broadcaster.didUpdateFromInner ((index):2821)
	    at Object.set ((index):2877)
	    at Object.set ((index):3019)
	    at unsnap ((index):855)
	    at attemptUnsnapping ((index):783)

* ça bugue, ça fait chier
		0 update rep_official with setTimeout and see what happens
			0 far enough 			==> unsnap
			0 not far enough  ==> snap/do nothing

	(official: snapped or unsnapped
	(free: unsnapped, presnapped, snapped

**1 use colors to debug states:
			unsnapped : green
			presnapped: blue
			snapped   : red

	1 bug when spawning rect exactly over snapSlot
	0 bug .isHeld == false when Snapped -> preSnapped
			 rep_free.onHold rep_free.isHeld true		 (index):778
		19 rep_free.isHeld false			 						 (index):824
>>>	|-> name is the same but object is different



	0 essayer rep_free_callbacks = {}

	0 ? use syncWith({

		}) to perform batch inner update ?

03 janvier 2021:
* trop de logs peut empêcher les callbacks de s'activer correctement

	1 snap icText
			width:  248.4375
			height: 113

			°°unsamenessRatio__size.width 1
			°°icObj_over.size.width 0
			°°icObj_below.size.width 268.4375

			°°unsamenessRatio__size.height 1
			°°icObj_over.size.height 0
			°°icObj_below.size.height 130

			=> 0 update icObj.size using fObj's size
					1 after fObj's creation
					0 afterTextUpdate

	0 icText fObj's size is a bit different from apparent container rect size

	0 Snap.unsamenessRatio__position is buggy

	0 serialization
		0 serialize represented and representations
			0 commencer par quelque chose de simple
				=> on sérialise uniquement official

				0 Uncaught TypeError: this.r_official.toSerial_p is not a function
				  at Represented.officialSerial_p ((index):2827)

					0 toSerial_p() {
							return inner.toSerial_p();
					  }

			0 represented.toSerial_p()
			0 ? save only rep_official ?
			0 representation.toSerial_p()


		réfléchir aux implications ?
* serialized == version lyophilisée

* the fear: est-ce que tout ça verra le jour ?

05 janvier 2021:
	0 faire quelquechose de montrable
		0 zPiece == Wrapper{ icObject }
		0 zSlot  == Wrapper{ icObject(clone) + icSnapSlot }
		(0 snap to closest snapSlot
		0 import image: square
		0 les vraies mesures
		0 il faut un Sparkle vers le Z-puzzle pour retrouver le puzzle lors de la minification des grosses pièces (Terre, Soleil...)
		0 ou un raccourci clavier vers le puzzle == move to pov animation
		0 il faut que la minification soit plus agréable (== soit aussi agréable que la maxification)

	0 res: premier puzzle
		1 Soleil 																										 1.40 x 10^9 m
		1 Terre						: rayon: 6 371 km : diamètre : 12 742 km : 1,27 x 10^7 m
		1 tour eiffel							 						300 m									 3    x 10^2 m
		1 chaussure																									 2.5  x 10^-1 m
		1 bulle de champagne																				 5    x 10^-4 m
		1 globule rouge																							 2    x 10^-6 m

		0 fusée Ariane6 																						 6,3  x 10^0 m

0 z-puzzle: piece original container image (bulle de champagne)

06 janvier 2021:
	0 regarder comment est intégré rxjs dans cn

07 janvier 2021:
	NOW IS THE TIME
		on pousse tranquillement mais on pousse effectivement

	1 mouseDown-zScroll :)

	1 serialize
		=> (0 obj.serializableProps
			OR
			1 set() {
				if(propName in broadcaster) {

				} else if(propName in receiver) {

				} else {
					//set prop in inner
				}
			}

	0 load
		1 load passive  objects
		0 load reactive objects
			1 load snap slot
				|-> doesn't show
					=> 1 strokeWidth

	0 (index):3510 Uncaught TypeError: this.createFabricPolylineWithIcFreeDrawing is not a function
    at FabricIntegration.createFabricObjectWithIcObj ((index):3510)

	0 bug when resizing icText

	0 create protoSlot
		0 icObj.type = "protoSlot"
		0 mutateToSlot(obj)

08 janvier 2021:
	1 diamagnetic objects
		=> icObj.snappable = false;
	1 try snapping image
	1 multiple snapslots together: cancel other snaps
		(0 snapSlot community
		OR
		1 if (obj.snappedTo != null) {
				if (obj.snappedTo != snapSlot) {
					//ignore
				}
			}
			=> snappedTo = snapSlot.id
	0 can't move snapSlot

	0 snapSlot
		0 show attraction zone (with homeScale == snapSlot.homeScale)
		0 don't snap small objects in attraction zone
			=> canSnap()

	0 zSlot
		0 à l'ancienne
			0 create diamagnetic object
			0 bring slot on top of it

	0 square image container
		=> put image in group

	0 draw line
			first  key press: starting point
			second key press: 	   end point
		0 createIcSegment
				composed object
				1 create fabric object: fabric.Line
					http://fabricjs.com/stickman

function makeLine(coords) {
  return new fabric.Line(coords, {
    fill: 'red',
    stroke: 'red',
    strokeWidth: 5,
    selectable: false,
    evented: false,
  });
}

**	fObj.evented
				0 update position
				0 ? update size


		0 createIcLine
		0 line does not have homeScale
			if(homeScale="none") {

			}
		0 draw line to fill screen

	0 racine de 2:
		0 dynamic object
		0 sqrt(2) ESB tower


	0 nice copy
		1 rxjs
			  <script type="text/javascript" src="dist/copy/rxjs.umd.min.js"></script>
		0 pour l'instant utiliser rxjs uniquement pour ça
		0 compare timestamps
			clipboardEvent.timestamp
		0 in -> in:
*			=> fObj.forEachObject

*[ ES6 spread
var A1 = {a: "2"};
var A2 = Object.assign({}, A1);
var A3 = {...A1};  // Spread Syntax
*]

*[
Deep clone in javascript:
But do note that JSON serialization can cause loss of information.

JSON.parse(JSON.stringify({ results: Infinity }));
// will produce { results: null }
]*

			0 deepCopy
				1 arr.includes(propName)
				0 other props
			0 newly created object:
				1 homeScale = infiniteCanvas.scale
				0 set as activeObject
					0 activeObject
					0 activeSelection

			0 problem on save/load: copied versions are not visible in loaded


		0 out->in: copy object in paint.net and paste it in infiniteCanvas
			0 outerToInner
		0 in->out: copy object in infiniteCanvas and paste it in paint.net
			0 copy image
				1 activeObject
					https://javascript.info/blob
				0 activeSelection
			0 copy text

*[
https://web.dev/async-clipboard/

navigator.clipboard.write([
  new ClipboardItem({
    [blob.type]: blob
  })
]);

function copy() {
  const image = await fetch('kitten.png');
  const text = new Blob(['Cute sleeping kitten'], {type: 'text/plain'});
  const item = new ClipboardItem({
    'text/plain': text,
    'image/png': image
  });
  await navigator.clipboard.write([item]);
}

http://www.aerasec.de/security/advisories/decompression-bomb-vulnerability.html

*]


	0 greenMouse
		0 vial
		0 my first green mouse
			on a un well qui donne des [1]
			on a 4 vials:   [+1] [-1] [x10] [x(-1)]
			on a un target slot

09 janvier 2021:
	0 snap slot endoConfig
		0 double object
			0 group

pfiou, ça me soule ces vieux trucs à faire en premier

	1 exoObject: freeDrawing
	1 opacity
		1 opacity VS freeDrawing
	(0 blend mode

	0 Sparkle
		0 center
		0 sparkle animation
			1 use animation library
			 	1 https://github.com/juliangarnier/anime/
				(0 https://popmotion.io/

**		anime.js:
				STAGGERING
				TIMELINE CONTROLS: play/pause/reverse/seek
				PROMISES: LOOP BEGIN/ LOOP COMPLETE

[*
anime.js

anime({
  targets: '.specific-prop-params-demo .el',
  translateX: {
    value: 250,
    duration: 800
  },
  rotate: {
    value: 360,
    duration: 1800,
    easing: 'easeInOutSine'
  },
  scale: {
    value: 2,
    duration: 1600,
    delay: 800,
    easing: 'easeInOutQuart'
  },
  delay: 250 // All properties except 'scale' inherit 250ms delay
});

var relativeEl = document.querySelector('.el.relative-values');
relativeEl.style.transform = 'translateX(100px)';

anime({
  targets: '.el.relative-values',
  translateX: {
    value: '*=2.5', // 100px * 2.5 = '250px'
    duration: 1000
  },
  width: {
    value: '-=20px', // 28 - 20 = '8px'
    duration: 1800,
    easing: 'easeInOutSine'
  },
  rotate: {
    value: '+=2turn', // 0 + 2 = '2turn'
    duration: 1800,
    easing: 'easeInOutSine'
  },
  direction: 'alternate'
});

anime({
  targets: '.animation-keyframes-demo .el',
  keyframes: [
    {translateY: -40},
    {translateX: 250},
    {translateY: 40},
    {translateX: 0},
    {translateY: 0}
  ],
  duration: 4000,
  easing: 'easeOutElastic(1, .8)',
  loop: true
});

STAGGERING:
anime({
  targets: '.basic-staggering-demo .el',
  translateX: 270,
  delay: anime.stagger(100) // increase delay by 100ms for each elements.
});

//TIMELINE
// Create a timeline with default parameters
var tl = anime.timeline({
  easing: 'easeOutExpo',
  duration: 750
});

// Add children
tl
.add({
  targets: '.basic-timeline-demo .el.square',
  translateX: 250,
})
.add({
  targets: '.basic-timeline-demo .el.circle',
  translateX: 250,
})
.add({
  targets: '.basic-timeline-demo .el.triangle',
  translateX: 250,
});

//PROMISES

var animation = anime.timeline({
  targets: promiseEl,
  delay: 400,
  duration: 500,
  endDelay: 400,
  easing: 'easeInOutSine',
  update: function(anim) {
    progressLogEl.value = 'progress : '+Math.round(anim.progress)+'%';
  }
}).add({
  translateX: 250
}).add({
  scale: 2
}).add({
  translateX: 0
});

animation.finished.then(logFinished);

//MOTION PATH

var path = anime.path('.motion-path-demo path');

anime({
  targets: '.motion-path-demo .el',
  translateX: path('x'),
  translateY: path('y'),
  rotate: path('angle'),
  easing: 'linear',
  duration: 2000,
  loop: true
});

//ANIMATION.REMOVE(ELT)


*]
			0 update animation when infiniteCanvas.scale changes
				0 prevent sparkle from getting too big (sparkle.homeScale shouldn't be < infiniteCanvas.homeScale)
				0 make animation "go down" when zooming in
				=> 1 keyFrameAnimation
				 			frame "homeScale"
							frame "infiniteCanvas.scale"
				0X don't update sparkle fObj position on scroll
				0 compute progress and use animation.seek()
				0 set from and to accordingly (this may change whether player is zooming in or out)
				1 kill animation when close enough

				(0 animation.duration = f(infiniteCanvas.scale)

				0 debug:
					0 debug: "BracketLeft": pause sparkle anims
					(0 try to get an anim working with a line

					0 there are two anims:
							anim1: one shot: [previousPos -> to]
							anim2: endless: [to <-> from]

						0 determine what to is: is it homeScale_sparkle or infiniteCanvas.scale ?
							0 getTargetKeyFrame()
						0 have seemless animation sequence anim1 -> anim2


			0 addReactivePart

** madness: animate an animation

			0 only sparkle when inside screenRect

		0 protoSparkle

0 TODO: faire des constructeurs propres pour les icObjects de manière à pouvoir les instancier "programmatically"

10 janvier 2021:
	0 sparkle
		1 seamless update mgmt
		0X use only one anime() [from, to]
		1 recursive sparkle anim
		0 update bug: update OK only when showing console logs ???
		0 bon, il y a un bug sur le sparkle quand on utilise le clavier pour zoomer/dézoomer.
			pour l'instant je laisse le bug. Je passe à autre chose.

		1 sparkle.center
			1 icObj.isCenterPosition
	http://fabricjs.com/test/misc/origin.html
			1 fObj.set({
					originX: "center",
				  originY: "center",
				})

		(0 move sparkle
		1 sparkle with sparkle image
			(0 default sparkle image
			(0 FileIntegration.getImageWithName();
			OR
			1 "import sparkle"

		0 load/save: add reactive part
		0 don't approach to infiniteCanvas.scale, keep at a distance

		0 sparkle opacity anim ?

*[

const duration = 1000;
const positions = [
  {
    x: '+=200',
    y: '+=0',
  },
  {
    x: '+=0',
    y: '+=200',
  },
  {
    x: '-=200',
    y: '+=0',
  },
  {
    x: '+=0',
    y: '-=200',
  },
];
const boxAnimation = anime({
  targets: '#square',
  easing: 'easeInOutSine',
  loop: true,
  translateX: positions.map(p => ({value: p.x, duration})),
  translateY: positions.map(p => ({value: p.y, duration})),
});





var animation = anime({
  targets: '.tick-demo .el',
  translateX: 270,
  direction: 'alternate',
  loop: true,
  easing: 'easeInOutQuad',
  autoplay: false
});

function loop(t) {
  animation.tick(t);
  customRAF = requestAnimationFrame(loop);
}

requestAnimationFrame(loop);

*]

11 janvier 2021:
	0 sparkle serialization
*		0 infiniteCanvas.didCreateRepresentation(represented, rep)

  0 Uncaught (in promise) RangeError: Maximum call stack size exceeded
    at i._toObject (fabric.min.js:1)
    at i._toObject (fabric.min.js:1)
    at i.<anonymous> (fabric.min.js:1)
    at Array.map (<anonymous>)
    at i._toObjects (fabric.min.js:1)
    at i._toObjectMethod (fabric.min.js:1)
    at i.toObject (fabric.min.js:1)
    at JSON.stringify (<anonymous>)
    at Function.save_to_file ((index):8102)
    at Function.saveInfinishute_p ((index):8203)

		|-> freeDrawing

	0 greenMouse
		0 touchSlot
http://fabricjs.com/intersection

*[
	fObj.intersectsWithObject(fObj2)

  canvas.on({
    'object:moving':   onChange,
    'object:scaling':  onChange,
    'object:rotating': onChange,
  });

  function onChange(options) {
    options.target.setCoords();
    canvas.forEachObject(function(obj) {
      if (obj === options.target) return;
      obj.set('opacity' ,options.target.intersectsWithObject(obj) ? 0.5 : 1);
    });
  }
]*

			1 KeyU
		1 startupVersion:
			1 rep_official.text VS fObj.icObj.text  ???
			=> <)
					const rep_free     = represented.r_free();
			   	rep_official.follow(rep_free);

				 	by default, rep_free does not follow rep_official

		0 user-scripted
		0 disable scroll



		0 greenMouse
			0 touchState = TouchState.Touched;
				touchState = TouchState.Untouched;
				so that touch only triggers when object "enters"

			0 rep_touched: lock rep_touched where touch triggered

		0 ? icObj.type = "value"

		0 greenMouseArea

		0 well
			0 "KeyJ"
		0 protoWell

12 janvier 2021:
	0 well
* a well is like a reverse snapSlot
		1. on hold, create new represented
			well.rep_free: onHold
		2. on release:
		 	if out of well's recapture area, disable recapture
			if inside well's recapture area, recapture object: destroy represented

	0 greenMousePOC
		0 greenMouseWell
		1 different touchSlots
			1 touchSlot.touchSlotConfig.transformationFunc
			1 icObj.touchState -> icObj.touchStateDict
			1 update existing objects touchStateDict when a new touchSlot is added to infiniteCanvas
				specific
			1 update touchStateDict when a new non-touchSlot object       is added to infiniteCanvas
*				introduceToExistingObjects

		0 value-checking snapSlot

	0 composite object
* c'est à la fois un objet comme les autres, et à la fois quelque chose de différent
		1 icObj.type = "composite"
		1 icComposite_spec = {composite: icComposite}

		1 class IcCompositeObject {}
		0 moving one part:
			0 makes all parts move 					(== "fixing")
			0 does not make all parts move  (== "mobile")  (example: well's sample)
		(0 move individual part: rearrange composite

*		composite X representations: each representation kind can be seen as a  "layer", in which representation of the composite spreads
		0 createRepresented(composite)
			0 composite can have
				0 top-level representations     (full tree)
					=> fixing part snap
				0 compositePart representations (one leaf)
					=> mobile part snap

		0 tenter un truc et on verra bien
			 this.isCompositePart = false;
			 this.compositeId    = -1;

			1 r_official_update_handler2 not triggered
				=> r_free()

arrête de te plaindre

			0 compositePart sends update to composite, which then transmits a dedicated update to every other part
					compositePart1 inner-updates position ----> composite computes offset ----> compositePart2 outer-updates position
					  																														  		  ----> compositePart2 outer-updates position
				0 "the free commitee"

					0 represented.composite
					0 represented.composite.parts
					0 (index):1590 Uncaught TypeError: rep_free__composite.composite.managePartInnerUpdate is not a function

		0 spawn dual composite


		0 compose: flatten all to composite.parts
		0 decompose

	0 snapSlot: fix z-index stuff plz

(il existe http://fabricjs.com/animation-easing)

13 janvier 2021:
	0 composite represented
*	composite has handle as default part
		so handle is container and also a part
			handle.composite.parts["handle"] = handle;
		and "composite" is the engine, the glue

		handle may or may not be shown on screen

	1 don't use IcComposite/IcCompositePart
	0 icObjComposite.clone()
		composite.engine
		composite.parts

**parts update ABAB recursion makes the two parts move in a linear uniform motion

  1 rotating sparkle
		c'est un peu décevant en fait

	0 well = composite({slot, piece}, customEngine)

	1 don't use infiniteCanvas.onIcObjUpdate(r_official_update_handler);
		rather use part__r_free.onInnerUpdate
							 handle__r_free.onInnerUpdate

	1 engine.start()
		1 Uncaught TypeError: Cannot read property 'r_free' of undefined
			at Object.engine.start ((index):1601)

		=> engine is started too soon

	1 Uncaught RangeError: Maximum call stack size exceeded
	    at Function.values (<anonymous>)
	    at BackingObject.updateWithPropFromRepresentation ((index):3845)
	    at (index):4249
	    at Array.forEach (<anonymous>)
	    at Object.set ((index):4246)
	    at Object.set ((index):4425)
	    at (index):1693
	    at Array.forEach (<anonymous>)
	    at Object.engine.managePartUpdate ((index):1692)
	    at (index):1623

		=> 1 listen:off, mutate, listen:on


14 janvier 2021:
	1 moving fObj does trigger fObj_free innerUpdate
		=> moule: il fallait ne pas faire l'étape icObj.update()
		19:00 : VICTORY :)

	1 update others when !part.isMobile
		(0 a nice thing would be to move handle and let it move everyone
*		1 const arr_handle_and_other = [handle__rep_free].concat(arr_parts_other);
		  const arr_handle_and_other = [handle__rep_free, ...arr_parts_other];					//:)

	0 composite snap: quelques cheveux blancs de plus
		0 rep_snapped must be well formed

	0 composites:
		0 well        = snapSlot  + sample
			0 snapSlot(canSnapFunc)
				snapSlot can only snap sample
				snapSlot.unsnap
					- creates new object and puts it "under user's mouse"
					- snaps back sample
		1 GMOperator    = touchSlot + facade
*			1 icObj.ctype = "gm_operator"
			1 something touches on spawn
				=> icComposite.isTouchable = false;
			1 (index):1413 Uncaught TypeError: Cannot read property 'transformationFunc' of null
    		at touch ((index):1413)


		0 target slot = sample + snapSlot
			0 snapSlot(config)
			0 composite(config)

	0 there is a bug with icText when touching [x2] with text = "1.8...e+21"
	0 icObj.type = "value" (or "valueCarrier")

	0 icObj.type = "valueSnapSlot" with canSnap(value)
	0 icObj.type = "exactValueSnapSlot"
	0 icObj.type = "aroundValueSnapSlot"

	0 composite: save/load
		1 serialize parts
		0 serialize engine...

	0 square image
		0 group(image)

15 janvier 2021:
	(0 snap gm_operator
	0 targetSlot
*		1 backade ^^
			1 icObj.backgroundColor
		0 snapSlot
			1 snapEngine
				1 canSnapFunc
				1 canUnsnapFunc
**			0 toSnapState mutations: toPresnapped, toSnapped, toUnsnapped

			0 validSnap, invalidSnap

* icObj.cType = "<>" may actually be replaced by:
		gmObj.icObj.type = "composite"
		gmObj.type = "<>"


	0 well
		0 snapSlot
			0 canSnapFunc_typeWise: snapSlot can only snap a stem
			0 will/did unsnap: hooks
		0 stem
			0 introduce stem to existing objects

	0 greenMouse
			1 greenMouseify(icObj)
	 		1 greenMouse.onRelease(die) (greenMouseCurse)
			0 targetSnapSlot.onSnap({
					greenMouse.offRelease(die)
				})

	0 Hooker.installHooks
		0 installHooks(snapEngine, "snap")
		  installHooks(snapEngine, "unsnap")

*		0 install hooks on all representations
			represented.getAllReps().foreach(rep => installHook(rep, "<funcName>"))


	0 snapSlot's unsnap is a bit broken (unsnapped is no longer green)
	0 Uncaught TypeError: rep_free.offRelease is not a function
		at unsnap ((index):1058)
		at attemptUnsnapping ((index):993)

		???

	0 mutateSnapSlot__addReactivePart
		0 snapEngine.snap
		0 snapEngine.unsnap
		0 snapEngine.presnap


	0 créer une machine pour changer les idées
		0

un jour où j'ai rien à faire:
*	0 créer un beau document à partir de still_shute

16 janvier 2021:
	0 clone machine
		0 composite: snapSlot + protoWell

*[
	ROUNDED CORNERS:

 	#1 rect.setPatternFill
	https://stackoverflow.com/questions/55911215/fabricjs-image-with-rounded-corner-and-stroke/55913276
	fabric.util.loadImage('http://fabricjs.com/assets/pug.jpg', function (img) {
		rect.setPatternFill({
			source: img,
			repeat: 'no-repeat',
			patternTransform: [0.2, 0, 0, 0.2, 0, 0]
		});
		canvas.renderAll();
	});


	#2 rect.rx,rect.ry, fObj.clipTo
	http://jsfiddle.net/ZxYCP/659/
	var canvas = new fabric.Canvas('c');

	function roundedCorners(ctx) {
		var rect = new fabric.Rect({
	    left:0,
	    top:0,
	    rx:20 / this.scaleX,
	    ry:20 / this.scaleY,
	    width:this.width,
	    height:this.height,
	    fill:'#000000'
	  });
	  rect._render(ctx, false);
	}

	fabric.Image.fromURL('http://fabricjs.com/lib/pug.jpg', function(img) {
	  img.set({
	    angle: 45,
	    width: 500,
	    height: 500,
	    left: 140,
	    top: 100,
	    scaleX: 0.3,
	    scaleY: 0.3,
	    clipTo: roundedCorners.bind(img)
	  });
	  canvas.add(img).setActiveObject(img);
	});

	canvas itself:
	https://stackoverflow.com/questions/41967332/fabricjs-canvas-with-rounded-corners

*]

	0 rounded: composite
	0 icObj.type = "card" (rounded rect)

	1 snapEngine
	1 snapEngine hooks

*	0 Uncaught TypeError: rep_free.offRelease is not a function
    at unsnap ((index):9562)
    at SnapEngine.func_decorated [as unsnap] ((index):4627)

		=> patch to avoid crash but there is still a big problem there
		=> this is related to greenMouseify no longer working
		0 rep_free.offRelease == null
		0 unsnap is broken too

	1 clone()
	1 clone() on unsnap.will

https://smartbear.com/blog/test-and-monitor/four-serious-math-libraries-for-javascript/
https://mathjs.org/
	0 math.js
	0 [+y] operator

	0 hook a hook
		Hooker.installHooks(obj.will["lol"], "trigger")
		obj.will["lol"].will["trigger"]

	0 countdown
		0 trigger =

17 janvier 2021:
** representations and functions: repA.func = X; repB.syncWith(repA) 		=> repA.func = X.bind(this) ?   etc.

	0 icObj.type = "trigger"     (this object is not compelled to have a visual representation)
	0 icObj.type = "eventEmitter" (this object is not compelled to have a visual representation)
			0 eventEmitter(arr_objects)
			0 eventEmitter(area)
	0 icObj.type = "area"				 (this object is not compelled to have a visual representation)
		0 area.getArrObjects()

** rep_free could be a non-visual control representation, rep_free == control representation _by definition_ (c'est vrai qu'on aurait pu l'appeler rep_control mais rep_free c'est bien)

	0 countDown: composite(icText, trigger)
	0 resetEventEmitter: eventEmitter(trigger, destinations)

	1 mettre infinishute sur zpacezombor.ddns.net pour que Paul puisse tester
		1 ipCesameFilter (the cosmic keys to my creations and times)
*		\nodeapp>npm run start_show

	1 on va regarder math.js en attendant

**[
https://mathjs.org/docs/index.html
https://mathjs.org/docs/reference/functions.html
https://mathjs.org/docs/expressions/expression_trees.html

math.chain(3)
	.add(4)
	.subtract(2)
	.done() // 5

math.chain( [[1, 2], [3, 4]] )
	.subset(math.index(0, 0), 8)
	.multiply(3)
	.done() // [[24, 6], [9, 12]]


	((0 create empty expression		("nonsense"...)

const ten = new math.ConstantNode(10)
const x = new math.SymbolNode('x')
const fifty = new math.ConstantNode(50)

const node1 = new math.RelationalNode(['smaller', 'smallerEq'], [ten, x, fifty])
const node2 = math.parse('10 < x <= 50')


	///OBJECT NODES
const node1 = math.parse('{a: 1, b: 2, c: 3}')

const a = new math.ConstantNode(1)
const b = new math.ConstantNode(2)
const c = new math.ConstantNode(3)
const node2 = new math.ObjectNode({a: a, b: b, c: c})					//Wow!


Extension											Description
math‑expression‑evaluator			An extremely efficient, flexible and amazing evaluator for Math expression in Javascript.
numbers.js										Advanced Mathematics Library for Node.js and JavaScript
numeric.js										Numerical analysis in Javascript
decimal.js										An arbitrary-precision Decimal type for JavaScript. Used by mathjs for BigNumber support.
ndarray												Multidimensional arrays for JavaScript
Algebrite											Computer Algebra System in Javascript (Coffeescript)
algebra.js										Build, display, and solve algebraic equations
Nerdamer											Symbolic Math for Javascript
numeral-js										A javascript library for formatting and manipulating numbers

]**


	1 algebra.js
		https://algebra.js.org/
		var expr = new Expression("x");
		expr = expr.subtract(3);
		expr = expr.add("x");

	0 beautiful display of math expr
		0 katex: https://github.com/KaTeX/KaTeX
		OR
		1 fabricjs :) (via svg using MathJax)
			http://jsfiddle.net/3aHQc/39/
			1 https://www.mathjax.org/
				1 import lib
				1 const svg = MathJax.tex2svg('\\frac{1}{x^2-1}', {display: true});
			1 icObj.type = "svg"

mjx-container[jax="SVG"] > svg a {
  fill: blue;
  stroke: blue;
}
			1 <g fill="currentColor" stroke="currentColor"
				https://stackoverflow.com/questions/45964955/mathjax-stoke-and-fill-color-value-in-genrated-svg-is-currentcolor
				https://codepen.io/wadeharrell/pen/iebdw/
				=> svgEl.style.color = "magenta";

			(0 Uncaught TypeError: Cannot set property 'crossOrigin' of undefined
				at Object.C.parseSVGDocument (fabric.min.js:1)
				at Object.loadSVGFromString (fabric.min.js:1)
				at FabricIntegration.createFabricSvgWithIcObj ((index):5705)

				=> svgString = svgString.replace(/http:\/\//g, 'https://')
					fabric.loadSVGFromString(svgString, () => {
    				// ...
					})
				https://stackoverflow.com/questions/36662320/cors-issue-when-using-fabric-fromurl

			(0 This page contains the following errors:
				error on line 1 at column 2605: Extra content at the end of the document
				Below is a rendering of the page up to the first error.


		0 ? Mathjax display ?
			https://mathjax.github.io/MathJax-demos-web/input-tex2svg.html

*[
<body>
  <canvas id="canvas" width="400" height="400"></canvas>

  <script type="text/javascript">
    // This function does the actual work
    function tex(text, callback) {
        // Create a script element with the LaTeX code
        var div = document.createElement("div");
        div.style.position = "absolute";
        div.style.left = "-1000px";
        document.body.appendChild(div);
        var se = document.createElement("script");
        se.setAttribute("type", "math/tex");
        se.innerHTML = text;
        div.appendChild(se);
        MathJax.Hub.Process(se, function() {
            // When processing is done, remove from the DOM
            // Wait some time before doing tht because MathJax calls this function before
            // actually displaying the output
            var display = function() {
                // Get the frame where the current Math is displayed
                var frame = document.getElementById(se.id + "-Frame");
                if(!frame) {
                    setTimeout(display, 500);
                    return;
                }

                // Load the SVG
                var svg = frame.getElementsByTagName("svg")[0];
                svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                svg.setAttribute("version", "1.1");
                var height = svg.parentNode.offsetHeight;
                var width = svg.parentNode.offsetWidth;
                svg.setAttribute("height", height);
                svg.setAttribute("width", width);
                svg.removeAttribute("style");

                // Embed the global MathJAX elements to it
                var mathJaxGlobal = document.getElementById("MathJax_SVG_glyphs");
                svg.appendChild(mathJaxGlobal.cloneNode(true));

                // Create a data URL
                var svgSource = '<?xml version="1.0" encoding="UTF-8"?>' + "\n" + '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">' + "\n" + svg.outerHTML;
                var retval = "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgSource)));


                // Remove the temporary elements
                document.body.removeChild(div);

                // Invoke the user callback
                callback(retval, width, height);
            };
            setTimeout(display, 1000);
        });
    }


    document.onload = function() {
      var canvas = new fabric.Canvas("canvas");

      tex("1+\\int_x^y e^x dx + \\ldots", function(svg, width, height) {
          // Here you have a data url for a svg file
          // Draw using FabricJS:
          fabric.Image.fromURL(svg, function(img) {
              img.height = height;
              img.width = width;
              canvas.add(img);
          });
      });
    };
  </script>
</body>
*]

**Promise.race()

	0	mutation of tex
		0 icObj.type = "tex"
		0 icObj.tex property


** https://numfocus.org/sponsored-projects
	https://nteract.io/


18 janvier 2021:
	1 icObj.type = "tex"
**1 group.add(child) -> group.addWithUpdate(child)

** il y a de plus en plus de petits bugs chiants
		0 snapSlot
		0 freeDrawing
		0 icSvg|icTex|icExpr zScroll

	0 tex --> math
		0 Uncaught TypeError: algebra.fromTex is not a function

	0 svg size = icObj.size
		0 TypeError: Cannot set property width of #<SVGSVGElement> which has only a getter

	0 icObj.type = "computed"
	0 show unsimplified expression

	0 composite::delete

	0 objectifs:
		1 0. time-ordered (("chronordered")) unsimplified expression plz
				1 math.js
				https://mathjs.org/examples/browser/pretty_printing_with_mathjax.html.html
					let parenthesis = 'keep'
					let implicit    = 'hide'
					const latex = node ? node.toTex({parenthesis: parenthesis, implicit: implicit}) : ''
					=> 1 use math.node

							r {value: 1, comment: ""}
								comment: ""
								value: 1
								__proto__: r
									clone: ƒ ()
									forEach: ƒ (e)
									isConstantNode: true
									map: ƒ (e)
									toHTML: ƒ (e)
									toJSON: ƒ ()
									type: "ConstantNode"
									_compile: ƒ (e,t)
									_toString: ƒ (e)
									_toTex: ƒ (e)

							const node_operator = new math.OperatorNode('+', 'add', [node_a, node_b]);

			=> i don't need algebra.js

** il y a des simplify spéciaux

		0 1. get to number
			0 icObj.type = "observer"
			0 icObj.type = "trigger"
				0 reset trigger
				0 cooldown
			0 icObj.type = "eventEmitter"
				0 circle propagation
				0 if receiver.isInside(circle)
			0 icObj.type = "eventReceiver"
				0 circle.onTouch()
		0 2. effeuillage d'expression jusqu'à x
		0 3. effeuillage d'équation   jusqu'à x =

		0 4. fabrication d'expressions
			0 gros travail autour de simplify(expr, rules, scope, options)

20 janvier 2021:
	0 meilleur affichage
		0 remplacer . par x
		0 mettre des parenthèses autour de -1
https://mathjs.org/docs/expressions/customization.html#custom-html-latex-and-string-output

	0 serialize a challenge
		to ease dev
		1 mathNode
		0 reactiveObjects
			0 snapSlot
			0 touchSlot
			0 listener
			0 trigger
			0 eventEmitter
			0 eventReceiver
		0 composite
			0 gmOperator
			0 well

	0 show unsimplified expression in display field
		0 icObj.cType = "facet_<X>" (==composite(observer,computed) or composite(observer,icMathNode))
		0 observe path: obj.prop1.prop2
			0 observe obj.mathNode
			0 observe obj.position (show coordinates)
				etc.
		0 always keep unsimplified by your side
	1 show simplified expression in display field

	0 show expression as tree
		0 s'inspirer de https://github.com/anvaka/ngraph.fabric
		1 import ngraph.graph
				https://github.com/anvaka/ngraph.graph
		0 create composite
			0 icObj.ctype = "graph"


(0 charts
	https://www.npmjs.com/package/chart-js-fabric

((il existe scriptographer: https://scriptographer.org/gallery/scriptographer-workshop-4/

21 janvier 2021:
	1 TeX: \cdot -> \times
	1 math.ParenthesisNode(node_minus_1)

	1 countdown
** 		engine-based components: icObj.type = "engined";
			icObj.eType = "countdown";

			1 countdown script
				(0 https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/
				1X countdown.js
					https://raw.githubusercontent.com/mckamey/countdownjs/master/countdown.min.js
var timerId =
  countdown(
    new Date(),
    function(ts) {
      document.getElementById('pageTimer').innerHTML = ts.toHTML("strong");
    },
    countdown.HOURS|countdown.MINUTES|countdown.SECONDS);

// later on this timer may be stopped
window.clearInterval(timerId);
				1 anime.js

	0 serialize countdown
	0 essais restants: 2 (autrement dit le contenu du finiteWell)

22 janvier 2021:
	0 maker: easy rect
	0 z-Index mgmt
	0 paste img in rect

	0 serialize gmOperator
	 	0 serialize engine
			0 serialize javascript
				https://stackoverflow.com/questions/3608545/how-to-serialize-deserialize-javascript-objects
				https://github.com/yahoo/serialize-javascript		("living part" is serialized)
				https://github.com/khayll/jsonmix								("living part" stays in host app)

				0 Uncaught ReferenceError: require is not defined
				=> 0 get/make browser versions
						0 browserify
						OR
						0 webpack

*[
<script src="bundle.js"></script>
<script>
  var through = require('through');
  var duplexer = require('duplexer');
  var myModule = require('my-module');
  /* ... */
</script>


var browserify = require('browserify');
var http = require('http');

http.createServer(function (req, res) {
    if (req.url === '/bundle.js') {
        res.setHeader('content-type', 'application/javascript');
        var b = browserify(__dirname + '/main.js').bundle();
        b.on('error', console.error);
        b.pipe(res);
    }
    else res.writeHead(404, 'not found')
});
*]

https://en.wikipedia.org/wiki/ISC_license

		1 libGenerator
			1 npm init
**		1 npm install -g browserify
			1 npm install serialize-javascript
			1 create main.js
				var serialize = require('serialize-javascript');

				var serial = serialize({
						fn   : function addOne(arg) { return arg+1; },
				});

				function deserialize(serializedJavascript){
  				return eval('(' + serializedJavascript + ')');
				}

			1X >browserify main.js -o bundle.js
			1 browserify main.js --standalone Bundle > bundle.js
					browserify main.js --standalone Bundle_SJ > serialize-javascript.browserified.bundle.js
			1 <script src="bundle.js"></script>
			1	<script>
			 		var myFunc = Bundle.myFunc;
				</script>


			0 npm install --global exorcist
			0 browserify main.js --debug | exorcist bundle.map.js > bundle.js
			0 npm install --save-dev minifyify

((
https://ramdajs.com/
https://github.com/selfrefactor/rambda
https://github.com/selfrefactor/rambda#differences-between-rambda-and-ramda
))

	0? engine.start(context)
			qu'est-ce qu'on capture dans les closures, qu'est-ce qu'on ne capture pas ?

*		=> {}object != class instance
 					object.func vs classInstance.__proto__.func

	0 save animating countDown:
		1 Uncaught TypeError: Converting circular structure to JSON
			=> animation.target: countDown -> animatedObj
		1 Uncaught TypeError: Serializing native function: bound
			=> 1 remove .bind(this);
		0 VM3222:4 Uncaught (in promise) ReferenceError: facade is not defined
			at Object.stepFunc (eval at deserialize
			=> 0 stop using closures			OOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH :::::::::::'''''''''''''''(((((((((((((((((


	0 composite(composite1, composite2)
	0 compose(selection)
		1 only compose "top level objects": ignore selected composites' parts
		1 don't addRepresented for preexisting parts
		1 Uncaught Error: oh, no, id collision for id: b5137522-72d5-b7e3-cdd0-f601d71889ba
			at InfiniteCanvas.addRepresentation ((index):2365)
			at InfiniteCanvas.addRepresented
			=> id_icObj = represented.r_official().id;

		1 cType is given by tag object (which is one of the selected objects)
			"challenge.greenMouse.numberOne"

	0 bug: rect spawn display	is wrong after zScroll

	1 icObj.type = "tag"
		1 challenge = composite(selection, "challenge")


	0 selection: shift click: add object to selection
						   alt   click: remove object from selection

	0 composite handle visibility:
		0 show handle when part is selected
		0 hide when nothing is selected

*	0 fun: allow chosen non-top-level objects to be part of composite: create "funny dependencies behavior" objects

* 0 generalized import: import any supported file type

23 janvier 2021:
	1 compose
	1 decompose
		1 remove represented
			1 untether
**		1 extroduce 			^^

	1 stability: compose-->decompose-->compose-->...
		1	Uncaught TypeError: Cannot read property 'r_official' of null
			at (index):646
			at Array.map (<anonymous>)
			at InfiniteCanvas.introduceToExistingType_touchSlot ((index):646)

			|-> const arr_official = Object.values(infiniteCanvas.represented).map(represented => represented.r_official());
			|-> il y a des represented qui n'ont pas de r_official() ...
			=> this.represented[id_represented] = null; -> delete this.represented[id_represented];

	1 icObj.type = "tag"

	0 bug: rect spawn display	is wrong after zScroll
		=> ? createIcActiveSelection_from_activeSelectionFObj


	0 composite z-scroll
		0 update position/size wrt handle

	0 z-Index
		I guess it's gonna be tough (zIndexes = {} mgmt)
		0 zIndex control
			0 single object

*[
fabric.Object.prototype.getZIndex = function() {
    return this.canvas.getObjects().indexOf(this);
}

canvas.moveTo(object, index);
object.moveTo(index);

/**
 * Moves an object to specified level in stack of drawn objects
 * @param {fabric.Object} object Object to send
 * @param {Number} index Position to move to
 * @return {fabric.Canvas} thisArg
 * @chainable
 */
moveTo: function (object, index) {
	removeFromArray(this._objects, object);
	this._objects.splice(index, 0, object);
	return this.renderOnAddRemove && this.requestRenderAll();
},

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice

canvas.bringToFront
canvas.bringForward
canvas.sendBackwards
canvas.sendToBack

function bringToFront(){
 var activeObj = canvas.getActiveObject();
 activeObj && canvas.bringToFront(activeObj).discardActiveObject(activeObj).renderAll();
}

*]
				0 icObj.zIndex vs fObj.zIndex
						icObj_zIndex 6
						fObj_zIndex 1
					0 usecase: adding a icObj with zIndex 4 to an existing zIndex 1 and zIndex 8 scene
					(0? le système 6.10: icObj can have the same zIndex: a second number is used to differentiate
					OR
					(0 fObj zIndexes must be swapped _at the same time_, i.e. the object to process is zIndexSwap
					OR
					1 function fObjZIndexForIcObj(icObj) (sort all and find insertion index)

					0 le test:
							random_number().map(n => icText(text: n, zIndex: n)
							et il faut que les objets ajoutés soient dans l'ordre des nombres affichés
*


				1 fObj.on("selected") ==> icObj.isSelected = true
					|-> breaks createIcActiveSelection_from_activeSelectionFObj
					=> initializeSelectionMgmt()

			1 selection: don't bring object to front when selected, keep object at its true zIndex
				=> canvas.preserveObjectStacking = true;

			0 composite zIndex: all composite parts may/must all move together

		0 rep__zIndex
		0 zPeerce

24 janvier 2021:
	0 gmOperator mutation:
		Plusieurs choix se présentent:
		valueOperator3(value) = valueOperator2(valueOperator1(value))			(standard composition)
		valueOperator3 = (operatorOperatorify(valueOperator2))(valueOperator1) = operatorOperator2(valueOperator1) (there is no typo here, operatorOperator means an operator which applies to operators)
		[+1] * [+10] = [+11]
		[+2] * [-1]  = [-2]
		[x2] * [+10] = [x2+10]

	0 serialize small-engined icObj
	0 composite copy/paste

25 janvier 2021:
	0 icObj.eType = "interactor"
		0 icObj.onInteraction()
		0 icObj.offInteraction()
		0 icObj.interact()
	0 randomNumber

	0 icObj.isHydrated
	0 infiniteCanvas.getObjectsAtPosition(position)
	(0 infiniteCanvas: highlight interactor on hover

*	1 engineCarrier.getContextObj(engineCarrier)
*	1 engine.initialize(contextObj)
	1 serialize context-free engine
	0 serialize countdown
	0 serialize touchSlot
	0 serialize snapSlot


	1 equationNode mutation
		1 RelationalNode

const ten = new math.ConstantNode(10)
const x = new math.SymbolNode('x')
const fifty = new math.ConstantNode(50)

const node1 = new math.RelationalNode(['smaller', 'smallerEq'], [ten, x, fifty])
const node2 = math.parse('10 < x <= 50')

AccessorNode
AssignmentNode
FunctionAssignmentNode
ConditionalNode
RangeNode
ObjectNode

26 janvier 2021:
	0 random expression generator
		https://stackoverflow.com/questions/32936045/generate-a-random-math-equation-using-random-numbers-and-operators-in-javascript
*		terminalNode
		1 Uncaught (in promise) TypeError: Cannot read property 'OperatorNode:plus' of undefined
			=> math.OperatorNode("+", "add", arr_nodes)
		1 only one "x" symbol plz
		0 no "x" in denominator plz

	0 simplify: step by step
		1 copy/paste(mathNode)
		0 touchSlot: simplify
			1 logo
			1 transformationFunc
			0 logoed gmOperator
		0 touchSlot: simplify__step_by_step
			https://www.wikiwand.com/en/Computer_algebra_system
			1 logo
			0 transformationFunc
				1 getArr_deep_first
				0 perform simplification
*					=> node mutation			-_-'
					0 mutateNode(?,?,?)
					0 check if simplication has changed something
					0 if not, continue to other node

*[
REDUCE EARLY EXIT HACK
https://stackoverflow.com/questions/36144406/how-to-early-break-reduce-method
const array = ['9', '91', '95', '96', '99'];
const x = array
    .slice(0)                         // create copy of "array" for iterating
    .reduce((acc, curr, i, arr) => {
       if (i === 2) arr.splice(1);    // eject early by mutating iterated copy
       return (acc += curr);
    }, '');
*]

			0 logoed gmOperator

		0 create equality chain: initial = <simplified_step1> = <simplified_step2> = ...
			0 one line
			0 multiple lines


**0 smartPool: operators (and other objects) for step
		0 createSmartPool(mathNode)

	0 tex edit
		https://github.com/SwiftLaTeX/SwiftLaTeX

	0 evaluation
		1 logo
		0 transformationFunc
		0 logoed gmOperator
		0 [e(0)] [e(1)] [e(10)] [e(-1)] [e(1/2)] [e(y)]

0 faire tester à n'importe qui

27 janvier 2021:
	1 childnode.path
	1 treeBySettingNodeAtPath(tree, path, node)
		1 shallow
		(0 deep

	1 [1] [2]     [3] [4]
      [5]         [6]
			      [7]
		1 getDepth()
		1 getArrNodesAtDepth()

*bon, on a un simplify__step_by_step qui fonctionne, mais il est un peu décevant

**0 texEdit
	(0 text__mathNode
	(0 icObj.type = "as_text__mathNode";		<as_X__Y>
	0 icObj.cType = "mathNode__editable_as_text"
		 	0 facade
			0 medium__editing
			0 engine
	0 https://docs.mathquill.com/en/latest/

	0 integrate mathQuill into fabric
		0 icObj.type = "html"
		(0 ? fabric.Html
		0 http://fabricjs.com/interaction-with-objects-outside-canvas
			0 icObj.host = over canvas
			=> zIndex control will not be possible
		OR
		0 http://fabricjs.com/video-element
			0 try to display simple <div>Hello world !</div>
			0 try to trigger object events
			0 ? rep_free

fabric.util.requestAnimFrame(function render() {
  canvas.renderAll();
  fabric.util.requestAnimFrame(render);
});

	0 key<X>: Edit

	0 "obvious simplify": check if there is an obvious simplify (reciprocal operatorNodes)

28 janvier 2021:
	1 Uncaught TypeError: Failed to execute 'drawImage' on 'CanvasRenderingContext2D':
		The provided value is not of type
		'(CSSImageValue or HTMLImageElement or SVGImageElement or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas)'
    at i._renderFill (fabric.min.js:1)
		=> https://html2canvas.hertzen.com/
			1 display htmlElt

	1 Uncaught (in promise) Unable to find element in cloned iframe
		https://stackoverflow.com/questions/58798256/html2canvas-unable-to-find-element-in-cloned-iframe
		=> document.body.addChildElement()

*[
MUTATION OBSERVER:
https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver

// Create an observer instance linked to the callback function
const observer = new MutationObserver(callback);

// Start observing the target node for configured mutations
observer.observe(targetNode, config);

// Later, you can stop observing
observer.disconnect();
*]

	(0? mutation promise:
		https://blog.frankmtaylor.com/2017/06/16/promising-a-mutation-using-mutationobserver-and-promises-together/
	OR
	1 mutation observable (Rx)
		0 input.text
			0 https://stackoverflow.com/questions/32383349/detect-value-change-in-input-tag-with-vanilla-javascript-and-mutationobserver

	0 forward event
		0 focus
			0 ? double focus: fObj + htmlElt
		0 edit
		0X cursor screenshot ?
			https://github.com/wikimedia/web-html-stream
		0 forward click at position



	0 spawn mathQuill in front of canvas for mathNode edition
		1 install mathQuill
[*
<link rel="stylesheet" href="/path/to/mathquill.css"/>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="/path/to/mathquill.js"></script>
<script>
var MQ = MathQuill.getInterface(2);
</script>
*]
			1 get lib
				libGenerator>npm install mathquill
			(0 build lib
			1 show mathquill html element
				"To create an editable math field, call MQ.MathField() on an HTML element and, optionally, a config options object."
				var answerMathField = MQ.MathField(answerSpan)
				mathField.latex()

			1X try to do MQ.MathField(canvasElt)
**(0 implement fabric.MathQuill

29 janvier 2021:
	1 mathNode editing: start
		1 fObj.onDoubleClick()
		1 edit.start
			1 spawn mathField
		 		http://fabricjs.com/interaction-with-objects-outside-canvas
			1 listen to focusout
				(0 mathField.upOutOf
				OR
				1 mathField.el().addListener("focusout")
				https://www.w3schools.com/jsref/event_onfocusout.asp#:~:text=The%20onfocusout%20event%20occurs%20when,should%20use%20the%20onfocusout%20event.

	0 mathNode editing: end
		1 edit.end
			1 removeAllListeners
				https://stackoverflow.com/questions/9251837/how-to-remove-all-listeners-in-an-element
				$(el).off();
		0 mathField.latex() --> icObj.parse(tex)
			01 Uncaught SyntaxError: Syntax error in part "\frac{y-97+30+19}{44-86+\frac{25}{51}}" (char 1)
			https://github.com/josdejong/mathjs/issues/566
			http://zorkow.github.io/semantic-tree-visualiser/visualise.html
			https://github.com/kisonecat/math-expressions
				=>
					1 import lib: math-expressions
						1 >browserify main.js --standalone Bundle_ME > math-expressions.browserified.bundle.js

					1 math.parse(MathExpression.fromTex().toText())
				|->
					0 Uncaught ParseError {name: "ParseError", message: "Invalid location of '='"}

			0 don't parse "=" into ":="
**		0 upgrade to gmOperator when writing "x50"
			0 x VS ×: it would be nice to write what user means when they type keyX

	0 MathQuill + Visual Keyboard:
		http://jsfiddle.net/a7mad24/gk017omy/
		https://github.com/Mottie/Keyboard

*[
mathField config:
{
  spaceBehavesLikeTab: true,
  leftRightIntoCmdGoes: 'up',
  restrictMismatchedBrackets: true,
  sumStartsWithNEquals: true,
  supSubsRequireOperand: true,
  charsThatBreakOutOfSupSub: '+-=<>',
  autoSubscriptNumerals: true,
  autoCommands: 'pi theta sqrt sum',
  autoOperatorNames: 'sin cos',
  maxDepth: 10,
  substituteTextarea: function() {
    return document.createElement('textarea');
  },
  handlers: {
    edit: function(mathField) { ... },
    upOutOf: function(mathField) { ... },
    moveOutOf: function(dir, mathField) { if (dir === MQ.L) ... else ... }
  }
}
*]

	1 pragmatic: edit gmOperator using icText
		1 get {operatorSymbol, value}
		1 transformationFuncForText()
		(0 x <=> *
		1 fObj.on('editing:exited')

		1 tester [x (22/7)]
			=> 1 node_b = math.parse(valueString);

>>> 0 interaction: touchable part

30 janvier 2021:
	the real thing: serialization
	the real thing: réparation de snapSlot
	0 il y a trop de logs

	0 countdown
		0 Uncaught TypeError: icEngined.getContextObj is not a function
			at (index):16004
			at (index):3854
			at Array.forEach (<anonymous>)
			at InfiniteCanvas.didAddRepresented ((index):3853)
			at InfiniteCanvas.addRepresented ((index):3847)
			at InfiniteCanvas.addIcObject ((index):3810)
			at InfiniteCanvas.addNewIcObject ((index):4148)
			at InfiniteCanvas.addNewCountdown ((index):4758)

**0? rep_engined

	0 composite
		0 Uncaught (in promise) ReferenceError: engine is not defined
	    at Object.initialize (eval at deserialize (serialize-javascript.browserified.bundle.js:2211), <anonymous>:6:13)
	    at (index):15994
	    at (index):3854
	    at Array.forEach (<anonymous>)
	    at InfiniteCanvas.didAddRepresented ((index):3853)
	    at InfiniteCanvas.addRepresented ((index):3847)
	    at InfiniteCanvas.addIcObject ((index):3810)
	    at InfiniteCanvas.addDehydratedIcObject ((index):4061)

	1 icEngined_debug
	0 exponential growth

	0 enginize
		0 touchSlot
>>>		0 TouchSlotEngine
				0 contextObj.infiniteCanvas
				  contextObj.

		0 snapSlot
			0 SnapSlotEngine
		0 composite
			0 CompositeEngine

31 janvier 2021:
	1 "embracing tree" / onion mathNode
		0 top layer (same precedence all flattened to same level)
			0 top layer simplification

		1 stl: "simplify__top_layer" gmOperator
			1 rentrer dans les parenthèses si besoin est
			1 donner la dernière terminalNode s'il ne reste plus qu'elle après simplification
				(0 math.js:40 Uncaught TypeError: Value has unknown type. Value: [object Object]
				=> les deux dernières nodes sont terminales dont il faut regarder si l'une des deux est un "bon candidat" pour la simplification

01 février 2021:
	1 stl
	1 srp gmOperator: "simplify__remove_parentheses"
	0 sr0 gmOperator: "simplify__remove_0_term"

	0 don't divide by 0 plz

02 février 2021:
	0 serialization
		1 touchSlot
			1 engine
			1 engine.prepareForDehydration
			1 rehydrate
				1 Uncaught TypeError: Cannot read property 'infiniteCanvas' of undefined
					at r_official_update_handler2
					=>
						0? engine.start(infiniteCanvas)
						OR
						1 (re)bind()
							engine.myFunc = engine.myFunc.bind(engine)
							1 dehydrate:
								0X unbind()
									https://stackoverflow.com/questions/56005103/how-to-unbind-this-from-a-function-in-javascript
								=>
**								1 engine.virgin ==> ("virgine") ^^
**								1 engine.awoken
**attention avec les func.bind(this), les arrow functions font les rebelles: il faut utiliser les bonnes vieilles function() à la place.

							1 VM35692:113 Uncaught TypeError: Cannot read property 'transformationFunc' of undefined
    						at Object.touch
								=> 1 serialize touchSlotConfig

			1 refactor: contextObj -> scopeObj
				https://stackoverflow.com/questions/41385835/invocation-context-and-execution-context-in-javascript-are-we-talking-of-th/41386097#41386097

			1 try hot-mutating touchSlotConfig and see effects

			0 allow touchSlot to move
			0 try mutating touchSlotConfig and check if serialization is still ok
				when touchSlot touches a (touch)SlotMutator
				0 SlotMutator


03 février 2021:
	0 bug: touchSlot does not work when touching older object
		0 introduceToExistingObjects...

	0 the tough part:
		1 snapSlot
			1 engine
			1 VM5995:68 Uncaught TypeError: Cannot read property 'canSnapFunc' of undefined
				=> 1 snapSlotConfig

		1 repair snapSlot
			1 try with icText
				1 distance(icObj1, icObj2)
			=> setTimeout(, 0)

		0 "snapComp" = composite(snapSlot)

		0 serialize snapped object
			0 Uncaught TypeError: icObj.nowReleased is not a function
    		at i.<anonymous> ((index):11644)
				=> 0 icObj hydratation: icObj.addInteraction_hold()


		1 composite
			1 engine
*			1 composite config:
					{
						[id]: {
							isMobile: true,

						},
					}

		0 refactor composites
			0 gmOperator
				1 Uncaught TypeError: Cannot read property 'isMobile' of undefined
					at Object.CompositeEngine.managePartUpdate ((index):8321)
					=> ugly code redundancy was causing the problem

				0 deserialization
					0 gmOperator_editable
					0 Uncaught ReferenceError: mathOperatorSymbol is not defined
    				at standardOperation (eval at deserialize

const transformationFunc = (node_a) => {
  var outNode;

  function standardOperation(node_in) {
    var outNode;

    // const node_b        = new math.ConstantNode(mathValue);
    const node_operator = new math.OperatorNode(mathOperatorSymbol, mathOperatorFuncName, [node_in, node_b]);

						=> gmOperator_editable has an update engine (facade.text listener)


			0 targetSlot
			0 well

	0 mathNode deserialization: strange "x" symbol when deserializing \times

04 février 2021:
**0 engined.engines = {
			"compositeEngine":
			"textListenerEngine":
		}

	0 gmOperator_editable
		1 textChangeEngine
			0 ??? rep_free ???
		0 Uncaught (in promise) TypeError: Cannot read property 'onEditExit' of undefined
			=> 1 serialize composite.parts
				 1 if(icObj.onEditExit == null) {
						icObj.addInteraction_edit();
					 }
				 0 Uncaught ReferenceError: mathOperatorSymbol is not defined
				 	 at standardOperation

					 => transformationFunc is not serialized well
					 			|-> problème de capture
					 			0 ? il faut essayer de faire sans capture ?

	  https://reperiendi.wordpress.com/2016/01/21/serializing-javascript-closures-2/
		https://www.npmjs.com/package/serialize-closures

		0 serialize-closures


	0 targetSlot
		0 deserialize
			0 Uncaught ReferenceError: targetValue is not defined
				|-> problème de capture
	0 well
		0 snapEngine.will["unsnap"]
		1 zIndex manipulation:
			Uncaught TypeError: Cannot read property 'getObjects' of undefined
    	at i.FabricIntegration.fabric.Object.getFObjZIndex ((index):9031)
			=> object was ill-formed
		0 Uncaught TypeError: icObj.nowHeld is not a function
    	at i.<anonymous> ((index):11832)

	0 fix now broken:
		0 decompose
>>>		0 Uncaught TypeError: Cannot read property 'infiniteCanvas' of undefined
				at CompositeEngine.stop
		1 compose
			=> don't use the same keyboard shortcut as for freeDrawing

	0 gmWell

**0 pragmatism: ok, so serialization is complicated
		=> 0 create challenge chain: solving challenge1 mutates challenge1 so it becomes challenge2, etc.
			 0 allow spawning challenge(n)

		0 digit1: infiniteCanvas.addNewGMChallenge(0)

05 février 2021:
	0 bug when spawning gmOperator over an existing gmOperator
	0 bug when spawning gmOperator after an existing obj: obj is not touchable

	0 pragmatism
		1 clickWell
			1 createIcButton
		0 gmClickWell
			1 add green mouse curse to spawn
		0 touchTarget
			0 touchFunc
				touch.will
				touch.did

			0 canTouchFunc(above, below) VS canTouchFunc(above, icGMTargetTouchSlot)

*[
	https://stackoverflow.com/questions/13108310/fabric-js-right-mouse-click

var canvas = new fabric.Canvas('canvas', {
  height: height,
  width: width,
  fireRightClick: true,  // <-- enable firing of right click events
  fireMiddleClick: true, // <-- enable firing of middle click events
  stopContextMenu: true, // <--  prevent context menu from showing
});

	https://stackoverflow.com/questions/39391945/fabric-js-attach-object-creation-to-mouse-click
*]

	0 double touch for equations
		0 engined.engines
		0 NTouchEngine

06 février 2021:
* (0 touchSlot.will["touch"]: mutate canTouchFunc juste before it's going to be used
	 1 touchSlotConfig.context.facade

	 1 transformationFunc ~~ mathNode
	 	1 update gmOperatorMama
	 	1 bug avec [x 2]
			=> transformationFunc__mathNode

07 février 2021:
	0 spawn challenge
		0 challenge(12, ["+ 1", "+ 10", "x 2", "x (-1)"], -48)
			0 createGMOperator("+ 1")
				0 GMOperatorMama.operatorConfigForString("+ 1")
			0 canBeHeld = false
		0 challenge.addInteraction_complete

	(0 mutate challenge

	0 GolfCourse
			position
			components
			rel_rect

	0 GolfStep
		0 add listeners on golfcourse components
		0 .activate()

	0 GolfGameHUD
	0 GameAssistant
		0 say
		0 move

	(0 icObjType = "arrow"
			icObj.orientTo(point)
*	moving on the canvas kills the number-bothered focus

	0 move to next course on completed
	0 infiniteCanvas.moveTo()
	0 infiniteCanvas.show(rect);

08 février 2021:
  1 enlève des logs
	1 bornAgain_gm
	1 touchSlot: introduce to existing objects
	0 tester si gmTargetSlot fonctionne

09 février 2021:
	1 gmOperator(operatorFuncName)
	0 well avec bornAgain
	0 golfCourse.configTemplate

	0 golfCourse.component.zIndex
		0 (index):9897 Uncaught TypeError: Cannot read property 'getObjects' of undefined
    	at i.FabricIntegration.fabric.Object.getFObjZIndex ((index):9897)
    	at innerUpdateListener
		=> problème avec activeSelection ou fObj.isActive

	0 n challenges
		0 18
			0 segue does not work
		0 100
		(0 1000

	0 performance:
**	0 touchSlot.local_listen
**	0 canvas.local_redraw

	1 importer les config créées par Paul
		« Bonjour, je m’appelle … . Dans ce jeu, tu vas devoir partir d’un nombre de départ et lui appliquer certaines des opérations proposées afin de retrouver le nombre de sortie. Pour ce faire, tu vas devoir faire glisser le nombre de départ sur les opérations que tu souhaites lui appliquer, pour enfin le faire glisser sur le bloc de sortie quand tu auras retrouvé le nombre de sortie demandé. »

			[11,"+ 5","- 2","x 7","/ 2",78]								4
			[19,"+ 1","- 9","x 6","/ 4",30]								3
			[24,"+ 1","- 1","x 7","/ 2",90]								5
			[51,"+ (-1)","- (-1)","x (-7)","/ 4",-91]			3
			[-9,"+ 8","- 5","x (-3)","/ (-2)",46]					5
			[20,"+ 1","- 7","x 9","/ 3",42]								4
			[1,"+ 2","- 5","x 7","/ 2",-7]								4
			[20,"+ 4","- 6","x 6","/ 4",21]								3
			[64,"+ 8","- 2","x 5","/ 2",85]								5

10 février 2021:
bordel ça passe vite, ça défile

	0 segues
		1 logger.log
		0 clean errors
			1 Uncaught TypeError: Cannot read property 'isEquation' of undefined
			  (0 ? touchSlots touching one another ?
				=> icObj.isTouchable = false; 			by default
			0 fabric.Object.prototype.getFObjZIndex = function() {
			  	if(!this.canvas) {		<----			??? why is this happening

	0 step
		0 listen to touchEvents
			(0 eventEmitter
			(0 icObserver
			0 icRxSubject
				0 engine: ReplaySubject(1)
			0 icRxSubscription
				0 engine
			0 icHook : les deux frères Will et Did

**	0 Attempt:
			0 Evolution
				0 gm.addInteraction_touch
			0 Manoeuvre

			1 touchSlotEngine.awoken.touch undefined
				=> const touchSlotEngine = gmOperator__rep_free.engine; -> const touchSlotEngine = touchSlot__rep_free.engine;

		0 golfStep.possess(golfCourse)
			0 par
			0 restart button

	0 icObj.namespace

	0 survival mode

**0 icLinks: for example between icRxSubject and icRxSubscription

	0 fix xylophone

11 février 2021:
	1 par
*	0 GameStep:
		0 begin
		0 end

12 février 2021:  blocage gigantesque
	0 cheating:
		0 when using operator in other golfCourse
			0 Uncaught TypeError: Cannot read property 'manoeuvre' of undefined
		0 golfCourse tampering: same principle but operators are exchanged so that, at first glance, there is no cheat

	1 résoudre le problème du zoom spawn
		=> standardRedraw(fObj)

	0 snap curse

	0 endless:practice
		1 createGolfCourse
		1 random mathNode config
		1 recycle golfCourse
			1 initial
			1 target
			1 operator
		1 segue
		1 generateNextStep()

		0 everything breaks
			=> 1 step.end(): remove all listeners / clean
			0 ball.zIndex should be reset
			0 ball value should be set by step.start()

		0 inverse operators
		0 nb_operators

	0 endless
		0 recycle golfCourse VS create new golfCourse
		0 if time>0 segue(step_next)
		0 if time<0 segue(step_end)


	0 GameStep

13 février 2021:
	1 operator(operatorFunc)
		1 GMItem
	1 gmOperatorForGMItem_operator(gmItem_operator)
	1 [--9] -> [- (-9)]
		=> if(node_b.value < 0) { node_b = new math.ParenthesisNode(node_b); }

https://en.wikipedia.org/wiki/Blackboard_bold

**0 easy composite rewrite:
 			composite.parts["x"] = y;

	0 fix bugs:
		0 gm spawn value
			0 bornAgain
				0 really die (remove icObj)
				0 engine
		0 gm spawn zIndex

	0 [expression] --> [x]
	0 [x] 				 --> [expression]

>>0 bouton [impossible]

14 février 2021:
	0 fix bugs
		0 icObj.delete_p
		  infiniteCanvas.onIcObjUpdate(this.r_official_update_handler2);
			this.r_official_update_handler2 = function(rep_official_incoming, outerUpdatesDict) {
			0 killObj()
			1	im_dying_now --> im_dead_now
			0 manageDeadObject()
				1	clean

**0 bornAgain: not that easy to die
		bornAgain.im_dying_now = {
			set(newValue) {

			}
			get {

			}
	  }

(https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics

*[
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions

const obj = {
  get property() {},
  set property(value) {},
  property( parameters… ) {},
  *generator( parameters… ) {},
  async property( parameters… ) {},
  async* generator( parameters… ) {},

  //  with computed keys
  get [property]() {},
  set [property](value) {},
  [property]( parameters… ) {},
  *[generator]( parameters… ) {},
  async [property]( parameters… ) {},
  async* [generator]( parameters… ) {},
};


var bValue = 38;
Object.defineProperty(o, 'b', {
  // Using shorthand method names (ES2015 feature).
  // This is equivalent to:
  // get: function() { return bValue; },
  // set: function(newValue) { bValue = newValue; },
  get() { return bValue; },
  set(newValue) { bValue = newValue; },
  enumerable: true,
  configurable: true
});




// Using a named property
const obj2 = {
  g: function* () {
    let index = 0
    while (true) {
      yield index++
    }
  }
};

// The same object using shorthand syntax
const obj2 = {
  * g() {
    let index = 0
    while (true) {
      yield index++
    }
  }
};

const it = obj2.g()
console.log(it.next().value)  // 0
console.log(it.next().value)  // 1

]*

	 0X longer stackTrace
** 	 >chrome.exe --js-flags='--stack-trace-limit 20'

15 février 2021:
	0 (index):4677 Uncaught TypeError: Cannot read property 'id' of undefined
		at InfiniteCanvas.removeRepresented ((index):4677)
		at death_handler ((index):1636)
		=> 1. addInteraction_hold ==> onRelease(die)
		 	 2. bornAgain ==> will(die) => create bornAgain version : addInteraction_hold ==> onRelease(die)
			 3. die =>
			 ???

	0 removeRepresented
		1 remove curses

	0 fabriquer quelque chose de 'satisfaisant'
		0 button_impossible
		0 game.buttonPressed() --> step.request_impossible()
			0 step.start() ==> step.game.onButtonPressed() / step.end() ==> step.game.offButtonPressed()
			0 step.manageRequest() ==>
		0 infiniteCanvas.moveToPov()

		0 fabriquer des challenges avec x
			1 x expr
				1 Uncaught Error: Undefined symbol x
			    at math.js:40
			    at math.js:40
			    at Array.<anonymous> (math.js:40)
			    at math.js:40
			    at Object.evaluate (math.js:40)
			    at r.evaluate (math.js:40)
			    at canTouchFunc_valueWise ((index):3873)
					=> algebrite.js
			0 expr x
			0 eq{expr} eq{x=...}

		1 Atelier_X_X

16 février 2021:
	1 nothing happens when icMathNode meets touchSlot
		=> icMathNode.isTouchable = true

**1 algebrite.js
		http://algebrite.org/docs/latest-stable/reference.html
		// standard javascript via API
		Algebrite.run('y + x + y == 2y + x + 0');

	1 any operation is ok
		=> outBool = algebrite_result; 	->	 outBool = (algebrite_result == true);

	1 make it _readable_ ({size, fontSize})
		un problème de taille
		1 svgEl.getAttribute("width")  1.131ex
			svgEl.getAttribute("height") 1.507ex
			https://oreillymedia.github.io/Using_SVG/guide/units.html
		0 right align

>>0 show touchable zone
>>0 respawn x please

	0 Uncaught ParseError
		at math-expressions.bro…ied.bundle.js:80023
		location: 13
*		message: "Unrecognized latex command \mathrm"
		name: "ParseError"
		stack: "Error↵    at new ParseError (http://localhost:3000/lib/math-

	0 x expr:
			level 1: operand order is left to right
			level 2: random operand order

17 février 2021:
	1 golfCourse.ball -> golfCourse.tee
	1 step.ball
	1 [x] respawn
	 	|-> symbolNode.value == null, symbolNode.name != null
			=> use mathNode_in instead of value_in

	1 gmBox.contactArea
	1 gmBox.die: step.createNewBall
		1 greenMouseBox__rep_free.onHold does not trigger
			|-> composite fObj is at the back
				=> bring composite handle to the front
			=>
				0 indirect hold
				1 solution déguelasse avec un die() rajouté

	1 boxTouchSlot
	1 composite.im_dying_now
	1 put targetTouchSlot.facade on top of targetTouchSlot.touchSlot
		=> attention à ne pas oublier ".isMobile = true; 	move; .isMobile = false;"

	0 seriousInstance
		0 course.ball --> step.ball

	1 remove HUD

	0 placeholder in operator tex
		https://tex.stackexchange.com/questions/47060/placeholder-for-variable-as-in-fx

19 février 2021:
	Bon on va arrêter les bêtises:
		0 créer des librairies:
			0 ic
			0 jeux

	0 bug: snapSlot only snaps once

21 février 2021: la paralysie de la brume flemmée (ambiance peignoir, monde à l'arrêt, monde à la raie)
**0 ustensil: operator can be dragged to touch other objects and gets back to its original place when released
	0 tex: fBox

https://mathjs.org/docs/reference/functions/xgcd.html
	0 tex fonts
		https://tex.stackexchange.com/questions/226/installing-ttf-fonts-in-latex

	0 fill:
		http://paperjs.org/

23 février 2021:
	1 curseTrigger
		(0 drum
				DATED•INFORMAL
				give (someone) reliable information or a warning.
				"I'm drumming you, if they come I'm going"
		1 impulse/expulse

	1 Curse.constructor not triggered:
			|-> class Curse {
						construct(curseTrigger) {
					=> construct -> constructor

*[
((https://www.codeheroes.fr/2017/11/08/js-classes-abstraites-et-interfaces/
https://stackoverflow.com/questions/3710275/does-javascript-have-the-interface-type-such-as-javas-interface

Object.defineProperty(Object.prototype, 'can', {
    enumerable: false,
    value: function(method) {
        return (typeof this[method] === 'function');
    }
}

*]

	1 show countdown
		1 tick on key press
			1 Keyboard_Rx.rx_keyUp
		0
			if(stepIndex == 10) {             //SHU123
				curseTrigger.curse.enact();
			}

		1 animation.moveToNextKeyFrame()
		0 tick on clock signal

	0 compositeConfig.sideStick = "topright";

	1 curse.curseTrigger.engine.getCounter()
		1 curse.rx_countDownCounter()
		1 initialValue

**0 curse.reset()		<--- c'est une difficulté majeure, qui doit être éclaircie.


	0 install it on a challenge

24 février 2021:
	1 still shute summary
	1 expr_to_x
		1 Operator
		1 Operator.inverse()
		0 Operation
		0 Operation.inverse
		1 random_operatorNodeFactoryFuncWrapper_binary

		1 touchSlot does not trigger though expressions are equal
			1 add [stl] operator logic

			1 Uncaught TypeError: Cannot read property 'type' of undefined
		    at isSameTerminalType ((index):1312)
		    at isSameTerminal ((index):1315)
		    at (index):1346
		    at Array.find (<anonymous>)
		    at standardOperation_simplify ((index):1346)
		    at standardOperation ((index):697)
			=> parenthesisMathNode.content

	0 make it fluid
		0? throttle touchSlot callbacks
		1 système de détection de rejet: si j'ai rejeté x et que x.changed == false alors pas besoin de le retester à nouveau

25 février 2021:
	0 simplify: x 1 	/ 1

	0 make it fluid:
		0 [Violation] 'setTimeout' handler took <N>ms		(index):9342
				receiver.didUpdateFromOuterTimeout = setTimeout(() => {
									// console.log("didUpdateTimeout", "triggering");
									receiver.didUpdateFromOuter(outerUpdates);
									receiver.didUpdateFromOuterTimeout = null;
									outerUpdates = {};
								}, timeout_delayInMs);
			=> fat expression takes time to handle

		0 test:
			0 nb_touchSlots: n
			0 depth: n

		0 check can touch: what has changed ?
		0 TouchSuperintendent
				touch requires x and y.
			 	If x was invalid and only y changed, do not check further.
				0 deactivate touchSlot after unfruitful check
				0 activate touchSlot   after interesting change

		0 move:	 checkCanTouch
		0 touch: didUpdateFromOuter

	0 Uncaught TypeError: Cannot read property 'r_free' of undefined
    at Object.CompositeEngine.managePartUpdate ((index):10468)
    at part__listener ((index):10395)
    at (index):9161
    at Array.forEach (<anonymous>)
    at Object.broadcaster.didUpdateFromInner ((index):9160)
    at Object.set ((index):9230)
    at Object.set ((index):9413)
    at i.<anonymous> ((index):13962)
    at i.fire (fabric.min.js:1)
    at i.O [as _fire] (fabric.min.js:1)

*[
https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals

requestAnimationFrame()
	The modern version of setInterval().
	Executes a specified block of code before the browser next repaints the display,
		allowing an animation to be run at a suitable framerate regardless of the environment it is being run in.


rAF = requestAnimationFrame(draw);
cancelAnimationFrame(rAF);

https://www.youtube.com/watch?v=8aGhZQkoFbQ
https://dmitripavlutin.com/javascript-promises-settimeout/

Job queue vs task queue:

call stack:
	LIFO (Last In, First Out) structure that stores the execution context created during the code execution. In simple words, the call stack executes the functions.
**=> LIFO allows cancel mechanisms

task queue: (==> async operations)
	FIFO (First In, First Out) structure that holds the callbacks of async operations that are ready to be executed.
	For example, the callback of a timed out setTimeout() — ready to be executed — is enqueued in the task queue.

job queue: (==> promises)
	FIFO (First In, First Out) structure that holds the callbacks of promises that are ready to be executed.
	For example, the resolve or reject callbacks of a fulfilled promise are enqueued in the job queue.

event loop:
	permanently monitors whether the call stack is empty.
	If the call stack is empty, the event loop looks into the job queue or task queue, and dequeues any callback ready to be executed into the call stack.

]*

*	0 qu'est-ce que tu veux faire maintenant ?
		0 [stl] in expr --> x
			(0 if(icObj.type == "composite" && icObj.parts.contactArea != null)

			0 Uncaught TypeError: fObj.refreshTex_p is not a function
		    at innerUpdateListener ((index):11825)
		    at (index):9176
		    at Array.forEach (<anonymous>)
		    at Object.broadcaster.didUpdateFromInner ((index):9175)
		    at Object.set ((index):9245)
		    at Object.set ((index):9440)
		    at Function.assign (<anonymous>)
		    at Object.TouchSlotEngine.touch ((index):9737)

26 février 2021:
	0 greenMouse: decimals
			[1] * [+ 0,1] = [1,1]
		0 units must stay at same place
		0 different color for each number place
			https://tex.stackexchange.com/questions/155968/make-enumerate-numbering-different-colours
			https://tex.stackexchange.com/questions/285968/color-coding-a-text-string-with-alternating-colors
			http://adereth.github.io/blog/2013/11/29/colorful-equations/

	0 remove [/ 0]

27 février 2021:
	1 icObj.type = "richMathNode"
	1	class RichMathNode {}

	1 load mathjax color extension
		(0 mathjax.tex-svg.js:1 GET http://localhost:3000/lib/input/tex/extensions/color.js net::ERR_ABORTED 404 (Not Found)
			0 npm install mathjax@3
			0 bundleify mathjax with all extensions included
				(http://docs.mathjax.org/en/latest/options/startup/loader.html#loader-options
				(https://github.com/mathjax/MathJax-demos-node/tree/master/preload#preloaded-component-examples
	**		http://docs.mathjax.org/en/latest/web/webpack.html
				1 >npm install mathjax-full

				0 SyntaxError: Cannot use import statement outside a module
				http://docs.mathjax.org/en/latest/input/tex/extensions/color.html

		1 To load the color extension explicitly,
			add '[tex]/color' to the load array of the loader block of your MathJax configuration,
			add 'color' to the packages array of the tex block.
**	=> wait for mathjax to be fully loaded

(https://flaviocopes.com/is-not-a-function/

	1 positionalNumber
		1 this.rich.colorMode = "xylophone"
		1 this.rich.colorMode = "evenodd"

	0 add two rich math nodes
	0 any operation
	0 color gradient (when adding 2 colored numbers)
		https://tex.stackexchange.com/questions/45744/how-to-put-color-gradient-to-desired-text-only/46034
	0 richMathNode.curse
			0 if(mathNode.value % 2 == 0) {} else {}
			0 setInterval(casinoRainbowCycle)
				0 tout recalculer pour juste un changement de couleur, c'est un peu dommage


28 février 2021:
https://www2.karlin.mff.cuni.cz/~kulich/links.html

**0 object wedding
*	0 découpler les objets du processus de rencontre

01 Mars 2021:
	0 placeholder poc
**	1 \\enspace
			https://texblog.org/2014/04/09/whitespace-in-math-mode/
		0 box

**1 back to simple touch
	=> icObj.isTouchable = true;

	0 icObj.type = "splitter__top_layer"
	0 icObj.type = "splitter__full"

	0 const mutationObj = transformationFunc(icObj__touched);
		transformedObj = {
			transformed_type: "new"|"mutated",
			payload: obj,
		};
		switch(transformedObj.type) {
			case "new":
				//remove current object
				//add new object
				break;
			case "mutated":
				//mutate current obj
				break;
		}

	0 letter splitter
	0 [nextType()]

02 Mars 2021:
	1 class TransformationOutput

	0 transformation output is new object
		1 Uncaught TypeError: icObj__rep_free.addInteraction_hold is not a function
	    at InfiniteCanvas.createRepresentedIcObject ((index):2290)
	    at (index):2332
	    at Array.forEach (<anonymous>)
	    at InfiniteCanvas.createRepresentedIcObject ((index):2307)
	    at InfiniteCanvas.addIcObject ((index):6147)
	    at Object.TouchSlotEngine.touch ((index):10174)
			=> const parts = arr_mathNode; -> const parts = arr_icMathNode;

		0 remove touch callbacks from icObj__touched
		1 prevent new object to be touched
		0 .touched = false; when leaving touchslot

	0 seamless mouse drag when active object changes
		0 Supervessel	(==fabric cart, fingercart)
			0 invisible composite
			0 onSelection:
				initializeSelectionMgmt() {}
				0 getSupervessel()
				0 supercontainer.parts = [<x>]
				0 ? parts are touchable, supercontainer is not ?
			|-> back to same "replacement" problem
			0 onDeselection:
				0 supercontainer.parts = []
		OR
		0 doubler chaque fObj d'un vesselFObj
		OR
		0 supervessel follows mouse move and thus, is always on top when user clicks
		OR
		0 fabricCanvas.will["manageClick"].on()

03 Mars 2021:
	1 Fabric active selection
((
		fabricIntegration.fabricCanvas._setupCurrentTransform(o.e, o.target);

		0 fabricCanvas.fire
			event:dragenter
			event:dragleave

		0 element._onDrag
		0? element.dirty = true;
))

https://stackoverflow.com/questions/24077496/fabricjs-select-object-programatically-for-immediate-movement-drag
https://stackoverflow.com/questions/35359313/how-to-select-and-drag-objects-in-fabric-js
	0 simulate click
		0 supercouche de click click
*	https://stackoverflow.com/questions/34981369/fabric-js-move-object-without-holding-mouse-button
**https://exceptionnotfound.net/drawing-with-fabricjs-and-typescript-part-2-straight-lines/
		0 recréer les conditions de départ

			0 store drag event
			0 fabricIntegration.fabricCanvas._setupCurrentTransform(dragEvent, fObj__supervessel);

	https://stackoverflow.com/questions/57266217/fabricjs-mousedown-and-drag-are-creating-conflicts-with-each-other

	/**
  651     * @private
  652     * @param {Event} e Event object
  653     * @param {fabric.Object} target
  654     */
  655    _setupCurrentTransform: function (e, target, alreadySelected) {
	**/


*[
NICE FABRIC STUFF:
	OVERLAY IMAGE
**setOverlayImage(image, callback, optionsopt) → {fabric.Canvas}

	SUBSCRIPT AND SUPERSCRIPT
new fabric.Canvas(stage)
.add(
	new fabric.IText(
		'superscript\nsubscript\nfoo\nbar',
		{
			fontFamily: 'Verdana',
			fontSize: 25,
			top: -5,
			lineHeight: 1.15
		}
	)
	.setSelectionStyles('superscript', 5, 11)
	.setSubscript(0, 7)
	.setSuperscript(0, 9)

	.setSelectionStyles('subscript', 15, 21)
	.setSuperscript(1, 5)
	.setSubscript(1, 7)

	.setSelectionStyles('superscript', 23, 28)

	TOUCH EVENTS
	http://fabricjs.com/touch-events
]*

04 Mars 2021:
**	http://fabricjs.com/events
**		attention les évènements les plus récents sont mis par dessus

		object:modified {
		"e":{"isTrusted":true},
		"target": {
			"fillRule": "nonzero",
			"paintFirst": "fill",
			"globalCompositeOperation": "source-over",
		},
		"transform": {
			"target": {},
			"action": "drag",
			"original": {},
			"reset": false,
			"actionPerformed": true,
		},
		"action": "drag",
		}

	1 events order:
**	mouse:down:before
			mousedown:before
		selection:created
		before:transform
		mouse:down
			mousedown
		after:render
		object:moving
			moving
		after:render
		mouse:up:before
			mouseup:before
		object:moved
			moved
		object:modified
		mouse:up
			mouseup
		after:render

	1 mouse:down:before {
			canvas._setupCurrentTransform(,)
		}

	http://fabricjs.com/v2-breaking-changes-2

*[
	fabricCanvas.on('mouse:down:before', (e) => {
		logger.log("mouse:down:before", e);

		const fObj__supervessel = fabricIntegration.getFObj__supervessel();

		fabricCanvas._setupCurrentTransform(e, fObj__supervessel);

		fabricCanvas.setActiveObject(fObj__supervessel);
	});
*]

	0 put object in supervessel
		1 composite: .parts mutation
			1 composite.addPart()
				1 parts should move when handle moves
				 	=> activate listener: 	part__rep_free.onInnerUpdate(part__listener);
				1 parts should move properly
					=> don't add listener when already existing
				0 write function
			1 composite.removePart()

	0 manage touch with supervessel

05 Mars 2021:
	1 composite.addPart()
	1 composite.removePart()

	1 supervessel: addPart()
	1 supervessel: select something else
	0 manage touch with supervessel
		1 the old way: business as usual, but with supervessel inclusion
			1 can only transform once:
				|-> icObj.type: "mutated"
					=> this happens when touching morpher with wrong input type
						1 const mutationObj = transformationOutput.value;
		0 the new way 1: event capturing: only supervessel is touched
		(0 the new way 2: event bubbling: touch bubbles up to supervessel

	0 fix bugs:
		0 golf practice: touch triggers twice
		0 create icComposite: ignore supervessel
		0 copy/paste
		0 doubleclick on icText

	0 try with invisible supervessel

	1 split active object: icText

	(0 icObj typeOverlay
		https://www.htmlcsscolor.com/hex/808080

06 Mars 2021:
	0 supervessel: multiple objects selection
			(index):12362 Uncaught TypeError: Cannot read property 'zIndex' of undefined
			at i.<anonymous> ((index):12362)
			at i.fire (fabric.min.js:1)
			at i._handleEvent (fabric.min.js:1)
			at i.__onMouseDown (fabric.min.js:1)
			at i._onMouseDown (fabric.min.js:1)

	0 l'inverse de split: join (merge, marry, unite)

	1 split expression
		1 symbolNode__operator
		1 symbolNode "()"
		1 symbolNode "(", symbolNode ")"

	0 join expression
		1 Joiner
		0 random_join_workz
**	0 remplir le graphe de bas en haut, de gauche à droite

11 Mars 2021:
	1 joinworkz: shuffle
	1 joinWorkz: try-catch ugly brute :)
	0 joinWorkz: manage parentheses
		1 "specializedNode"

12 Mars 2021:
	1 TypeError: Node expected for parameter "content"
	0 split/join challenge
		0 ver1
			0 split into "operations"
			0 target = join(split(gm))
		0 ver2
			0 split into symbolNodes
			0 reactorCore

	(0 touch does not trigger

	0 pragmatism: revenir sur les équations
		0 Uncaught TypeError: Cannot read property 'contactArea' of undefined
    	at canTouchFunc_geometryWise ((index):5610)

		0 quick toy: exoSkeleton
			0 [[a] [=] [b]][g]
				 [c]		 [c]
			0 comment faire ça à peu près propre ?
				deux possibilités:
					exoSkeleton(exoSkeleton(member1), exoSkeleton(member2))
						avec exoSkeleton(member1) sans grab
						avec exoSkeleton(member1) sans grab
					avec exoSkeleton(member1) sans grab

		0 icExoSkeleton
			0 grab
				0
			0 contact
				0
			0 valueArea
			0 decorationArea
			0 internalsObj
		0 OctoMouse = icExoSkeleton(mouse)
			0

    0 glassMouse

	0 supervessel: edit cargo:
		0 double click
		0 ui-touch: long press

13 Mars 2021:
	0 revenir à quelquechose de simple
		1 composite(mathNode,mathNode,mathNode) * [+ 1]
			1 spawn constant mathNode
			1 [40] * [+ 1] = [41]
				1 mutationObj = transformationOutput
** right-align will be the hardest part

14 Mars 2021:
	0 serialization: a-t-elle resisté au passage du temps ?

17 Mars 2021:
	 0 test tablette
	 		0 c'est super lent (firefox)

	0 mes élèves d'abord:
		0 fractions
			0 Uncaught TypeError: Cannot read property 'contactArea' of undefined
				at canTouchFunc_geometryWise ((index):5722)

			=> 0X ne pas utiliser les gmBox
				|-> gmBox est (déjà) trop enraciné

			=> c'est tombé en marche...

			https://mathjs.org/docs/datatypes/fractions.html

			0 frac_to_one
				0 simplification: multiply/divide "bough" (tree subgraph with same priority)
				0 operator walls (à l'instar des murs de sons)
			0 one_to_frac

			1 frac_operators
				1 decomposition_product_primes
					1 "joinreduce"

			0 frac_to_frac
			0 bouton impossible

		0 bug: [1/3] *[x 1] = [3]

a fraction doesn't care about how it's been produced

	0 geom mouse

18 Mars 2021:
	0 simplify top priority shell
			neither truly number nor truly operator
		1 show 3-factor multiply operatorNode
		1 [inverse] operator
	 	1 singleOperatorize (~flatten)
			1	[/ 3] -> [x (1/3)]
			(0 [- 3] -> [+ (-3)]

			0 add
		0 Uncaught TypeError: Cannot read property 'reduce' of undefined
    	at Function.simplify_top_priorityShell ((index):1768)

		0 math.InverseNode extends math.OperatorNode {}

		const node2 = new math.ObjectNode({a: a, b: b, c: c})

20 Mars 2021:
	1 Uncaught RangeError: Invalid array length (index):1811
		obj_factors {4: 0, 7: 1, undefined: -1}
		valueStr, multiplicity 7 1
		valueStr, multiplicity undefined -1

		=> 0 check if value is "terminal node"
			 (0 obj[node.toString()] = node;
			 OR
			 1 obj.portion_valued/obj.portion_indexed

	1 one_to_frac
	0 operator wall
		0 placeholder
		0 fill placeholders

	0 edu: fraction simplification
		0 [decomposition:prpr]
		0 [simplify]

	0 conductiveArea

	0 negative fractions

22 Mars 2021:
	0 centered & dezoomed pov when resetting challenge

24 Mars 2021:
	0 pour la séance de jeu sur les fractions
		0 target simplifier
		0 impossible button
		0 flexible operator or other addition vehicle
*		0 golf courses
			0 frac1
			0 frac2 	([x (-1)])
			0 frac3

25 Mars 2021:
		1 product of primes
		0 mélange
			0 target is decomposed
			0
			0

		0 [x (5/5)] [x (2/2)]

** prevent "exopeek" version from touching target slot

	1 frac_to_frac__decomp_simple
		(0 generate prime numbers
			https://gist.github.com/bendo01/1358241/3ec9648612ca22c6129f0a80b1a4af9885f075ba
		(0 get random prime number
		1 arr[2,3,5,7]

	0 frac_to_frac__letters

	0 prime climb colors:
		1		D0D2D3
		2		E5A130
		3		9BC566
		5 	87CAEE
		7 	887CB6
		11+	D3604F

		0 	000000

26 Mars 2021:
	0 impossible button
		0 show validation color

	0 conductive area operator
		if operands == []
		else

	  when sitting in conductive area
		  add to conductive area (composite)
*				1 icPlatform
					1 dropTouchSlot
						1 transformationOutput:sadness
					1 icPlatform: dropTouchSlot.touch_transformationFunc = icPlatform.engine.awoken.manageEnter()
						(0 engined.engineA
*						1 transformationOutput.type = "displaced"
						1 add to terrace
					1 icPlatform:
						1 dropTouchSlot.untouch_transformationFunc = icPlatform.engine.awoken.manageLeave()

					(use supervessel code

		0 bug: geometry rect intersection does not seem perfect: slot.bottomRight vs piece.topLeft

		1 Uncaught Error: unsupported transformationOutput type: mathNode
    	at Object.TouchSlotEngine.touch ((index):11974)
			=> horror code

		1 {icText,icRect,...} do not interact with platform
			1X ? canTouchFunc
			|-> icObj.isTouchable
					if(!incomingObj.isTouchable) {
						//ignore: incomingObj is intangible
					} else {
						this.r_official_update_handler(touchSlot, incomingObj, outerUpdatesDict);
					}
				=> (0 special code for dropTouchSlot: if(parent != null and parent is platform) {} else {}
							|-> UGLY
					  OR
				    0 special code for platform
							there is something to do to allow platform to transport intangible objects
																		while not allowing 'standard' dropTouchSlot to touch intangible objects ...
							Platform should be able to decorate dropTouchSlot engine

			1 update transformationFunc
				1 use terrace.parts

		when lifted from conductive area
			update transformationFunc

	0 gm conductive area operator (SafetyZone)
	0 conditional conductiveness: if fractionA.denom == fractionB.denom

27 Mars 2021:
**0 platform on a platform ?
	1 conductiveOperator
		1 Uncaught TypeError: part__rep_free.onInnerUpdate is not a function
    	at (index):13483
***	|-> 0 can't do "fresh composite2(fresh composite1)" for the moment
		 => workaround: ic.addIcObject(fresh composite1) before creating fresh composite2
		1 Uncaught ReferenceError: add is not defined
    	at (index):4883
			=> add -> "add"

*	0 nary operator: touchSlot must be smaller than platform
*	0 try dropping operationOutput in conductiveOperator

	1 kill composed_operands on touch
	1 simplify fractions

	0 gm conductive area operator (SafetyZone)
	1 conditional conductiveness: if fractionA.denom == fractionB.denom
		1 isTransformationAllowed
			1 transformationOutput.type == "old"
		(0 conditional consumption


	0 "denominator operators": [x (5/5)]
		1 if number is not fraction {number = number / 1;}
			num = num * c;
			den = den * c;
		0 simplify_num_den

		1 pretty facade: tex
			1 pretty size

28 Mars 2021:
	1 tex pretty spawn

	0 [/ (5/5)]
		1 create
		0 edu spawn
			0 upgrade [x 5] to [x 5 / x 5]
		0 edu edit (~quill)

	0 refresh canvas after challenge setup (glitches)

	0 create golf game with fractions
		0 redémarrer le vieux golf
			1 remettre la balle
				1 reprendre la technologie de practice
					step::addNewBall()
						const mathNode__initial = step.challengeGMItemConfig.initial.content;
			1 ball is not touched
				|-> ball is gmBox

				if(icObj.cType == "gm_box") {
					// logger.log("gm_box");

					const facade = icObj.parts.facade;
					outIcObj.parts.facade.mathNode = mathNodeTransformationFunc(facade.mathNode);
				}

			1 from operatorString to GMItem.operator
			0 completion
|->|->	0 ???

	0 endless: frac add
		1 ball1, ball2
		0 conductive operator: gmSafetyZone
			0 gmSafetyZone
		0 conductive operator: keep common denominator in output
		0 fractionOne_operator

		0 ? / denominator

	0 panaché de mult: normaux  et fractions
	0 panaché de mult: relatifs et fractions relatives
	0 panaché de tout

30 Mars 2021:
	1 eduDemo: debug_fractionOne_operator__showcase

31 Mars 2021:
	1 eduDemo: simplification
		0 slash number
			https://www.physicsforums.com/threads/latex-how-to-do-dirac-slash-notation.55561/
			(http://mathjax4svg.sourceforge.net/

			https://github.com/mathjax/MathJax/issues/2107
			https://tex.stackexchange.com/questions/26523/whats-the-most-elegant-way-to-obtain-dirac-operators-slash-notation/26525#26525

			https://mirror.ibcp.fr/pub/CTAN/macros/latex/contrib/carlisle/slashed.sty

			1 \newcommand
				http://docs.mathjax.org/en/latest/input/tex/extensions/newcommand.html

			0X use \newcommand to get \fsl command working
				\newcommand{\fsl}[1]{\ensuremath{\mathrlap{\!\not{\phantom{#1}}}#1}}% \fsl{<symbol>}
				OR
				\renewcommand{\fsl}[1]{{\ooalign{\(#1\)\cr\hidewidth\(/\)\hidewidth\cr}}}
				OR
				\newcommand{\fsl}[1]{{\centernot{#1}}}
				OR
				\newcommand{\fsl}{{\mathfrak sl}}

			=> \not{a} pour l'instant...
*		0 colored slash
			https://tex.stackexchange.com/questions/57070/how-to-color-over-underline-or-other-ways-to-highlight-substituted-expressions
			=> You can save the current colour using \colorlet from the xcolor package.
			\newcommand\blueoline[1]{\colorlet{temp}{.}\color{blue}\overline{\color{temp}#1}\color{temp}}
			|-> \colorlet not available

		0 operator: [mark:slash] (type:"mark__slash_simplifiable")
		0 mark__slash__simplifiable
			0 mathNode.slashed
				https://www.salsify.com/blog/engineering/super-methods-in-javascript
				1 MySummerNode
			0 Analyzer.analyze_simplifiable(mathNode)
				//SHU741852
				0 rewrite to "nary_product/nary_product"
				0 get pairs
			0 create mathNode__new

		(0 inverse: unmark__slash__simplifiable (ou mark__unslash__simplifiable)

02 Avril 2021:
*	0 iC to create answer sheets
		0 paste screen capture
		0 copy/paste selected items
 		0 bug: copy is sometimes broken

*	1 MNReictangle:
			1 listen to .mathNode

	0 icBloom
		0 FacetEngine {}

	0 mathNodeBloom
		0 mnrei_rectangle

	0 clean transformationOutput mess
		0 golf operators func/func_decorated must return transformationOutput

03 Avril 2021:
	0 icBloom
		mais c'est trop dur
		il faut pousser parce que ça a un bon potentiel de séduction
		1 makeshiftBloom
		1 fractions makeshiftBloom

	0 challenge: equation
	 	0 start small

	(0 OCR:
		function recognizeImage(image) {
			Tesseract.recognize(image)
				.progress(message => document.getElementById('result').innerHTML = "<h3>Recognizing..</h3>")
				.then(function (result) {
					document.getElementById('result').innerHTML = result.html;
					document.getElementById('confidence').innerHTML = `Recognition confidence: ${result.confidence}`;
				})
				.catch(err => console.error(err))
		}

		Tesseract
		Ocrad https://antimatter15.com/ocrad.js/demo.html
		Mathpix: https://mathpix.com/ocr
		SESHAT: https://github.com/falvaro/seshat http://cat.prhlt.upv.es/mer/

	0 z-scroll controlled icMathNode
**	0 ZscrollEngine
			0 zScrollFunc
	0 z-scroll controlled mathBloom

04 Avril 2021:
	0 TTS/STT: https://github.com/arjunmahishi/Speech-with-JavaScript

05 Avril 2021:
	0 videos with OBS: CTRL + F6
		0 split top layer
		0 split full
		0 serialization
		0 maths
			0 mathquill
			0 eduDemo: simplification
			0

	0 clean transformationOutput mess
		1 GMOperatorMama
		0 challengeConfig

	0 equation
		0 challenge 1 : 3x + 18 = 54
		0 challenge 2:  3x + 18 = 5x + 60
		0 challenge 3: 5(x+1) - 12 = 13
			0 develop and reduce
			0 continue using the standard algorithm

		0 challenge: touch the right answer: resets challenge on wrong answer
			0 challenge 4 : can only get to  5x = 25 	 using operators
			0 challenge 5 : no more operators, you have to do the maths in your head
				0 you have to follow the right path


*	0 math.parse("x==3") creates an OperatorNode with operator ==

	


.
