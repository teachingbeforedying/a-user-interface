04 décembre : initial morning program based on https://github.com/TomHumphries/InfiniteCanvasWhiteboard

0 create zoom loops

*	0 there is so much space, that one can hide messages in the vast infinity

05 décembre 2020:
0 échelle
  0 double flèche

0 parcours
	0 arbre
	0 notation 0-20 : nb_questions = n(n-1)/2 = 190

06 décembre 2020:

0 Arrow:
  0 "horizontal arrow" : 10 fois plus loin
  0 "vertical arrow"   : 10 fois plus grand
  0 "oblique arrow"    : itinéraire (ou mesure)

0 "les deux amoureux" (each is on a planet)
0 itinéraire:
    0 select pointA, pointB
    0 draw arrow
      0 orientation automatique de la flèche représentant l'ordre de grandeur courant en fonction de la flèche "itinéraire"
    0 find order of magnitude and "get there" (show the arrow with the "right size" wrt screen)

0 from question A to question B:
	0 create line from A to B and follow it in the direction of the arrow till you meet the next exercise
	0 warp

0 from question A,B and C to question D:
	0 triangulate

0 PAUL's vision:
  deux calculs
    L'abscisse est la réponse à la question 1
    L'ordonnée est la réponse à la question 2
    Abscisse et ordonnée par rapport au _repère courant_

    avec un repérage "A1":
    on peut utiliser les préfixes comme indicateur de colonne

  tableau d'un peintre: fractale

11 décembre 2020:

**0 import pdf

0 workflow :
		0 import mind map pdf
		0	enrich the map by adding
				0 neurohandle images : a goat, a lion,
					0 associate biome to zoomLevel
				0	content inside those neurohandles : exercices, problems, figures...

* 0 hardcore : zoom trap : when zooming out, user does not get to previous scene, but sees zoomed out current scene

14 Décembre 2020:
**Z-PUZZLE: bring object back to its corresponding slot (object can be extended, shrinked)
		0 click and scroll to change size
			0 long click| long press to lock obj selection

15 Décembre 2020:

**Z-Puzzle avec des carrés : inscrire un nombre dans le carré, avec une double flèche pour indiquer la longueur du côté, _à l'intérieur_

0 Z-Puzzle Logo : write Z-Puzzle with squares of different sizes

0 WOW effects :
  0 puzzle pieces are on a blue background : blue background is only a small (blue) part of a big piece of the puzzle
  0 puzzle pieces are on a table : the table is a part of a big piece of the puzzle

16 Décembre 2020:
	0 puzzle creation :
		0 image split
		0 create puzzle piece using cutting path

	0 commencer par un petit Z-puzzle à 4 pièces :
			initialisation : toutes les pièces sont carrés, de la même taille, de couleur différentes avec un numéro différent (1,2,3 ou 4)
			le slot pour le numéro 1 est très grand, on voit dans la vue initiale un petit morceau de bordure de 1
			le slot pour le numéro 2 est de taille initiale
			le slot pour le numéro 3 est petit mais on peut y arriver avec un resize classique
			le slot pour le numéro quatre est très petit

17 décembre 2020:

	idées:
	0 movable/unmovable objects : bg objects vs interaction objects
	0 z-index should (/may) decrease when object gets bigger (imagine an image of the universe which was contained in a house window)
	0 group/ungroup when z-scrolling inner element

	0 inno_further:
		0 double object: {front layer, back layer}
				front layer displayed when scale <= x
				back  layer displayed when scale > x
				example: closed window / open window
				=> 0 calendrier de l'avent

			0 living object: front layer may change if something has been done "inside" object (i.e. when scale > x)


	0 edu:

		0 numbers fractal :   [             9              ]
	                        [0][1][2][3][4][5][6][7][8][9]
													etc.
													il y a le zero-level : avec [0,][1,][2,][3,][4,][5,][6,][7,][8,][9,]

		0 10^n rectangles       _____________________________________________________________________________________________________
														[                                  10^n                                                             ]
														-----------------------------------------------------------------------------------------------------

														__________
	                        	[10^(n-1)]
														----------

		0 double layer numbers :
		 		front
										[             ]
										[      9      ]
										[             ]
				back
										[  1   2   3  ]
										[  4   5   6  ]
										[  7   8   9  ]


19 décembre 2020:

*	0 remanent points : center point for rotation is displayed then fades when rotation is done

*	0 complex animations :
		0 X-wing : zoom-in + centered rotate
		0 spiral staircase : zoom-in + non-centered rotate

** 0 animated objects : endless spinning wheel, endless translation
*			0 user could force software to adopt moving object's referential

** 0 temporal active objects :
		  0 calendrier de l'avent : mettre un timer dans le programme pour que les fenêtres (==double object) ne soit "ouvrables"(==pénétrables) que lorsque le jour est passé
      0 devoir maison : le sujet n'est plus accessible après
      0 interro : time frames

    0 edu:
				three sectors : course material plane is divided:
					green sector  : easy : for everyone
					orange sector : moderate : for almost everyone
					black  sector : serious : for strong pupils

					students can rotate the wheel to access to stronger content

    0 un z-puzzle simple:
			des carrés de couleur

    0 z-puzzle with reflection : negative scale

    0 snapping:
			0 move
			0 resize
			0 rotate
			0 what is the right snapping percentage ?

20 décembre 2020:
  edu:
    bien affcher la taille et la position du rectangle d'observation

  zpuzzle:
    0 droite graduée et profil affine (carré de différentes tailles)
      un humain près du 1 (1 mètre)

    0 z-puzzle : telephone
        7  8   9
        4  []  6
        1  2   3

    0 colored squares with dimensions
  			0 format : factor    x     power of ten
    			[---------]
    			[<------->]
    			[   3,8   ]
    			[    x    ]
    			[ 10^(-2) ]
    			[_________]
        0 need _reference_ arrow

    0 more complex: no reference is shown : pupil has to use relative sizes to solve puzzle

** z-scroll, r-scroll, etc. is only about placing the selected object in _a different ("hovering") layer_, and then dropping it in the original layer
    maybe code would be cleaner if it was done this way
*   => hovering layer is the player's backpack (multiple objects could travel along)


* ((double puzzle: recto / verso


*  basic exercice course:
    exercise n:
      - image (funny)
      - statement (less funny ^^)
      - answer text field:
          on right answer : open exercise n+1 door etc.

** OUR WEBSITE : students' have a website consisting of an infinishute
     every student can have its own miniverse in the infinite vastness

* animation: pov path  : from pov1 to pov2 to pov3 to pov4 etc.
    edu: séquence de mémorisation


*[
	Keyboard shortcuts:
			F: Rect          F for fabric
			T: Text
			V: Triangle
			D: Point         "dot"

      Q: Circle        Q looks like O
      W/N: Polyline    W/N is a polyline

      G: Group
      B: Ungroup       "Break group"

      A: zoom out (KeyDown (timeout))     "Away"
      Z: zoom in  (KeyDown (timeout))
      Shift A: zoom out (/10)
      Shift Z: zoom in  (x10)

			R: Rotate (KeyDown (toggle))
			C: Color  (KeyDown (toggle))

      H: Homescale for new objects (KeyUp (toggle))
      Shift H: save homeScale to preset.homeScale

      key: "²", code: "Backquote" move to origin pov
      digit<n> move to pov<n>

      Y: Z-Puzzle slot

      E : Activate (maybe mouse click is more intuitive)

  Keyboard+Mouse:
    rightMouseDown + zoomIn/Out   keeps screenRect centered on object while zoomingIn/Out

ET LES GAUCHERS ALORS ?...
*]

1 keyZ: zoom-in to cursor / zoom-out
  "KeyW" : get aWay
  "KeyE" : "Enter"/"Explore" : zoom-in
  1 keyDownTimeout
  0 keyDownTimeout VS keyDown: complex mgmt to only zoom once when key is "simply" down-up'd (== ? pressed ?)
**		=> problem "vanishes" when timeout delay is 17 ms (== "small enough")

** sometimes it all adds up nicely (==resulting feature): rightMouseDown + zoomIn/Out keeps screenRect centered on object (this is a nice feature which should be preserved)

* antialias "pixel fight" when zoomingIn is like Heisenberg's principle, it's more and more shaking

** edu: le petit poucet de Gulliver : semer des petits cailloux à chaque niveau de zoom pour ne pas se perdre
    => les amener à comprendre la notation décimale
**    on "remonte" un nombre comme par exemple 14758,1654873    (on part du niveau de zoom)
** avoir un affichage spécifique pour les "zéros facultatifs" (que ce soient ceux qui sont à gauche ou à droite de la virgule)
    0 affichage additif (on affiche le nombre sous la forme sigma(ai x 10^i))

    0 representations:
      0 square representation : I don't like this one because it may override what we try to teach regarding areas
      1 rectangle representation : better
**      1 "representation 74" (xylophone representation) (width does not matter, only height matters)
*         0 704 : write "0" when no column is filled
            0 fill remaining space in black and write "0" when no column is filled
*         0 add double arrow (as separator) : double arrow size depends on select number, to show that only height matters
          0 show |10^<n> sector| on top of each xyloblock
*         0 show addition of two number with this representation
            0 two "lines" (is this possible ? (yes, if all towers have same height))
            0 abaccus way
*         0 allow user to type number and draw corresponding representation
            => 0 exercise : type the number corresponding to the displayed representation
                0 easy:           183,01
                0 standard:   140 015,3
                0 hard:     1 000 000,000 028
*         0 allow user to select rectangles and show corresponding number
            => 0 exercise : select rectangles to represent the number 157,005408
                 0 show "current number: ...."
                        "target        : ...."
          0 negative numbers : upside down
            0 show addition of positive and negative number
          0 show sqrt(2)
          0 square product of two xylos
            0 show sqrt(2) * sqrt(2)
          0 xylophone number char representation: small 1, bigger 2, even bigger 3 etc.
*       0 representation "empire state building" : pile up all rectangles
          0 with rectangles
          0 with real-life objects rectangles
          0 add corresponding power of ten square [10^<n>] next to the xyloblock
*       0 representation fallen skyscraper : empire state building goes horizontal
          0 with rectangles
          0 with real-life objects rectangles
        0 animation:
          0 from xylophone to empire state building
          0 from empire state building to fallen skyscraper
**          0 Wow effect: la virgule tournée dont on ne comprend pas au départ la signification, revient dans le bon sens pour former l'écriture décimale du nombre (écriture décimale "pondérée")
        (0 representation "closest square puzzle"
      0 sum of scientific notations (sigma(ai x 10^i))
      0 exponential-carried representation (logarithmic scaleX)
      0 fractal path representation ("5,1 c'est un bonhomme et un petit poisson"): each square has BL = (0 ; 0) and BR = (10^<n> ; 0)
        0 create "trailing part" only when "tower" becomes active (or else number of objects will grow exponentially)
      0 représentation en aire: essayer de montrer un remplissage des xylorects de telle manière que le nombre représenté corresponde à la somme des aires

    0 "vous avez débloqué un nouveau secteur : partie décimale"


  0 colored numbers:
*   0 zero could have transparent color ("container")
*   0 non used level number could have very low opacity (but we could still seem them)
*     0 write "0" when no column is filled

  0 power of ten : patterns
    each power of ten has a characteristic filling pattern (example: hearts, diamonds,  ... , cars, cells, ... )



pour la multiplication de deux nombres :
  représentation en surface d'un nombre : on prend arbitrairement un des deux comme 'multiplicateur' et l'autre comme la surface à multiplier
  attention : multiplier une surface par 2 : simplement prendre deux instances de la surface initiale et les accoler

  0 mécanique de précision : trouver la pièce complémentaire

*** zoom-bound freeDrawing text reading animation

21 décembre 2020:
  une séance préparée pour 1 heure pour 24 élèves VS un programme pour x heures pour 10^n élèves

* un nombre (fini), c'est un parcours (fini) sur une fractale.

  0 show sqrt(2) * sqrt(2)

  0 make it sexy
    0 round corners
    0 "this thing is living" animations


*  0 raster and vector DUO: one window infiniteCanvas, the other paint.net : copy/paste images to and fro

  0 applications:
    0 une année de 4ème:
      0 tangram cat :
        0 translation only :
*         0 unrotatable fObj
          0 unscalable  fObj
            0 fixed scaleX|Y
            0 fixed homeScale

    0 une carte de mes voyages

    0 C-puzzle ("create objects" puzzle) : "recrée avec des formes l'image suivante"

** icObj.type = "url" : open new tab on click
      0 move to next exercise
*  icObj.type = "video"
*	 icObj.type = "webcam"

0 ne pas vouloir trop en faire pour le moment, rester sur quelque chose de simple

22 décembre 2020:
  Internet exists :
*   0 Z-puzzle : have players go find the puzzle pieces (==images to paste on canvas) on the Internet
**  0 CTRL-F on a webCanvasPage

* object wells: click and drag on object well to get an instance
    0 static
    0 animated object wells : le triangle rectangle qui tire des carrés qui disparaissent dans un portail cicatrice, on peut attraper le carré au vol

LES FAIRE FAIRE => il faut qu'ils utilisent l'éditeur à un moment donné

* une représentation de l'espace mental alloué : FORTNITE en gros et Mathématiques en tout tout petit

* le code informatique est lui aussi quelque chose de "moderne", dans le sens où il est porté par une fractale (à la différence du "plain text" (si on ne prend pas en compte les références littéraires ou culturelles))

* Le cours de la 4ème<X>:
    at start of class, file is opened
    during class,      content is edited
    at end of class,   file is saved

*être fiers de moi, c'est pas le but. Mais il faut aussi qu'ils soient un minimum admiratifs, sinon comment adhérer ?

23 décembre 2020:
* La même chose avec les fractions : utiliser l'infinite canvas pour montrer les fractions
    0 enchaînements alternés de découpages verticaux puis horizontaux etc.

* "Nombres en boutons"(== xylophone, fractal rep, etc.)::Somme
    positive side is immutable : get to target number using only negative side buttons (target = negative + positive)
* Probabilités avec les nombres en boutons de fabriquer le nombre N ?

** infiniteCanvas editor is a place for students to run algorithms by hand (? ideal sandbox ?)
    example: create Koch snowflake
    example: create Sierpinski's triangle

    exemple: trier un jeu de cartes...

* skewing exists in fabric => easy parallelograms from square
* Skewing allow easy creation of "big-to-small arrows" from standard arrows

* le project, c'est peut-être augmenter la boîte à outils numériques des élèves :
    - Scratch
    - Geogebra
    - Tableur
    - Infinite Canvas Whiteboard

* visualisation/manipulation des homothéties avec un object well et le zScroll
    Z-Puzzles sur les homothéties


* icObj types:
    [
      //primitive
      rect
      text
      circle

      //composite
      group (== anonymous composite)
      groupWithBgRect (bg rect will allow stroke and fill (== border and backgroundColor))
      card
      doubleObject
    ]

* z-puzzle : user must create group with objects ( zSlot only accepts group with particular properties)

* workingHomeScale : this would allow easy drawing of architectural planes

** mScroll (est-ce que ça a la moindre utilité ?)


** light-sending (== eye-catching) objects : no matter what current infiniteCanvas.scale is, a star grows from object so that it is visible at current infiniteCanvas.scale

** marker objects (on revient au côté whiteboard): those objects are like the other canvas objects, but they are not designed to stay, they are here to ease explanations
    0 toggle show marker objects
    0 clear marker objects

* animation: décollage de fusée
* l'infiniteCanvas permet de matérialiser des expressions du genre "étudier en profondeur" ou "un savoir superficiel"
* presentation : standard "infinite fall" story carrier: each story item is displayed on a square at zoom level n

* dynamic fabric object which parts pop and destruct along with the current pov (follow the yellow road) (this way an infinite object (like an axis) still can be represented)

24 décembre 2020:
* Lien entre le xylophone et les z-puzzles : La balance: target weight / current weight  (peser une planète sur une balance, c'est irréaliste, mais bon...)
**   paradrop:
        "updward" z-scroll(the only available) momentaneously changes object homeScale but object falls down to its natural homescale when released
        sparkle indicates where small object is (if user wants to remove it from the scale(==balance))

*( PUREE ! BALANCE EN ANGLAIS C'EST SCALE! On peut rebondir la dessus.

*edu: angle pas droit: glisser un éléphant dans l'espace intersticiel et ajouter un commentaire à côté "regarde, l'angle est tellement pas droit, qu'on a pu y ajouter un éléphant"

**  student may ask for hint:
      sparkle (light-sender)
      Arrow indicator in HUD ("in this direction, there may be something useful")
        hide arrow indicator when user is "in the object surroundings"
        additionnal upward/downward arrow to avoid using too many sparkles

** Le multiplicateur :
      un objet est sélectionné
      l'utilisateur choisit le type de multiplication : longueurs ou aire
      un nouvel objet est créé selon la multiplication

** Le guide âne pour montrer les découpes de fractions

* xylophone : 10^<n> zone : "nombre sélectionné dans cette zone" : donner plusieurs écritures
    exemples:
      5 x 10^4 : 50 000
      2 x 10^(-3) = 0,002
** /!\ aux erreurs d'arrondi quand on demande à l'ordi de sommer tous les termes
    updateActiveNumber 0.7000000000000001 (when only "sharp 0.7" is active...)
      => use string type
      OR
      => use Math library

** Comment faire pour débugger quand il n'y aura plus de logs pour avoir la meilleure performance possible ?

* zéro est un nombre comme les autres : créer une autre version du xylophone avec le zéro selectionnable et pas de toggle isActive sur les xylophone towers
    (le xylophone vanilla à un zéro "absence")

** xylo abaccus: manage temporary multiple active towers in xyloZone : show timer 3,2,1 and then resolve chaos and bring back order. This can involve cascade updates.

** il y a des problèmes que la civilisation se pose à elle-même : pourquoi avoir gardé le système de position des nombres de la droite vers la gauche alors que l'on lit de gauche à droite en occident ?
    parce que du coup, on se retrouve avec une droite graduée, qui va "dans le mauvais sens"

**xyloSynth: user types number and xylo updates accordingly (though we can't see much with standard xylo) (exponential xylo will be more readable)

* black is a strong color : black zero in xylophone catches the eye a lot, is it a good idea ?

** multiplication de deux segments colorés : utiliser des gradients pour former un damier
    _[___|___|___] segment3, couleur3
   | |
   |_|   à l'intérieur, chaque rectangle (ou carré en fait) est colorié avec un gradient de manière à former un damier (on voit n x m carrés, et on voit que leur couleur c'est un mélange de couleur_n et de couleur_m)
   | |
   [_|
  segment2, couleur2

25 décembre 2020:
* xylophone: ? add sounds ? (en base 9 on peut faire do ré mi fa sol la si do)
  0 ECRIRE EN GROS : ~ 5x homeScale

  *zPuzzle: piecewise hints:
    "la pièce n°2 se trouve au coordonées : x = ...   y = ..." et la position courante est affichée dans le HUD ->> l'élève peut chercher à tatons


** all is there : everything on the same canvas (~The Witness)
      remarque: le xylophone prend déjà une bonne partie de la place
** metagame : stars: get all 20|120 stars (comme dans Mario)
      3 stars for every minigame: easy, medium, hard (ces étoiles apparaissent dans un écrin de verre qu'on enlève en réussissant l'exercice)
**    étoiles d'exploration : some starts are there for the taking

   metagame: completing exercise X gives a puzzle piece for completing exercise Y
***    par exemple des xyloTowers ("touches de xylophone") pour pouvoir écrire des nombres qu'on ne pouvait pas écrire avant (ce qui fait le lien entre (z-)puzzle et xylophone (la xyloTower ne change pas de taille (pour ne pas trop perturber le joueur (au moins au début))))
          ce qui ferait du xylophone un objet central, sur lequel le joueur reviendrait plusieurs fois,
          et qui donnerait au jeu une saveur à la The Witness (autrement dit, une saveur exceptionnelle)
          ou par exemple des xylozones incomplètes aussi, ou même des xylozones adjacentes collées entre-elles (tout un secteur de puissances)
          ou aussi des xylozones avec les xyloTowers qui sont pas mises dans le bon ordre et qu'il faut remettre dans l'ordre avant de pouvoir les utiliser

  (0 beautiful xyloZone : perroquet: oeil(zéro) et ailes(1-9)

**  units converter : user types number and (unit_from; unit_to) and:
      1. the two unit-bound xyloZones are highlighted, unit_from with red border and unit_to with green border for example
      2. each xyloZonePerception has two lines : one for the number expressed in unit_from and the other in unit_to
      so user sees it's only a shift (when units are "scalar units")

*	ne pas réinventer la roue : https://mikemcl.github.io/decimal.js/ (javascript numbers have limited precision)

** separate 10+ mantissa numbers when writing string rep: separator |, or bracketing [] (instead of having to create symbols (we don't write A for 10, we write 10| or [10]))
    + write which base is used (cela va de soi)

* remplacer le point de la notation anglo-saxone par la virgule
** toutes les zones ramenées à unitZone.homeScale: afficher des agrandissements/réductions des différentes zones (un truc avec des lignes à moitié diagonales) pour arriver à un affichage de la somme des composantes à homeScale == unitZone.homeScale

* xylophone: fading optional zeros for decimal number : zero "inside" !!= zero "outside" (==optional) (concept mathémtique: chiffres significatifs)
* xylophone: cadenas à code pour xyloShow: user inputs number via scrollable cylinders

* 0 make xylophone dynamically infinite (destroy/create zones around current scale)

*:'( 2D canvas does not allow non-parallel skewing (~"scale traversing" objects)
    => use a 3D library to have:
      -scale traversing arrows
      -"pov aware" objects (==orienting sprites (as in paper mario))

26 décembre 2020:
***( un hyperlien, c'est juste un portail (dans le sens Portal)
      tous les portails de l'infiniteCanvas sont à sens unique (impossible de se retourner dans un espace 2D et aussi: un portail n'a pas d'épaisseur)
* traverse portal while zScrolling (==while "carrying" object)

* Build Empire State Building tower (ESB tower) with xyloTowers
  =>
* size-preserving z-scroll

** power fractals:
    squares
      8 8 8 8
      8 8 8 8 etc.
      2 2 4 4
      1 1 4 4
    staircase
      1
      [1] [1]
      [2   2] [2   2]
      [4   4   4   4] [4   4   4   4]
      etc.

** 0 Flat xylophone
    0 additions
    0 multiplication: scale "multiplier xylophone" so that the result's area equals B times A's area
      flatXyloB * flatXyloA
  A->   [   1   ]
       2[   1   ]
       2[   1   ]

       ^
       |
       B

*" en fait, y'a que des fractales partout, des conteneurs dans des conteneurs dans des conteneurs, etc. etc. etc.
*" je suis pas idéaliste ; mes idées, je sais qu'elles sont réalisables. (et je le sais parce que "ça" a infusé en moi)
*" l'infiniteCanvas, c'est juste un espace dimensionné pour notre discipline (autrement dit un espace infini)

** toutes ces fractales prennent beaucoup de place, si je pouvais mettre des canvas dans des doubleObjects, ce serait moins encombré, on serait plus à l'aise. Et ce serait davantage rangé. ça ferait comme les niveaux dans Mario64.

*** OPEN YOUR MIND (== "the world from a slit" / "THIS IS UNKNOWN TERRITORY"): initially, the player can only only see a small (_yet infinite_) part of the canvas, because there is a slit and the rest is black and filled with "unknown territory" labels
      open your mind animation: move to slit pov and show user that the slit is growing to a new size (/mutating to a new shape ?)
      -idée de scène initiale:  la caverne de Platon, et ensuite la personne se retourne (grosse animation, stupeur, mydriase etc.)

* a universe in ceiling cat's left eye

** "eye in eye" sequence: reversed image in retina: someone looks to someone which looks to someone, etc.

** entire book in canvas
** entire books : the Library

** time picture frame tunnel:
      __________
      |1940
      |    ______
      |    |1941
      |    |
              ...

* 0 trouver un moyen de symboliser "cette pièce est/n'est pas z-scrollable (i.e. "cette pièce à une taille fixe")"

** z-puzzle: arbre de calcul interactif: targetNumber,currentNumber
      easy: pieces == numbers
      normal: pieces == operators
      hard : pieces == numbers & operators
      => need graph library
        ? https://github.com/anvaka/ngraph.fabric

** z-puzzle: remettre les noms d'objets au bon endroit étant données telles et telles propriétes
    exemple:

** pour le calcul mental: parcours avec un timer: il faut aller récupérer le trésor caché profond en entrant succesivement dans des portes. Si le joueur met trop de temps il est ejecté (zoom-out animation) jusqu'à la porte de départ.
      la zoom-out animation doit être un peu costaude à coder non ?
      en cas de succès : collecter automatiquement l'étoile pour ne pas frustrer le joueur qui avait réussi à la débloquer ?

*[
  mini game ideas so far:
    xylo_write
    xylo_read
    z-puzzle: classic
    (z-)puzzle: arbre de calcul
    (z-)puzzle: range les nombres dans l'ordre croissant (on peut donner une sorte d'indice en mettant un mini xylo la tête en bas pour les nombres négatifs)
    (z-)puzzle: geometry: object names
    timeout travel: standard (pour exercer la mémoire, genre "active l'interrupteur à côté de la mouche", "maintenant, active l'interrupteur à côté de Y")
      on timeout write "time expired" and "you hear a door closing" to warn player that they'll have to start again back from the start
    timeout travel: deeper and deeper: calcul mental
    c-puzzle: évaluer des expressions
      - priorités opératoires
      - nombres relatifs
      - expressions littérales
    s-puzzle: ???
    P-puzzle: géométrie


  big-picture:
    build numbers with only 1 to start with
    xylo recomposition (== (re)compose challenge input)
    unlocked challenges :
      when puzzle is completed: it can set up a challenge
    unlocked "skills":
      object wells:
        numbers
        operators (for example: a well that generates operator "+" puzzle pieces)
        geometric figures
      transformations:
        rotate
        machines:
          x10
          /10
          clone


    unlocked places:
      "open your mind" system
      canvas-container double object (an entire fresh canvas in your fridge or bedroom window)
        and portals to get back to "home canvas"
      "<n> <X> required" door locks
      once Z|S|C-puzzle is complete, it transforms into a doubleObject or a portal (castle door for example)


  tool ideas so far:
    xylo_show
    pythagore_show (avec des carrés)
    photograph: take picture of current rect and create puzzle piece or icImage from it
    clone tool
    repaint tool: input slot, color parameter --> output slot

  edu:
    slow building of year's z-puzzle by getting puzzle piece for each part of year's course when done (slow compositing)

]*

* xylophone for hours/minutes/seconds:

* pythagore_show: show squares (use same "reference square" in all three squares)

((à considérer ultérieurement: divisor drips and square-root waves: puisque j'ai un canevas infini, pourquoi me priver ? http://www.divisorplot.com/
  ((y'a un moment faut se calmer

* essayer un xylophone compact avec les chiffres en mode photo de classe (est-ce que ça va pas faire un peu abrupte ?)

* once again: make it sexy
    0 papier peint "pattern" sur les xylophoneTowers

** showing before dying : avoir un z-puzzle basique à montrer à Paul

** Hue(==anti-sparkle): object opacity getting stronger as we get closer
    trois parfums:
      glassPlaque: only scale matters, (x,y) doesn't matter
      Clameur: obj is "localized" around a particular(x,y,scale) ("nearer, we hear better")
      spook: it disappears when getting too close

** S-Puzzle: slot-only puzzle : user has to enter slot and complete task for slot to fill with completed state (typically, the slot becomes colorful, hence the name)
** C-puzzle: colorize puzzle: user has color palette and must color areas corresponding to number

27 décembre 2020:
** user created sparkles : SparkleMarker:
    - pour se repérer: "true"SparkleMarker
    - pour effectuer des mesures : l'outil mesure peut prendre en entrée des SparkleMarkers, ou créer des sparkleMarker

** edu: choix pédagogique pour les représentations: moi j'aime mon xylophone, mais d'autres préfèreront une autre représentation, libre à eux d'utiliser la représentation qui leur convient, étant donné qu'enseigner, c'est enseigner ce que l'on est.

* save game state: some objects don't need to be saved (since they are generated automatically when page loads)

*PAUL:
  un repère orthonormé pour chaque xyloZone, pourquoi pas, un seul axe en fait, l'axe important, l'axe des ordonnées avec 1 2 3 4 5 6 7 8 9
  z-puzzle: slot avec 1.47 x 10^-3 qui fait écho au papier peint des xyloTowers

* machine à x10, machine à /10 : un slot d'entrée et un slot de sortie

** écrire "taille normale: ..." et surtout _"agrandissement: ..."_ sur une zPièce pour bien montrer que ce n'est pas la taille normale de la pièce

* tous les élèves évoluant sur le même canvas: quel intérêt ? (à part du showoff client-serveur)
    compétition:
      -dynamic leaderboard (ce serait une sorte de course, on pourrait repasser 1er, ou être maintenant 3ème etc.)
    coopération:
      se partager les tâches: ~escape game (il faudrait que les élèves commencent à des endroits différents)

* photograph: take picture of current rect and create puzzle piece or icImage from it: this way user can create keyFrames to create a comic book page

* geometric puzzle: overlapping slots: pieceX has pointA, pointB, pointC labels, pieceY has pointB and pointC and pointD labels, so we know where to put it wrt pieceX
**  P-puzzle (==slotless puzzle, ==le bon vieux puzzle des familles): puzzle can only be completed by assembling adjacent pieces

*res: _DK Wonders of Nature_,  incredible source of beautiful natural objects

28 décembre 2020:
  NUIT HORRIBLE MAIS PROLIFIQUE
* create portal KeyP: select from, select to
* create canvas: a portal to another canvas
*   canvas link : move from any canvas to any canvas, example: triangle A <-> B <-> C et C <-> A
      "KeyBack": return to previous (/parent) canvas
* ? web page as fabric object ? (this way I could include a Scratch page for example), ou bien la page de l'ENT

* point and click a la Myst, from room to room: fake immersion with portal buttons (and back button) (actually, all frames are next to each other, but pov creates the immersion effect)

** Bubble sparkle (comme dans les bandes dessinées): "Hey!"
** PNJ: quêtes annexes:
    - remettre les poules dans l'enclos
    - Link(Zelda): je voudrais une épée plus grande ! "Merci, maintenant c'est moi qui ai la plus grosse."
** enemies: some enemies are wandering around and when they lock on player, scroll & move are locked until enemy is destroyed
*( Level and Xp ?

((
 * encore un peu sur la propagation de l'information:
    tdlr: NOW == SAY (ASSERT)
    - information could be polled every X seconds:
      'now' is eval'd only at discrete (regular or not) intervals
        ==> different versions from different 'sources' ==> revolve conflicts
    - legitimate sources:
        my students say "'now' is this"
        I am no longer legitimate to say what 'now' is
        ==> 'now' is saying "'now' is this"

  * representations::areas of influence: RepA could 'source' 'Network'X and 'Network'Y, RepB could source 'Network'Y and 'Network'Z
))

* Z-Memory: like a classic memory game but slots are big and small

* mirrored xylophone (left) + ESB tower (center) + tower fall on graduations(right)
* piano with sound for each piano key (base 8, do ré mi fa sol la si)
* challenge is there but unreadable:
    stains (need to unlock wiper)
    blur   (need to unlock glasses)

** PreviewSparkle: quand on veut embrasser d'un coup d'oeil des objets de taille très différentes

* 728,4�32�001: show empty space or unknown character for missing xylozone digit
* xkcd: put some mini characters here and there a la xkcd
* Z-Puzzle::Tangram
* NightVision/ThermalVision

* Docteur Maboule
* Z-Labyrinth => object is locked inside walls but can shrink/grow with Z-scroll to get to destination or to get out (the existence of a getout narrow passage is only blatant when zoomed):
    fabriquer un système de collision
    (fabriquer un système d'interrupteur et de portes qui s'ouvrent et se ferment (casse-tête)

* canvas world::scale world: a world with gravity which weighs a collection of objects
    target weight: ...
* Z-spook::telephone numpad (layerN is only visible for f(n)<scale<f(n+1) and opacity==1.0 for layerN.homeScale)
* Spook Challenge::constellation: challenge only appears around a certain (x,y,scale)
* (<X>-)puzzle: color on color: hide piece on top of similar object texture (like the chameleon) ("la pièce marron est cachée dans le pelage du chien")
* (color composer: compose color using R,G,B values ( (or using hexcode...))
* Angle-puzzle:telescope: user can set a precise angle (using arbitrary precision graduations) for the telescope and when the angle is the good one, a star can be fetched inside telescope's objective
* L-puzzle: link puzzle: relier les points
* Puzzles géométriques faisables/impossibles:
    faisables: avec un angle droit:
      Pythagore
      Triangle inscrit dans un cercle
    impossibles: avec un angle presque presque droit (il faut zoomer fort pour trouver pourquoi ça ne snappe pas)
      Pythagore
      Triangle inscrit dans un cercle
      ...

**Z-scroll: trace fading animation (so that user sees than the piece is growing or shrinking (or keeping its size (for non z-scrollable objects)))
* puzzle autour des fractions: Tablette de chocolat: 6 rangés de 4 carreaux (Mathieu)
* Localization challenge: select point with coordinates (x,y) or (r, theta)
    many points are put near the target point to show user that they sometimes need precision and zoom in to discriminate

* Le coin informatique:
    Algo-puzzle: user has to select to right operators to get to result
        operators:
          assignation == mutator == set
          evaluation  == accessor = get

((
Le petit coup de gueule mental de la nuit: "le dénominateur, c'est le nombre en bas": pas d'accord
  En fait je ne suis pas d'accord avec l'appellation dénominateur pour le nombre du bas dans une fraction;
    pour moi on devrait appeler dénominateur le morceau 1/b, de cette manière on serait plus cohérent.
    Quand j'ai 3/5, j'ai 3 cinquièmes == 3 (1/5)èmes. J'ai pas 3 cinqs.

  Lettres (lettre étiquettes et lettres nombres):
  Il y a x filles et y garçons.
  Combien y'a-t-il de filles ? Il y en a x. Ici x a uniquement une fonction numératoire.
  Qu'est-ce qui est en y exemplaires ? Ce sont les garçons. Ici "garçon" a uniquement une fonction dénominatoire.
  Le nombre a ce petit truc en plus par rapport à l'étiquette classique (étiquette classique == incarnation de la fonction dénominatoire) : il a une fonction numératoire.

  Donc: encore plus fort:
  Quand j'ai 3/5, j'ai 3 (1/5)èmes, mais je pourrais aussi dire que j'ai (1/5) trois.

  Soient une espèce d'animaux que l'on note z. On peut prendre 4 exemplaires de z, autrement dit 4 z. Mais on ne pourra jamais prendre z 4.
  On ne peut pas prendre singe 4, mais on peut prendre 4 singes.
  Dans ce cas z est simplement une étiquette. On ne pourra jamais compter avec z.

  En fait, pour décrire un produit de 2 nombres,
    - soit je parle avec un couple (numérateur, dénominateur) (que je peux choisir dans l'ordre que je veux)
    - soit je dis, sans prendre le risque de léser l'un ou l'autre des nombres (qui aurait voulu être numérateur ou dénominateur à la place de l'autre), c'est le produit de x et de y (on est obligé de commencer par l'un ou l'autre mais c'est moins spécialisé (désolé y si tu voulais être en premier)).

  L'idéal serait peut-être de dire: dans un produit avec le symbole "x", le premier terme est le numérateur, le deuxième est le dénominateur.
                                    dans un produit avec le symbole "grand Pi", il n'y a plus de distinctions.
  Une étape importante pour les élèves, c'est de comprendre que 3 x 4 donc "3 quatres", c'est la même chose que 4 x 3, "4 trois". Et l'unité est la clé pour résoudre ce problème (et tourner la tête pour refaire apparaître le rectangle dans le bon sens).
))

* Make it visible:
  Addition: fusion de parcs à moutons
  Multiplication: des moutons avec des moutons à l'intérieur
    ou alors on peut dire que chaque mouton du parc A rêve du parc à moutons B, ce qui fait n x m moutons de rêvés en tout.

* Calculator: missing keys: reassemble it before being able to use it

29 décembre 2020:
  29, c'est déjà un peu plus beau de 28

* code chiffre/son:
    challenge: "712", il faut placer dans slot(=="sertir") un katana

* comptage analogique:
    challenge: "150317": il faut sertir une pièce qui possède 150317 particules dessus
    challenge  "3 jaune/4 rouge": il faut sertir une pièce avec 3 points jaunes et 4 carrés rouges
    challenge: "17": il y a écrit 17 en pointillisme mais il manque deux particules pour faire 17 (le slot est visible, mais subtilement)
    challenge "incomplete rippa: 4/?": double challenge: il y a un outerslot et un inner slot

** Revenir sur les puzzles:
    - soit parce qu'il y a encore des étoiles à récupérer
        Mécanique: correct is good, fast is better
          exemple: le joueur gagne une deuxième étoile en refaisant le z-puzzle en moins de 40 secondes
            cela permet de créer des joueurs qui maîtrisent bien le z-scroll, qui l'ont intégré
    - soit parce qu'on a trouvé la pièce pour l'indice correspondant (MonoZSlotChallenge) (au moment où on a trouvé la pièce, on sait exactement(et c'est vrai) où elle va)
    - soit parce que ça y est on a compris ce qu'il fallait faire (jusque là une(/les) pièce(s) qu'on pensait correspondre à l'indice ne donne(nt) rien: on s'est pris des râteaux)
        exemple typique: le comptage analogique: indice: "150317", pièce à trouver: une pièce qui contient 150317 particules
          le joueur a testé de mettre des objets qu'il pense faire 150317 mètres, de mettre une expression littérale dont le résultat donne peut-être 150317, mais sans succès
          on peut donner un indice au joueur en écrivant 150317 en pointillisme mais le mieux serait de faire ça plus tard

   remarque: les différentes écritures des nombres sont une mine d'or pour créer des challenges

*[
Mécaniques de déroulement: {

  mécaniques:
  couple slot/pièce (SPCouple): une fois que la bonne pièce est snappé dans le slot, le slot s'entoure de vert pour indiquer que c'est bon
  duo indice et SPCouple (MonoZSlotChallenge)
    -l'indice est à côté du SPCouple: classic (outer hint)
    -le SPCouple est dans l'indice:           (container hint)
    -l'indice est écrit dans le slot:         (contained hint)
    -l'indice est écrit dans réparti dans le slot et dans la pièce: (complex contained hint)
  collection de MonoZSlotChallenges avec une logique propre: ZPuzzle
  containerSlot: un slot pour plusieurs pièces ("enclos à poules")
  "greenMouse" piece / vials: "trempez-la dans l'huile, trempez-la dans l'eau, ça fera un escargot tout chaud" (hold click and move around while held: piece mutates while held)
    this will allow user to keep focus, focus being almost captured by the holding down mouse button
    user won't have the possibility to insert a "how about sending a text message to Y ?"-step during the transformation sequence, because _mouse button is held down_.
  fragilePiece(=="fragile greenMouse piece"): => F-Puzzle
    1.user clicks on piece well
    2._while held_, piece can be mutated via mutationAreas (+1, /10, change color, etc.)  (pièces forgées au fil des "trempages")
    3.when piece is dropped:
      if piece is above a slot and corresponds to the slot criteria: piece is kept alive in the slot (slot is filled)
      in any other conditions: piece dies
  fragilePieceTemporarySlot: un avre de paix pour la fragile piece (qui doit peut-être être encore retravaillée), en attendant de rejoindre son slot de destination

  déroulement:
    it would be nice if every new mathematical topic could be introduced by a new puzzle type (this way the user is 'delighted', and could memorize the mathematical topic by remembering the puzzle type)
      en suivant cette logique: faire un challenge mélangeant topicA et topicB serait créer un challenge avec un puzzle mélange de topicA.puzzle et topicB.puzzle

  mutations:
    challenge complété devient:
      slot
      pièce
      challenge
    mutation complexe:
      "step challenge": collection de SPCouples complétés devient une pièce et le challenge "mère" mute également

  wandering around:
    montrer où sont les challenges: NAVI(Zelda) (c'est un objet complexe fabriqué à partir de Sparkle)

  déblocage:
    request:
      from player: player presses "give hint" button
      from game: le jeu demande qu'on donne un indice au joueur
        -à partir d'un certain temps
        -quand le jeu détecte que le joueur commence à être à la traîne par rapport au "peloton"
    les indices en eux-même:
      transformer un indice pour le rendre plus explicite (exemple: pointillisme pour le comptage analogique)
      montrer c'est où:
        sparkle
        HUD arrows
        les cailloux du petit poucet
      montrer un exemple de comment faut faire:
        solution "sèche"
        animation


  revisite:
    Z-puzzle disséminé
    do it faster now / do it real fast now
    color the world: colorier tous les 123 du jeu en rouge,vert,bleu débloque des étoiles (ou une seule étoile si on veut faire un challenge "road to 100% completion")
    the top-down edu principle:
      1. nommer l'objet
      2. rentrer dedans pour étudier ses propriétés

  challenges:
    autour du chiffrement:
      codage
      décodage
    induction:
      objets répétés et emplacement vide: il faut mettre un exemplaire de l'objet répété dans l'emplacement vide
      suites logiques:
        remplir l'emplacement du terme <k>
        remplir l'emplacement du terme général
        suites logiques avec figures géométriques
      fonctions:
        expression
        graphique



  décoration:
    écrire des noms de mathématiciens autour des challenges (+ mettre la photo ?)
      exemples: Sloane pour les suites numériques
                Pascal pour le triangle de Pascal
}
*]

((je le mets histoire de dire, mais je mets pas d'étoile, et j'espère qu'on le mettra pas en place: put the right price on object (on dirait que la raison de pourquoi on l'a pas mis, c'est parce que ce n'est pas stable dans le temps, et on passerait vite à autre chose :))

**philosophie de la montagne(mathématique (ou tout autre discipline)):
    1.reconnaître qu'elle est là, c'est-à-dire la rendre réelle : arrêter de passer au travers comme si elle n'était pas là. D'une certaine manière, la respecter.
    2.Plus on la gravit, plus on peut redescendre en glissant (et prendre de plaisir ce faisant), on peut aussi maintenant faire des figures au dessus des endroits où l'on avait précédemment peiné avec les cordes et piolet et crampons. Une fois qu'on a déjà été une fois à l'altitude h, on peut prendre l'hélicoptère pour y revenir.
    3.une fois qu'on est à l'aise avec un secteur, on peut aider les petits à monter, mais bien sûr, on ne peut pas leur faire prendre l'hélicoptère, sinon pour leur montrer ce qui les attend. (est-ce que ce serait pas quand même du gros spoil bien sale ?)
    4.on peut toujours trouver du nouveau, même dans les secteurs les plus arpentés. ou une couche de neige réconfortante.


((github
*choose license decision tree would be a nice idea for users creating new repos (like me)
    =>~ https://choosealicense.com/ :)
* wow: https://archiveprogram.github.com/
))

** pour les fractions: on pourra diviser par 1000: un rectangle devient 1000 petits rectangles
    combien de 'particules' le système peut-il supporter avant de crasher ?

** edu::pour les 'petits': unités, dixaines, centaines:
    demander à l'élève de construire 2,3,4,5,6,7,8,9,10
    demander à l'élève de construire 20,30,40,50,60,70,80,90,100
    demander à l'élève de construire 200,300,400,500,600,700,800,900,1000
**    bien afficher le fait que 200 contient des conteneurs qui contiennent des unités
**    c'est rébarbatif mais une fois qu'ille l'a fait, normalement, ille commence à avoir une idée du principe des décimaux, et ensuite ille peut passer au xylophone (et placer les nombres qu'ille a construit dans le xylophone)


* snapping: ? écouter la vitesse de la pièce ?

representation system is nice:
  this way the slot could mutate a piece in a blink of a eye:
    0 repaint a piece
    0 change its background texture pattern
    0 change its size
    0 rotate the piece 90° clockwise
    0 its nature
    0 its behavior (activate or deactivate eventListener code)

  0 more complex: change underlying fObj while held: fImage becomes fGroup for example

** relative number piece creation: F-puzzle
    on a un (ou plusieurs) nombre(s) de départ
    on a quelques opérateurs, _mais pas tous_
    et on doit remplir les slots avec des nombres forgés au fil des "trempages"
    exemple: si on a 4 au départ, et que l'on veut fabriquer -10, on trempe la pièce dans "+1" puis dans "x(-2)"
** trempage::équation:    même chose mais on part d'une équation
** trempage::inégalité:   même chose mais on part d'une inégalité
** trempage::encadrement: même chose mais on part d'un encadrement

**When you feel the concrete at the tip of your fingers, when you smell it, when you press your face over rough surface, you might have nice, _sharp_, "concrete-ideas". Otherwise, you might have "far perception-ideas" (which can be nice though, but are too often blurry on closer examination).
    on pourrait même se demander: qu'est-ce qu'on apprécie dans une incarnation ? l'idée qu'elle porte, avant tout ? ou plus simplement, son existence et par conséquent, son interaction avec nous ? (ENCORE UNE FOIS TU VAS TROP LOIN, CHERCHE PAS TROP A FAIRE LE MALIN, RESTE DANS LE BETON MON VIEUX. RAMENE TA FRAISE, JE VAIS TE FAIRE INTERAGIR AVEC UN SAC DE CIMENT. TU VERRAS SI LE POIDS DU SAC EST AVANT TOUT UNE IDEE.)
    Les concrete-ideas, elle se construisent progressivement, avec du concrete. Parfois ça se casse la gueule alors faut reprendre. Dans tous les cas, il faut avoir les mains dedans.
*   Ce qui fait peur, c'est quand on montre des bricolages à des gens qui sont pas du métier. (Toutes ces images complètement trafiquées...)       La réalité, c'est un nez qui coule, c'est un gamin qui pleure.

encore et encore et encore et encore des idées: prout
  est-ce qu'a un moment donné faut dire "stop, tant pis, allez vous faire voir dans un autre cerveau, je vous laisse passer, je vous retiens pas, la sortie c'est par là" ?
    onNewIdea((idea) => {
      //ignore
    })
  tout le temps parler, tout le temps parler, tout le temps parler: prout
  et si on dansait ? et si on écoutait l'Autre ?

* snapping: show that object will be snapped on release (==on drop) (so that user, being informed, chooses to drop it)
* snapping: what would be nice would be to use the norm of a transformation matrix to settle threshold
* snapping: new events: onSnapped, onUnsnapped
* snapping: asymmetrical allowed input size range: 80% - 110% (pour privilégier la fabrication de pièces qui "rentrent")

* on pourrait aussi habituer les élèves, qui savent déjà faire la conversion secondes/minutes/heures/jours/années/siècles/..., à faire la conversion mot/ligne/page/chapitre/livre/armoire/bibliothèque/...

Comme mes élèves, "ils" n'ont rien demandé. Ils se fichent complètement de savoir si la grossesse a été difficile ou pas, de pourquoi j'ai pas avorté. Le rejeton est plutôt agréable ? Tant mieux. Mais personne ne lui a demandé de venir au monde. C'est très étrange, surtout quand on pense à l'attachement que l'on peut avoir pour sa voiture, ou sa planche de skate. C'est moins fun un magasin vide.

* Plus on connaît de représentations, plus on se rapproche du backingObj.

* pov: show active object
* pov: show last action location (object may be deselected but get me to where I was when I last moved it)

** easyFill: _while held_, near enough to slot, object triggers onSnap(or 'onNearSlot', 'onNearEnough'), which leaves piece on slot, mutates held object (for example it can be a bottle of liquid, whose liquid has partially been transfered to the piece occupying slot), so we can continue filling, all in the same drag sequence.
      easyFill could be a simple "leave clone of held object in slot" ('hit and run')
** easyPaint: simple easyFill with color pieces

** bouton réinitialiser semble indispensable pour les challenges avec des effets irréversibles

j'essaye de séparer ce qui relève du jeu et ce qui relève de l'éditeur:
**icObj.snapped et icObj.type = "snapSlot" et icObj.type = "snapGrid" (si l'utilisateur veut une configuration de snap qui lui plaît mieux, il la fabrique lui même avec des snapSlot)
**layoutBag: icObj.flowLayoutBag: icObjects dropped inside automatically arrange in a "top-left if able" manner
    et tous les autres layoutBags auquel on peut naturellement penser
**snapSlot et layoutBag permettent à l'utilisateur de fabriquer des templates de présentation (==des dispositions dont on peut changer les images, les textes, etc., et montrer à l'utilisateur des variations sur un même leitmotiv visuel)
**et du coup, on pourrait relier toutes les instances de dispositions entre elles de manière à pouvoir appliquer des modifs au template qui se répercuteraient sur toutes les instances.
**presentation options: show/hide slots, show/hide layoutBags (c'est moins cracra de faire une présentation quand ils sont cachés)

* res: _Help your kids with Math_ (goldmine)
** montrer un histogramme avec les nombres entiers pour pouvoir ensuite afficher les multiples et les multiples communs
    cela va demander une construction dynamique de l'histogramme
*[
   icObj.type = "dynamicObject"
   icObj.objectsInRect = (rect) => {
    return objects;
   }
*]

** multiplication posée: highlight factors when hovering partial product

** addition de fractions: trouver un dénominateur commun avec une molette en dessous de chaque rectangle (mais attention, il faut pas que les challenge ressemblent trop à un cours de maths)
**   machine à compter les petits carrés: la machine grogne quand il y a des carrés qui ne font pas la même taille dans son "enclos" d'input

** machine à mélanger, machine à démélanger (dilutions)

***SELF-CONTAINED EDITOR: when sending the file to personX, I send the object I want to send, and its editor so personX see the object and then edit it and send me back the new file, so I can see the updated object and edit it etc.
    this would require saving the file in .html, with an object part (json) and an editor part (html/js)
    https://stackoverflow.com/questions/30563157/edit-save-self-modifying-html-document-format-generated-html-javascript
    https://www.reddit.com/r/learnprogramming/comments/4hjz1z/how_can_javascript_in_html_self_modify_and/
    https://github.com/gildas-lormeau/SingleFileZ
    https://github.com/gildas-lormeau/SingleFile
*[
  the dream:
        page.html (zip format)    //facade pour Monsieur Toutlemonde
          lib/                    //intérieur propre pour l'initié
            machin.js
            truc.js
          index.html
          data.json
*]

30 décembre 2020:
  still ideas: à chaque fois je perds du temps à tout recopier, ma pauvre chérie. comment perdre une heure tous les matins.

** flow-machine: la machine déclenche automatiquement la fabrication quand elle a les ingrédients suffisants
**flow-machine::object _fountain_: fountain = well + surrounding pool: when an object leaves the pool, machine automatically creates a new instance so that pool always keeps the same number of elements

* machine:random number machine: cette machine renvoie un nombre au hasard
* machine:random sample machine: cette machine renvoie un clone d'un élément au hazard du pool en input
* machine:random order machine:  cette machine renvoie une liste ordonnée aléatoirement à partir d'un pool en input
* edu: il faut que les machines soit faciles à utiliser, et que les {drags and drop, snap, légère animation de fonctionnement} rendent la chose ludique (__"c'est simple en fait, regarde !"__)


* challenge::chronology (dynamicConstruct timeScale needed)
   example of objects to place: cadillacs and dinosaurs
* challenge::apple tree: the apple to get to is located on a certain branch of the tree. A code is written like 4568541. The idea is to remember the code and press start. Then the player controls an ant, at the foot of the tree, and at each 'crossroads', move to the right branch (first one is 4 for example, next 5 etc.).
* challenge::homothety: select center and ratio (c'est une machine au fonctionnement un peu différent des autres machines ("à slots"))
* challenge::factory: une succession de "flow-machines", bien connectées entre-elles, permet la fabrication d'un objet complexe
    exemple: l'usine à flocons: on part d'une forme simple et on arrive à des flocons (et même une succession random>homothety pour fabriquer des flocons de tailles différentes)
** challenge: find the operator (travailler l'induction):
      il y a une zone d'input, une zone "opérator" (slot dans lequel il faut mettre la bonne pièce), et une zone d'output
      user can try putting in _any input value_, and result automatically displays in output slot
      it's by compiling those (input,ouput) couples that user finally finds the (most probable) matching operator
      greenMouse and vials could be put close, so that input attempts can be done in one held mouse click

* challenge: add parentheses (en fait ça va être assez hardcore à mettre en place je pense)
* challenge: pixel draw puzzle piece (les amener à compter les carreaux)
    easy:   grid has only "unit scale" precision graduations
    medium: grid has "unit to milli" precision graduations
    hard:   grid has arbitrary precision graduations
* challenge: line draw puzzle piece (les amener à comprendre que 1.97 en abscisses, c'est pas 2)
    line end points always snap to grid
    easy:   grid has only "unit scale" precision graduations
    medium: grid has "unit to milli" precision graduations
    hard:   grid has arbitrary precision graduations

* bizarrerie : all same-mantissa xyloTowers leading to same world (portal (montre-t-on à l'utilisateur qu'il passe un portail ou laissons ça 'seamless' ?))

* "self-contained": append datetime to filename so that savedgames look like videogames saved games (you know, when you choose 'load game')
* "self-contained":editable ==> password?
    empêcher les modifications par les petits malins: checksum
      is checksum written in self possible ?
      checksum in editor.js
      checksums everywhere :)
*"self-contained":editable: tool to show edited parts
    pour que je puisse voir si un élève s'amuse à mettre des images de X dans le monde original (bah ouais, vu qu'elle peut être arbitrairement petite faut faire gaffe)

* 9-puzzle with labyrinths: there is a frame for the 9 puzzle precising where start and end are

* edu: amener les élèves à jouer au jeu tous les jours
    exemple de système: day streak star: pour récupérer l'étoile, il faut la recomposer. Chaque jour, la challenge completion donne une fraction d'étoile (un cinquième par exemple). Il faut donc réussir le challenge cinq jours de suite.
* edu: nb max allowed errors: pour éviter que les élèves brute-forcent les exercices. (peut-être qu'il faut les laisser brute-forcer certains exos, que cette répétition peut être utile pédagogiquement, mais certainement pas tous.)
    ou alors on peut dire:
      easy:   infinite nb of attempts
      medium: 3 errors allowed
      hard:   no error allowed
* edu: montre moi que tu as compris: 5 tentatives minium et un taux de réussite supérieur à 3/5, 4/5 ?
    de cette manière: on voit que l'élève a essayé et on voit qu'il a compris ou pas compris
    0 statistiques sur chaque challenge ?

* edu: challenge habillé VS challenge "nu" (==sans aucun texte) (si y'a trop de texte, on va se croire dans un bouquin de maths)
* edu: outil pour analyser la progression de chaque élève
* edu: timestamps for challenge completion to track cheaters and headless-followers
* edu: tolérance:
    geometry: snap when close enough to answer

* edu: mécanisme pour augmenter la difficulté: montrer moins de choses, laisser un peu de calcul mental se faire
        par exemple avec la machine à homothétie: ne pas montrer la figure image intermédiaire quand on bouge le centre de l'homothétie. Indiquer seulement quand c'est bon. (pareil il faudra un peu de snapping dans ce cas, de _tolérance_).

* fractal labyrinth: some sectors are smaller than others, etc.

* sectors : on peut organiser des secteurs autour d'une même thématique
** map: quick access to sectors

* z-puzzle: que l'on soit bien clair: slots could be "z-different" too (et c'est un peu le sel du truc (parce que sinon, une fois que les pièces sont ramenés au même z, ça devient un puzzle classique))

* essayer des xylophones avec rectangles superposés pour avoir une aire valide:
    xylozone:
    [1]
    [ 2 ]
    [   3   ]
    ...
    - le 1 est par dessus le 2, qui est par dessus le 3 etc.,
    - quand on sélectionne une xylotower, elle passe devant et on voit alors que le rectangle fait telle taille
    - la hauteur de tous les rectangles est la même: si la zone est 10^3 alors tous feront 10^3 de hauteur

    0 essayer avec un léger décalage entre les xyloTowers pour qu'on voit dès le départ qu'il y a des rectangles courts et des rectangles longs

* flemme : regarder notes>"notes_a_taper__30_12_2020"

* edu: fil rouge: walking cat: complète le challenge pour que le mur soit détruit et que le chat puisse continuer d'avancer, etc.

** représentation visuelle de la racine carrée:
      fractale de racines carrées en utilisant un triangle rectangle de cathètes 1 et a: l'aire du grand carré sera 1+a².
      même chose avec 2 et a
      (? et en utilisant 10^n et a ?    10^(n/2) et a ?

** transformer un rectangle en carré:
    encore une "fractale" à la shu
      algorithme: 0: prendre le plus carré possible dans le rectangle
                  1+:avec ce qui reste, prendre le plus grand carré possible et 2 rectangles qui vont bien

(( donner comme note à un élève 10^(-2), 10^(-5),... bravo, bel esprit

** greenMouse::GLU: a particular kind of mutation
      the number 7 could be represented by 7 squares glued together
      soaking this representation inside a +2 vial would result in 9 squares glued together

* relative number: [[sign] [absolute value]]

31 décembre 2020:
* multipiece/multislot: le pendant Z game des "unrasterized" groups
    quand on place une multipiece sur un multislot, des slot peuvent être correctement remplis et d'autres non, en gros, c'est pas encore tout à fait correct.
    ça va demander une sorte de tether, de cordée, entre les "atomes"
*   => edu: construire petit à petit une réponse:  l'élève construit sa réponse avec des "atomes" _dépendants_

**_dependance_ : disons que la multipiece contient une pièce "a", et une pièce "2a", alors modifier la valeur de l'un impacte la valeur de l'autre (et réciproquement (si la relation de dépendance est bidirectionnelle))
** dependance::unidirectionnelle, bidirectionnelle

* SlideAndSnapXyloTower: on peut slider verticalement vers la valeur que l'on souhaite et la xyloTower garde la même largueur, elle snappe vers la valeur la plus proche
    cela apprend aussi à l'utilisateur qu'il va pouvoir redimensionner des objets avec les contrôles sur le contour
* "click & snap" xylotower: quand on clique dans la xylozone, elle traduit le click en un snap vers le "taquet" le plus proche
* ClickAndSnapSliderXyloTower semble être encore plus intuitive (on peut "sortir de l'ornière zéro")

* FreeSlideMonochromeXyloTower: on peut slider verticalement vers la valeur que l'on souhaite (pas de snap)
** FreeSlideColoredScalesXyloTower: la tour montre les différents "étages" nécessaires pour aller à la hauteur demandée   (les tours peuvent être ou ne pas être de même largeur)
    L'effet de couleurs changeantes qui se produit quand on déplace le slider doit valoir le coup d'oeil
    On pourrait mettre un effet sonore aussi, ça serait peut être bizarre
    => Il faut un Z-behavior aux petits oignons pour éviter de décevoir l'utilisateur (le z-scroll ne doit pas induire un changement trop important de la "valeur" de la tour)

** greenMouse: slot has countDown (say "3,2,1,0") and then triggers
    - this allows "soak cancel" (actually I wouldn't want to soak it there)
** greenMouse: the longer you stay, the more you get:
    example: the slot is a [+1] slot, then for every second you stay on it, greenMouse gains +1 (if it was 4 it is now 5 etc.)

*snapping: l'important, c'est les valeurs: il faut trouver des valeurs qui soient "juste comme il faut"
*snapping:unsnapping must be "harder" (snapping and unsnapping are asymetrical)

*snapping: snap(): la pièce écoute la version snapped, unsnap(): la pièce écoute la version free

**~mise en abyme/psyOps: dans le canvas infini, montrer des maisons, des immeubles, et quand on zoome dans une fenêtre du bâtiment, on voit un élève en train de joueur au Z-game, et en fait, c'est nous qui jouons à sa place.
    L'idée c'est de faire croire aux élèves que tout le monde joue au jeu et donc que c'est pas un truc de ringard/loser/tête d'ampoule.

***could we actually combine z-scroll and 3d canvas ? (z-scroll would zoom in current z-layer, but keeping z the same)
      (this would open the door to total madness)

*snapping: snap to any canvas 'position' (pas besoin de snapSlot, ici le "snapper" c'est le canvas lui-même)

* le système de représentations pourrait être utilisé pour retrouver un coupable (ou du moins mieux visualiser les différents points de vue)

01 janvier 2021:
* challenge mecanism: 5 seconds to complete: after clicking on start, user has 5 seconds to complete challenge
    greenMouse allows quick mutation combos : c'est rapide de glisser la souris
*   on pourrait aussi imaginer des mappings locaux de touches de clavier (valables uniquement quand le challenge est actif, pour déclencher des mutations (sous le slot il y aura marqué la touche de clavier pour le déclencher))

* challenge: related objects: mutate objects so that a relation is verified
    examples:
      mutate objB so that its area is twice as big as objA's
      mutate objB so that AC is twice as big as AB

* challenge: shmup: shoot numbers: to destroy negative numbers, you have to shoot positive numbers so their sum equals number opposite

02 janvier 2021:
around puzzles:
* polygonal piece
* rounding corners (any angle): inner/outer: courbes de Bézier (pour ne pas se prendre la tête avec les tangences) ?
* any piece shape ==> masks

* puzzle snap types:
    -shape and content-seam (le truc classique sur un puzzle)
    -shape-seam (la pièce snappe même quand les contenus ne font pas la jonction)
    -content-seam (la pièce snappe quand les contenus font la jonction, même si un des pièces déborde sur l'autre) ==> this requires complex z-index mgmt

* create pieces:
*  - machine: piece mould: input: content container (content), operator: piece mould (shape), output: piece with shape and content
** - pokéball: (single-use portable machine) (masked snapshot), user can carry along a puzzle mould, which when placed over content (this could be many objects piled up), and activated, mutates into a puzzle piece with mould shape and captured content

**machine: portable machine, machine is carried along to input location instead of input being carried to machine location
**machine: single-use portable machine: machine can only be successfully activated once

* wearing objects: objects wear out after a certain time, and then disappear
* edu: creation d'automatismes: [
    - timeout challenges
    - wearing objects
    - focus-enlivened wearing objects: what has not been appearing in screen rect for a long time begins wearing
]

*** Paul's idea: "companion app": une application couteau-suisse qui les suit tout au long de l'année et dont les programmes ont été construit par les élèves: ils se servent de ce qu'ils ont construit

** lien entre companion app et game app:
      - use companion in game (companion 'mascot' is visible in the game)
      - unlock companion skills in game (on est moins dans la construction mais plutôt dans l'acquisition)

* edu: docimologie:
    - noter la progression dans le jeu en fin de trimestre, coeff 2 par exemple
      - progression 'notée' vs progression facultative
    - si c'est le cas, il faut empêcher les élèves de tricher

* edu: un jeu qui suit le cours de l'année: à chaque chapitre, le prof donne le code pour débloquer le secteur associé au chapitre
    et il y a un secteur 'hors-piste' qui est toujours ouvert

** take photo and then look for piece content: photographs can now have very high resolution: piece content could be fetched from photograph
* edu:
    1. on marche et on prend des photos
    2. on cherche des objets particuliers dans les photos en zoomant
    3. on fabrique des pièces et on complète le puzzle

**StickSnap: the idea is to stick two pieces together
** L-stick snap: side-length snap: the idea is to stick two pieces together, using a flat side (a "gon"): snap will trigger only if sides length are rigorously equal
    edu: the idea is to make students understand that sometimes, things have to be precise
** P-stick snap: "perfect"(/"profile"/"protein") stick snap: when trying to stick pieces together, pieceA profile must be the anti(==complementary)-profile of pieceB
    same thing: the idea is for students to observe profiles by zooming in
**    edu: il y a un problème avec ce genre d'idée: _jusqu'où s'arrêter_: une fois qu'on a compris le principe, on peut se dire qu'il peut y avoir des "imperfections" cachées n'importe où ("paranoïa de la ligne jamais droite")

** pile up objects on snap slot:
    edu: the right order: poser 1,2,3,4,5,6,7,8,9 dans cet ordre sur le slot
** fifo/lifo: snapSlot could have fifo or lifo behavior

03 janvier 2021:

**meta-challenge: challenge list: challenge<N>.onCompleted(moveToChallenge<N+1>)
  edu: un meta-challenge "prérequis" avant de commencer une nouvelle étape

** greenMouse: activateOnTouch: onEnterActivationZone/onLeaveActivationZone (un peu comme un snapSlot mais ici c'est pas un snap c'est une juste une activation)
** greenMouse: fastGrow/mediumGrow/slowGrow (same effect but different strength)

** challenge: manually create clone: given a model, player has to recreate a clone of it next to it

* mettre des images de déchetteries: d'énormes piles de déchets

edu: miner des idées dans les bouquins de maths:
*edu: decimal dot-to-dot

** Dobble avec des représentations différentes d'un même représenté
  edu: avec les nombres: 1/2 est équivalent à 0.5 qui est équivalent à 5/10, etc.

** le livre dont vous êtes le héros: zoom-in to the branch you chose
** on peut fabriquer un poème fractal avec ce système

***infiniteCanvas exoObject: the idea is this: say we create an object in fabric(which is normally a representation space for icObjects) (typical example: a freeDrawing) and we don't want to know what it is explicitly(its properties, how it works, etc.), _as long as we can serialize it_ we can create an icExoObject which will then be reenacted when fabric.unserialize(icExoObject.payload)
    un peu comme une éponge sèche, que l'on mouille et que l'on fait redevenir une éponge tout à fait valable

**keyDownToggleX + mouseClick: select object
**keyDownToggleY + mouseClick: select object just below
**keyDownToggleZ + mouseClick: select object just above
**mouseDown/up: hold/release _(previously)selected_ object

**challenge: différentes représentations d'un nombre, un nombre au centre et les autres représentations autour avec des flèches et des slots

*puzzle pieces everywhere: puzzle pieces may have a distinctive frame, or symbol, so that we know it should go in a puzzle in sector X

Les grandes étapes de développement restantes: [
  Editeur:
    serialization
    freeDrawing (exoObject)
    Groups
    polyline
    svg

  Jeu:
    Xylophone with texts
    ESB tower
    ZPuzzle:
      basic zPuzzle
      indicator slot (slot borderColor is either green or red depending on .isValidPiece(piece))
    DoubleObjects
    Sparkles
    GreenMouse:
      basic GreenMouse
    Portals
    ...
]





.
